"""
–ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MCP API
"""
import http.server
import socketserver
import webbrowser
import os
import sys
from pathlib import Path

def start_test_server():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ HTTP —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MCP"""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—Ç
    PORT = 8080
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å HTML —Ñ–∞–π–ª–æ–º
    current_dir = Path(__file__).parent
    html_file = current_dir / "mcp_test.html"
    
    if not html_file.exists():
        print(f"‚ùå –§–∞–π–ª {html_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ú–µ–Ω—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –º–æ–≥ –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å HTML —Ñ–∞–π–ª
    os.chdir(current_dir)
    
    class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
        def end_headers(self):
            # –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
            self.send_header('Access-Control-Allow-Origin', '*')
            self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
            self.send_header('Access-Control-Allow-Headers', 'Content-Type, Authorization')
            super().end_headers()
        
        def do_OPTIONS(self):
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è CORS
            self.send_response(200)
            self.end_headers()
    
    try:
        with socketserver.TCPServer(("", PORT), CustomHTTPRequestHandler) as httpd:
            print(f"üöÄ MCP Test Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{PORT}")
            print(f"üìÑ HTML —Ç–µ—Å—Ç–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:{PORT}/mcp_test.html")
            print(f"üîß Backend API: http://localhost:8000")
            print(f"üåê Frontend: http://localhost:5173")
            print("\n" + "="*60)
            print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
            print("="*60)
            print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080/mcp_test.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
            print("2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (admin/admin)")
            print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ MCP endpoints")
            print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞")
            print("="*60)
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
            webbrowser.open(f"http://localhost:{PORT}/mcp_test.html")
            
            print(f"\n‚è≥ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç... –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            httpd.serve_forever()
            
    except KeyboardInterrupt:
        print(f"\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except OSError as e:
        if e.errno == 98:  # Address already in use
            print(f"‚ùå –ü–æ—Ä—Ç {PORT} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç.")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

if __name__ == "__main__":
    start_test_server()
