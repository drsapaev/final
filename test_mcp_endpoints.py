"""
–¢–µ—Å—Ç MCP endpoints –¥–ª—è –ú–ö–ë-10 –∏ –∞–Ω–∞–ª–∏–∑–æ–≤
"""
import requests
import json

def test_mcp_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º MCP endpoints"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP endpoints...")
    
    base_url = "http://localhost:8000/api/v1"
    
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    print("üîê –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    
    try:
        auth_response = requests.post(
            f"{base_url}/auth/minimal-login",
            json={"username": "mcp_test", "password": "test123"},
            headers={"Content-Type": "application/json"}
        )
        
        if auth_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {auth_response.status_code}")
            print(f"Response: {auth_response.text}")
            return
        
        token = auth_response.json()["access_token"]
        headers = {"Authorization": f"Bearer {token}", "Content-Type": "application/json"}
        
        print("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
        return
    
    # –¢–µ—Å—Ç 1: –ú–ö–ë-10 –ø–æ–¥—Å–∫–∞–∑–∫–∏
    print(f"\nüîç –¢–ï–°–¢ 1: MCP –ú–ö–ë-10 –ø–æ–¥—Å–∫–∞–∑–∫–∏")
    
    icd10_data = {
        "symptoms": ["–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å", "—Ç–æ—à–Ω–æ—Ç–∞", "—Å–≤–µ—Ç–æ–±–æ—è–∑–Ω—å"],
        "diagnosis": "–ú–∏–≥—Ä–µ–Ω—å",
        "max_suggestions": 5
    }
    
    try:
        response = requests.post(
            f"{base_url}/mcp/icd10/suggest",
            json=icd10_data,
            headers=headers
        )
        
        print(f"Status: {response.status_code}")
        print(f"Response: {json.dumps(response.json(), ensure_ascii=False, indent=2)}")
        
        if response.status_code == 200:
            result = response.json()
            if "suggested_codes" in result and len(result["suggested_codes"]) > 0:
                print("‚úÖ MCP –ú–ö–ë-10 —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            else:
                print("‚ùå MCP –ú–ö–ë-10 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ MCP –ú–ö–ë-10: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ú–ö–ë-10: {e}")
    
    # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤
    print(f"\nüîç –¢–ï–°–¢ 2: MCP –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤")
    
    lab_data = {
        "results": [
            {
                "name": "–ì–µ–º–æ–≥–ª–æ–±–∏–Ω",
                "value": "120",
                "unit": "–≥/–ª",
                "reference": "120-160"
            },
            {
                "name": "–õ–µ–π–∫–æ—Ü–∏—Ç—ã",
                "value": "15.2",
                "unit": "√ó10‚Åπ/–ª",
                "reference": "4.0-9.0"
            },
            {
                "name": "–°–û–≠",
                "value": "25",
                "unit": "–º–º/—á",
                "reference": "2-15"
            }
        ],
        "patient_age": 45,
        "patient_gender": "female",
        "include_recommendations": True
    }
    
    try:
        response = requests.post(
            f"{base_url}/mcp/lab/interpret",
            json=lab_data,
            headers=headers
        )
        
        print(f"Status: {response.status_code}")
        print(f"Response: {json.dumps(response.json(), ensure_ascii=False, indent=2)}")
        
        if response.status_code == 200:
            result = response.json()
            if "summary" in result and result["summary"]:
                print("‚úÖ MCP –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            else:
                print("‚ùå MCP –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ MCP –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ –ú–ö–ë-10
    print(f"\nüîç –¢–ï–°–¢ 3: MCP –ø–æ–∏—Å–∫ –ú–ö–ë-10")
    
    try:
        response = requests.get(
            f"{base_url}/mcp/icd10/search?query=–º–∏–≥—Ä–µ–Ω—å&limit=5",
            headers=headers
        )
        
        print(f"Status: {response.status_code}")
        print(f"Response: {json.dumps(response.json(), ensure_ascii=False, indent=2)}")
        
        if response.status_code == 200:
            result = response.json()
            if "results" in result and len(result["results"]) > 0:
                print("‚úÖ MCP –ø–æ–∏—Å–∫ –ú–ö–ë-10 —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            else:
                print("‚ùå MCP –ø–æ–∏—Å–∫ –ú–ö–ë-10 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ MCP –ø–æ–∏—Å–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–∏—Å–∫–∞: {e}")

if __name__ == "__main__":
    test_mcp_endpoints()
