#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Docker —Å–±–æ—Ä–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""
import subprocess
import sys
import os
from pathlib import Path

def test_docker_build():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Docker —Å–±–æ—Ä–∫—É"""
    print("üê≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º Docker —Å–±–æ—Ä–∫—É...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    required_files = [
        "ops/backend.Dockerfile",
        "ops/backend.entrypoint.sh", 
        "backend/requirements.txt",
        "backend/app/main.py"
    ]
    
    for file_path in required_files:
        if not Path(file_path).exists():
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            return False
        else:
            print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ entrypoint
    entrypoint_path = Path("ops/backend.entrypoint.sh")
    if not os.access(entrypoint_path, os.R_OK):
        print(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —á—Ç–µ–Ω–∏–µ: {entrypoint_path}")
        return False
    
    print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Docker build (—Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞)
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Dockerfile...")
        result = subprocess.run([
            "docker", "build", 
            "--file", "ops/backend.Dockerfile",
            "--target", "base",
            "--no-cache",
            "."
        ], capture_output=True, text=True, timeout=60)
        
        if result.returncode == 0:
            print("‚úÖ Docker —Å–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ Docker —Å–±–æ—Ä–∫–∏:")
            print(f"STDOUT: {result.stdout}")
            print(f"STDERR: {result.stderr}")
            return False
            
    except subprocess.TimeoutExpired:
        print("‚è∞ –¢–∞–π–º–∞—É—Ç Docker —Å–±–æ—Ä–∫–∏")
        return False
    except FileNotFoundError:
        print("‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    if test_docker_build():
        print("üéâ –¢–µ—Å—Ç Docker —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω!")
        sys.exit(0)
    else:
        print("üí• –¢–µ—Å—Ç Docker —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω!")
        sys.exit(1)
