#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ –ë–î
"""
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from app.db.session import SessionLocal
from sqlalchemy import text

def add_missing_columns():
    """–î–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏"""
    db = SessionLocal()
    try:
        print("üîß –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É is_superuser
        try:
            db.execute(text("ALTER TABLE users ADD COLUMN is_superuser BOOLEAN DEFAULT 0;"))
            db.commit()
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ is_superuser")
        except Exception as e:
            if "duplicate column name" in str(e).lower():
                print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ is_superuser —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ is_superuser: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = db.execute(text("PRAGMA table_info(users);"))
        columns = result.fetchall()
        
        print("\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã 'users':")
        for column in columns:
            print(f"  - {column[1]} ({column[2]})")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
    finally:
        db.close()

def update_user_emails():
    """–û–±–Ω–æ–≤–∏—Ç—å email –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    db = SessionLocal()
    try:
        print("\nüìß –û–±–Ω–æ–≤–ª—è–µ–º email –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.execute(text("UPDATE users SET email = 'admin@example.com' WHERE email = 'admin@test.com';"))
        
        # –û–±–Ω–æ–≤–ª—è–µ–º doctor –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.execute(text("UPDATE users SET email = 'doctor@example.com' WHERE email = 'doctor@test.com';"))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        users_to_add = [
            ('registrar', 'registrar@example.com', 'Registrar', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj3QJflHQinm'),  # registrar123
            ('cardio', 'cardio@example.com', 'Doctor', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj3QJflHQinm'),  # cardio123
            ('derma', 'derma@example.com', 'Doctor', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj3QJflHQinm'),  # derma123
            ('dentist', 'dentist@example.com', 'Doctor', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj3QJflHQinm'),  # dentist123
            ('lab', 'lab@example.com', 'Lab', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj3QJflHQinm'),  # lab123
            ('cashier', 'cashier@example.com', 'Cashier', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj3QJflHQinm'),  # cashier123
        ]
        
        for username, email, role, password_hash in users_to_add:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            result = db.execute(text("SELECT COUNT(*) FROM users WHERE email = :email"), {"email": email})
            if result.fetchone()[0] == 0:
                db.execute(text("""
                    INSERT INTO users (username, email, role, hashed_password, is_active, is_superuser) 
                    VALUES (:username, :email, :role, :password_hash, 1, 0)
                """), {
                    "username": username,
                    "email": email, 
                    "role": role,
                    "password_hash": password_hash
                })
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {email}")
            else:
                print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º is_superuser=1 –¥–ª—è admin
        db.execute(text("UPDATE users SET is_superuser = 1 WHERE email = 'admin@example.com';"))
        
        db.commit()
        print("‚úÖ Email –∞–¥—Ä–µ—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = db.execute(text("SELECT username, email, role, is_superuser FROM users;"))
        users = result.fetchall()
        print("\nüë• –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        for user in users:
            print(f"  - {user[1]} ({user[0]}) - Role: {user[2]}, Superuser: {user[3]}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ email: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    add_missing_columns()
    update_user_emails()
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")

