#!/usr/bin/env python3
"""–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Ä–æ–ª–µ–π"""

import requests
import json
from datetime import datetime, timedelta
from jose import jwt
from app.core.config import settings

def test_auth():
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    print("üîç –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω...")
    payload = {'sub': '19', 'user_id': 19, 'username': 'admin@example.com'}
    token = jwt.encode({**payload, 'exp': datetime.utcnow() + timedelta(hours=1)},
                      settings.SECRET_KEY,
                      algorithm=getattr(settings, 'ALGORITHM', 'HS256'))
    print(f"‚úÖ –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω: {token[:50]}...")

    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º endpoint /auth/me
    print("\nüîç –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º /auth/me...")
    headers = {'Authorization': f'Bearer {token}'}
    try:
        response = requests.get('http://localhost:8000/api/v1/auth/me', headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            user_data = response.json()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('username')}")
            print(f"   ID: {user_data.get('id')}")
            print(f"   –†–æ–ª–∏: {user_data.get('roles', [])}")
        elif response.status_code == 401:
            print("‚ùå 401: –¢–æ–∫–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º /admin/wizard-settings
    print("\nüîç –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º /admin/wizard-settings...")
    try:
        response = requests.get('http://localhost:8000/api/v1/admin/wizard-settings', headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã: {data}")
        elif response.status_code == 401:
            print("‚ùå 401: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å Admin/Registrar)")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º /users/users
    print("\nüîç –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º /users/users...")
    try:
        response = requests.get('http://localhost:8000/api/v1/users/users', headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã: {len(data.get('users', []))} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        elif response.status_code == 401:
            print("‚ùå 401: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å Admin)")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    test_auth()
