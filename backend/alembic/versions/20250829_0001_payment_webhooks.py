"""Add payment webhooks tables

Revision ID: 20250829_0001
Revises: 20250818_0005
Create Date: 2025-08-29 06:45:00.000000

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "20250829_0001"
down_revision = "20250818_0005"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Создаём таблицу payment_providers
    op.create_table(
        "payment_providers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("code", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False, default=True),
        sa.Column("webhook_url", sa.String(length=500), nullable=True),
        sa.Column("api_key", sa.String(length=500), nullable=True),
        sa.Column("secret_key", sa.String(length=500), nullable=True),
        sa.Column("commission_percent", sa.Integer(), nullable=False, default=0),
        sa.Column("min_amount", sa.Integer(), nullable=False, default=0),
        sa.Column("max_amount", sa.Integer(), nullable=False, default=100000000),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    # Создаём индексы для payment_providers
    op.create_index(
        op.f("ix_payment_providers_code"), "payment_providers", ["code"], unique=True
    )
    op.create_index(
        op.f("ix_payment_providers_id"), "payment_providers", ["id"], unique=False
    )

    # Создаём таблицу payment_webhooks
    op.create_table(
        "payment_webhooks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("provider", sa.String(length=50), nullable=False),
        sa.Column("webhook_id", sa.String(length=100), nullable=False),
        sa.Column("transaction_id", sa.String(length=100), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False, default="pending"),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False, default="UZS"),
        sa.Column("raw_data", sqlite.JSON, nullable=False),
        sa.Column("signature", sa.String(length=500), nullable=True),
        sa.Column("visit_id", sa.Integer(), nullable=True),
        sa.Column("patient_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("processed_at", sa.DateTime(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    # Создаём индексы для payment_webhooks
    op.create_index(
        op.f("ix_payment_webhooks_id"), "payment_webhooks", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_payment_webhooks_provider"),
        "payment_webhooks",
        ["provider"],
        unique=False,
    )
    op.create_index(
        op.f("ix_payment_webhooks_webhook_id"),
        "payment_webhooks",
        ["webhook_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_payment_webhooks_transaction_id"),
        "payment_webhooks",
        ["transaction_id"],
        unique=False,
    )

    # Создаём таблицу payment_transactions
    op.create_table(
        "payment_transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.String(length=100), nullable=False),
        sa.Column("provider", sa.String(length=50), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False, default="UZS"),
        sa.Column("commission", sa.Integer(), nullable=False, default=0),
        sa.Column("status", sa.String(length=20), nullable=False, default="pending"),
        sa.Column("webhook_id", sa.Integer(), nullable=True),
        sa.Column("visit_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    # Создаём индексы для payment_transactions
    op.create_index(
        op.f("ix_payment_transactions_id"), "payment_transactions", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_payment_transactions_transaction_id"),
        "payment_transactions",
        ["transaction_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_payment_transactions_provider"),
        "payment_transactions",
        ["provider"],
        unique=False,
    )

    # SQLite не поддерживает внешние ключи через ALTER, поэтому не создаём их
    # Связи будут обрабатываться на уровне приложения

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Удаляем индексы
    op.drop_index(
        op.f("ix_payment_transactions_provider"), table_name="payment_transactions"
    )
    op.drop_index(
        op.f("ix_payment_transactions_transaction_id"),
        table_name="payment_transactions",
    )
    op.drop_index(op.f("ix_payment_transactions_id"), table_name="payment_transactions")
    op.drop_index(
        op.f("ix_payment_webhooks_transaction_id"), table_name="payment_webhooks"
    )
    op.drop_index(op.f("ix_payment_webhooks_webhook_id"), table_name="payment_webhooks")
    op.drop_index(op.f("ix_payment_webhooks_provider"), table_name="payment_webhooks")
    op.drop_index(op.f("ix_payment_webhooks_id"), table_name="payment_webhooks")
    op.drop_index(op.f("ix_payment_providers_id"), table_name="payment_providers")
    op.drop_index(op.f("ix_payment_providers_code"), table_name="payment_providers")

    # Удаляем таблицы
    op.drop_table("payment_transactions")
    op.drop_table("payment_webhooks")
    op.drop_table("payment_providers")

    # ### end Alembic commands ###
