"""create_services_tables

Revision ID: 053da07fa7dc
Revises: 20250925_0005
Create Date: 2025-10-01 22:37:00.707628

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '053da07fa7dc'
down_revision = '20250925_0005'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_patient_loyalty_patient', table_name='patient_loyalty')
    op.drop_index('idx_patient_loyalty_program', table_name='patient_loyalty')
    op.drop_index('ix_patient_loyalty_id', table_name='patient_loyalty')
    op.drop_table('patient_loyalty')
    op.drop_index('idx_patient_benefits_active', table_name='patient_benefits')
    op.drop_index('idx_patient_benefits_expiry', table_name='patient_benefits')
    op.drop_index('idx_patient_benefits_patient', table_name='patient_benefits')
    op.drop_index('ix_patient_benefits_id', table_name='patient_benefits')
    op.drop_table('patient_benefits')
    op.drop_index('ix_feature_flags_id', table_name='feature_flags')
    op.drop_index('ix_feature_flags_key', table_name='feature_flags')
    op.drop_table('feature_flags')
    op.drop_table('user_groups_association')
    op.drop_index('idx_webhooks_created_by', table_name='webhooks')
    op.drop_index('idx_webhooks_is_active', table_name='webhooks')
    op.drop_index('idx_webhooks_status', table_name='webhooks')
    op.drop_index('idx_webhooks_uuid', table_name='webhooks')
    op.drop_table('webhooks')
    op.drop_index('idx_discounts_active', table_name='discounts')
    op.drop_index('idx_discounts_dates', table_name='discounts')
    op.drop_index('idx_discounts_priority', table_name='discounts')
    op.drop_index('idx_discounts_type', table_name='discounts')
    op.drop_index('ix_discounts_id', table_name='discounts')
    op.drop_index('ix_discounts_name', table_name='discounts')
    op.drop_table('discounts')
    op.drop_index('idx_webhook_calls_created_at', table_name='webhook_calls')
    op.drop_index('idx_webhook_calls_event_type', table_name='webhook_calls')
    op.drop_index('idx_webhook_calls_status', table_name='webhook_calls')
    op.drop_index('idx_webhook_calls_uuid', table_name='webhook_calls')
    op.drop_index('idx_webhook_calls_webhook_id', table_name='webhook_calls')
    op.drop_table('webhook_calls')
    op.drop_index('ix_invoice_items_id', table_name='invoice_items')
    op.drop_table('invoice_items')
    op.drop_index('ix_invoice_templates_id', table_name='invoice_templates')
    op.drop_table('invoice_templates')
    op.drop_index('idx_pricing_rule_services_rule_service', table_name='pricing_rule_services')
    op.drop_index('ix_pricing_rule_services_id', table_name='pricing_rule_services')
    op.drop_table('pricing_rule_services')
    op.drop_index('ix_billing_settings_id', table_name='billing_settings')
    op.drop_table('billing_settings')
    op.drop_index('idx_invoices_due_date', table_name='invoices')
    op.drop_index('idx_invoices_issue_date', table_name='invoices')
    op.drop_index('idx_invoices_patient_status', table_name='invoices')
    op.drop_index('ix_invoices_id', table_name='invoices')
    op.drop_index('ix_invoices_invoice_number', table_name='invoices')
    op.drop_table('invoices')
    op.drop_index('idx_discount_applications_date', table_name='discount_applications')
    op.drop_index('idx_discount_applications_discount', table_name='discount_applications')
    op.drop_index('ix_discount_applications_id', table_name='discount_applications')
    op.drop_table('discount_applications')
    op.drop_index('idx_benefit_applications_benefit', table_name='benefit_applications')
    op.drop_index('idx_benefit_applications_date', table_name='benefit_applications')
    op.drop_index('ix_benefit_applications_id', table_name='benefit_applications')
    op.drop_table('benefit_applications')
    op.drop_index('idx_billing_rules_active_event', table_name='billing_rules')
    op.drop_index('ix_billing_rules_id', table_name='billing_rules')
    op.drop_table('billing_rules')
    op.drop_index('idx_service_packages_active_dates', table_name='service_packages')
    op.drop_index('ix_service_packages_id', table_name='service_packages')
    op.drop_index('ix_service_packages_name', table_name='service_packages')
    op.drop_table('service_packages')
    op.drop_index('ix_feature_flag_history_flag_key', table_name='feature_flag_history')
    op.drop_index('ix_feature_flag_history_id', table_name='feature_flag_history')
    op.drop_table('feature_flag_history')
    op.drop_index('idx_benefits_active', table_name='benefits')
    op.drop_index('idx_benefits_type', table_name='benefits')
    op.drop_index('ix_benefits_id', table_name='benefits')
    op.drop_index('ix_benefits_name', table_name='benefits')
    op.drop_table('benefits')
    op.drop_index('idx_loyalty_transactions_date', table_name='loyalty_point_transactions')
    op.drop_index('idx_loyalty_transactions_patient', table_name='loyalty_point_transactions')
    op.drop_index('ix_loyalty_point_transactions_id', table_name='loyalty_point_transactions')
    op.drop_table('loyalty_point_transactions')
    op.drop_index('idx_package_purchases_patient_package', table_name='package_purchases')
    op.drop_index('ix_package_purchases_id', table_name='package_purchases')
    op.drop_table('package_purchases')
    op.drop_index('ix_user_permissions_id', table_name='user_permissions')
    op.drop_table('user_permissions')
    op.drop_index('idx_loyalty_programs_active', table_name='loyalty_programs')
    op.drop_index('ix_loyalty_programs_id', table_name='loyalty_programs')
    op.drop_table('loyalty_programs')
    op.drop_index('idx_price_history_service_date', table_name='price_history')
    op.drop_index('ix_price_history_id', table_name='price_history')
    op.drop_table('price_history')
    op.drop_index('idx_webhook_events_created_at', table_name='webhook_events')
    op.drop_index('idx_webhook_events_event_type', table_name='webhook_events')
    op.drop_index('idx_webhook_events_processed', table_name='webhook_events')
    op.drop_index('idx_webhook_events_uuid', table_name='webhook_events')
    op.drop_table('webhook_events')
    op.drop_index('ix_package_services_id', table_name='package_services')
    op.drop_table('package_services')
    op.drop_index('idx_reminders_scheduled_sent', table_name='payment_reminders')
    op.drop_index('ix_payment_reminders_id', table_name='payment_reminders')
    op.drop_table('payment_reminders')
    op.drop_index('ix_discount_services_id', table_name='discount_services')
    op.drop_table('discount_services')
    op.drop_index('idx_dynamic_prices_service_effective', table_name='dynamic_prices')
    op.drop_index('ix_dynamic_prices_id', table_name='dynamic_prices')
    op.drop_table('dynamic_prices')
    op.drop_index('idx_pricing_rules_active_dates', table_name='pricing_rules')
    op.drop_index('ix_pricing_rules_id', table_name='pricing_rules')
    op.drop_index('ix_pricing_rules_name', table_name='pricing_rules')
    op.drop_table('pricing_rules')
    op.drop_index('ix_user_group_members_id', table_name='user_group_members')
    op.drop_table('user_group_members')
    op.alter_column('activations', 'status',
               existing_type=sa.VARCHAR(length=7),
               server_default=None,
               existing_nullable=False)
    op.drop_index('idx_activations_key', table_name='activations')
    op.drop_index('idx_activations_machine_hash', table_name='activations')
    op.alter_column('appointments', 'visit_type',
               existing_type=sa.VARCHAR(length=16),
               server_default=None,
               existing_nullable=True)
    op.alter_column('appointments', 'payment_type',
               existing_type=sa.VARCHAR(length=16),
               server_default=None,
               existing_nullable=True)
    op.alter_column('audit_logs', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('audit_logs', 'action',
               existing_type=sa.TEXT(),
               type_=sa.String(length=64),
               existing_nullable=False)
    op.alter_column('audit_logs', 'entity_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=64),
               existing_nullable=True)
    op.alter_column('audit_logs', 'payload',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('audit_logs', 'created_at',
               existing_type=sa.TEXT(),
               server_default=None,
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_index('ix_audit_logs_created_at', table_name='audit_logs')
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_actor_user_id'), 'audit_logs', ['actor_user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_id'), 'audit_logs', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_type'), 'audit_logs', ['entity_type'], unique=False)
    op.alter_column('daily_queues', 'online_start_time',
               existing_type=sa.VARCHAR(length=5),
               server_default=None,
               existing_nullable=False)
    op.alter_column('daily_queues', 'online_end_time',
               existing_type=sa.VARCHAR(length=5),
               server_default=None,
               existing_nullable=False)
    op.alter_column('daily_queues', 'max_online_entries',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.drop_index('idx_daily_queues_cabinet_number', table_name='daily_queues')
    op.drop_index('ix_daily_queues_day_queue_tag', table_name='daily_queues')
    op.drop_index('ix_daily_queues_day_specialist_tag', table_name='daily_queues')
    op.create_index(op.f('ix_daily_queues_cabinet_number'), 'daily_queues', ['cabinet_number'], unique=False)
    op.drop_constraint(None, 'daily_queues', type_='foreignkey')
    op.create_foreign_key(None, 'daily_queues', 'users', ['specialist_id'], ['id'])
    op.alter_column('doctor_price_overrides', 'status',
               existing_type=sa.VARCHAR(length=32),
               server_default=None,
               existing_nullable=False)
    op.alter_column('doctor_price_overrides', 'notification_sent',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('doctor_price_overrides', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('doctor_price_overrides', 'updated_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.create_foreign_key(None, 'doctors', 'branches', ['branch_id'], ['id'])
    op.alter_column('emr', 'vital_signs',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emr', 'lab_results',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emr', 'imaging_results',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emr', 'medications',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emr', 'allergies',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emr', 'family_history',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emr', 'social_history',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emr', 'ai_suggestions',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('emr', 'ai_confidence',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=True)
    op.create_index(op.f('ix_files_folder_id'), 'files', ['folder_id'], unique=False)
    op.alter_column('lab_orders', 'status',
               existing_type=sa.VARCHAR(length=16),
               server_default=None,
               existing_nullable=False)
    op.alter_column('lab_orders', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.drop_index('ix_lab_orders_patient', table_name='lab_orders')
    op.drop_index('ix_lab_orders_status', table_name='lab_orders')
    op.drop_index('ix_lab_orders_visit', table_name='lab_orders')
    op.create_index(op.f('ix_lab_orders_patient_id'), 'lab_orders', ['patient_id'], unique=False)
    op.create_index(op.f('ix_lab_orders_visit_id'), 'lab_orders', ['visit_id'], unique=False)
    op.alter_column('lab_results', 'abnormal',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('lab_results', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.drop_index('ix_lab_results_code', table_name='lab_results')
    op.drop_index('ix_lab_results_order', table_name='lab_results')
    op.create_index(op.f('ix_lab_results_order_id'), 'lab_results', ['order_id'], unique=False)
    op.create_index(op.f('ix_lab_results_test_code'), 'lab_results', ['test_code'], unique=False)
    op.drop_index('ix_online_days_date', table_name='online_days')
    op.drop_index('ix_online_days_dep', table_name='online_days')
    op.drop_index('uq_online_day_dep_date__uniq_idx', table_name='online_days')
    op.create_index(op.f('ix_online_days_date_str'), 'online_days', ['date_str'], unique=False)
    op.create_index(op.f('ix_online_days_department'), 'online_days', ['department'], unique=False)
    op.create_index(op.f('ix_online_days_id'), 'online_days', ['id'], unique=False)
    op.create_unique_constraint('uq_online_day_dep_date', 'online_days', ['department', 'date_str'])
    op.alter_column('patients', 'last_name',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=128),
               nullable=False)
    op.alter_column('patients', 'first_name',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=128),
               nullable=False)
    op.alter_column('patients', 'middle_name',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=128),
               existing_nullable=True)
    op.alter_column('patients', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.drop_index('ix_patients_doc', table_name='patients')
    op.drop_index('ix_patients_phone', table_name='patients')
    op.create_index(op.f('ix_patients_first_name'), 'patients', ['first_name'], unique=False)
    op.create_index(op.f('ix_patients_last_name'), 'patients', ['last_name'], unique=False)
    op.create_unique_constraint(None, 'patients', ['user_id'])
    op.drop_index('uq_payment_invoice_visits_invoice_visit', table_name='payment_invoice_visits')
    op.alter_column('payment_invoices', 'currency',
               existing_type=sa.VARCHAR(length=8),
               server_default=None,
               existing_nullable=False)
    op.alter_column('payment_invoices', 'status',
               existing_type=sa.VARCHAR(length=32),
               server_default=None,
               existing_nullable=False)
    op.alter_column('payment_invoices', 'payment_method',
               existing_type=sa.VARCHAR(length=32),
               server_default=None,
               existing_nullable=False)
    op.alter_column('payment_invoices', 'commission',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               server_default=None,
               existing_nullable=True)
    op.add_column('payment_providers', sa.Column('merchant_id', sa.String(length=100), nullable=True))
    op.add_column('payment_providers', sa.Column('service_id', sa.String(length=100), nullable=True))
    op.add_column('payment_providers', sa.Column('supported_currencies', sa.String(length=100), nullable=True))
    op.add_column('payment_providers', sa.Column('config', sa.JSON(), nullable=True))
    op.create_unique_constraint(None, 'payment_providers', ['name'])
    op.add_column('payment_transactions', sa.Column('payment_id', sa.Integer(), nullable=True))
    op.add_column('payment_transactions', sa.Column('provider_data', sa.JSON(), nullable=True))
    op.add_column('payment_transactions', sa.Column('error_message', sa.Text(), nullable=True))
    op.alter_column('payment_transactions', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=False)
    op.create_index(op.f('ix_payment_transactions_payment_id'), 'payment_transactions', ['payment_id'], unique=False)
    op.create_index(op.f('ix_payment_transactions_visit_id'), 'payment_transactions', ['visit_id'], unique=False)
    op.create_index(op.f('ix_payment_transactions_webhook_id'), 'payment_transactions', ['webhook_id'], unique=False)
    op.create_foreign_key(None, 'payment_transactions', 'payment_webhooks', ['webhook_id'], ['id'])
    op.create_foreign_key(None, 'payment_transactions', 'payments', ['payment_id'], ['id'])
    op.add_column('payment_webhooks', sa.Column('payment_status', sa.String(length=32), nullable=True))
    op.add_column('payment_webhooks', sa.Column('payment_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_payment_webhooks_patient_id'), 'payment_webhooks', ['patient_id'], unique=False)
    op.create_index(op.f('ix_payment_webhooks_payment_id'), 'payment_webhooks', ['payment_id'], unique=False)
    op.create_index(op.f('ix_payment_webhooks_visit_id'), 'payment_webhooks', ['visit_id'], unique=False)
    op.create_foreign_key(None, 'payment_webhooks', 'payments', ['payment_id'], ['id'])
    op.alter_column('payments', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('payments', 'amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               server_default=None,
               existing_nullable=False)
    op.alter_column('payments', 'currency',
               existing_type=sa.VARCHAR(length=8),
               server_default=None,
               existing_nullable=False)
    op.alter_column('payments', 'method',
               existing_type=sa.VARCHAR(length=32),
               server_default=None,
               existing_nullable=False)
    op.alter_column('payments', 'status',
               existing_type=sa.VARCHAR(length=32),
               server_default=None,
               existing_nullable=False)
    op.alter_column('payments', 'commission',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               server_default=None,
               existing_nullable=True)
    op.drop_index('idx_payments_method', table_name='payments')
    op.drop_index('idx_payments_provider', table_name='payments')
    op.drop_index('idx_payments_provider_payment_id', table_name='payments')
    op.drop_index('idx_payments_provider_transaction_id', table_name='payments')
    op.drop_index('idx_payments_status', table_name='payments')
    op.drop_index('idx_payments_visit_id', table_name='payments')
    op.create_index(op.f('ix_payments_provider'), 'payments', ['provider'], unique=False)
    op.create_index(op.f('ix_payments_provider_payment_id'), 'payments', ['provider_payment_id'], unique=False)
    op.create_index(op.f('ix_payments_provider_transaction_id'), 'payments', ['provider_transaction_id'], unique=False)
    op.create_index(op.f('ix_payments_visit_id'), 'payments', ['visit_id'], unique=False)
    op.drop_column('payments', 'cashier_id')
    op.alter_column('permission_audit_log', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('permission_audit_log', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index('idx_permission_audit_log_action', table_name='permission_audit_log')
    op.drop_index('idx_permission_audit_log_user', table_name='permission_audit_log')
    op.create_index(op.f('ix_permission_audit_log_action'), 'permission_audit_log', ['action'], unique=False)
    op.create_index(op.f('ix_permission_audit_log_id'), 'permission_audit_log', ['id'], unique=False)
    op.create_index(op.f('ix_permission_audit_log_user_id'), 'permission_audit_log', ['user_id'], unique=False)
    op.alter_column('permissions', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('permissions', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('permissions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('permissions', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index('idx_permissions_category', table_name='permissions')
    op.drop_index('idx_permissions_codename', table_name='permissions')
    op.create_index(op.f('ix_permissions_category'), 'permissions', ['category'], unique=False)
    op.create_index(op.f('ix_permissions_codename'), 'permissions', ['codename'], unique=True)
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.drop_index('ix_queue_entries_source_created_at', table_name='queue_entries')
    op.drop_index('ix_queue_entries_visit_id_status', table_name='queue_entries')
    op.create_foreign_key(None, 'queue_entries', 'visits', ['visit_id'], ['id'])
    op.drop_column('queue_entries', 'data_version')
    op.drop_column('queue_entries', 'print_data')
    op.drop_column('queue_entries', 'called_by_user_id')
    op.drop_column('queue_entries', 'printed_at')
    op.alter_column('role_hierarchy', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('role_hierarchy', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.create_index(op.f('ix_role_hierarchy_child_role_id'), 'role_hierarchy', ['child_role_id'], unique=False)
    op.create_index(op.f('ix_role_hierarchy_id'), 'role_hierarchy', ['id'], unique=False)
    op.create_index(op.f('ix_role_hierarchy_parent_role_id'), 'role_hierarchy', ['parent_role_id'], unique=False)
    op.add_column('role_permissions', sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('role_permissions', sa.Column('granted_by', sa.Integer(), nullable=True))
    op.drop_index('ix_role_permissions_id', table_name='role_permissions')
    op.drop_constraint(None, 'role_permissions', type_='foreignkey')
    op.drop_constraint(None, 'role_permissions', type_='foreignkey')
    op.create_foreign_key(None, 'role_permissions', 'users', ['granted_by'], ['id'])
    op.create_foreign_key(None, 'role_permissions', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'role_permissions', 'permissions', ['permission_id'], ['id'], ondelete='CASCADE')
    op.drop_column('role_permissions', 'id')
    op.drop_column('role_permissions', 'created_at')
    op.alter_column('roles', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('roles', 'level',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('roles', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('roles', 'is_system',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('roles', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('roles', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index('idx_roles_name', table_name='roles')
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.alter_column('schedule_templates', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_index('ix_sched_dep', table_name='schedule_templates')
    op.drop_index('ix_sched_doc', table_name='schedule_templates')
    op.drop_index('ix_sched_wd', table_name='schedule_templates')
    op.create_index(op.f('ix_schedule_templates_department'), 'schedule_templates', ['department'], unique=False)
    op.create_index(op.f('ix_schedule_templates_doctor_id'), 'schedule_templates', ['doctor_id'], unique=False)
    op.create_index(op.f('ix_schedule_templates_id'), 'schedule_templates', ['id'], unique=False)
    op.create_index(op.f('ix_schedule_templates_weekday'), 'schedule_templates', ['weekday'], unique=False)
    op.add_column('service_catalog', sa.Column('currency', sa.String(length=8), nullable=True))
    op.alter_column('service_catalog', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=256),
               existing_nullable=False)
    op.alter_column('service_catalog', 'price',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               server_default=None,
               nullable=True)
    op.alter_column('service_catalog', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('service_catalog', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.drop_index('ix_service_catalog_dept', table_name='service_catalog')
    op.drop_index('ux_service_catalog_code', table_name='service_catalog')
    op.create_index(op.f('ix_service_catalog_code'), 'service_catalog', ['code'], unique=False)
    op.create_index(op.f('ix_service_catalog_name'), 'service_catalog', ['name'], unique=False)
    op.drop_column('service_catalog', 'department')
    op.drop_column('service_catalog', 'updated_at')
    op.drop_column('service_catalog', 'unit')
    op.alter_column('services', 'duration_minutes',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('services', 'requires_doctor',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('services', 'is_consultation',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('services', 'allow_doctor_price_override',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.create_index(op.f('ix_services_category_code'), 'services', ['category_code'], unique=False)
    op.create_index(op.f('ix_services_service_code'), 'services', ['service_code'], unique=True)
    op.create_foreign_key(None, 'services', 'doctors', ['doctor_id'], ['id'])
    op.create_foreign_key(None, 'services', 'service_categories', ['category_id'], ['id'])
    op.alter_column('settings', 'category',
               existing_type=sa.VARCHAR(length=64),
               server_default=None,
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('settings', 'key',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('settings', 'value',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.alter_column('settings', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('settings', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_index('ix_settings_category', table_name='settings')
    op.drop_index('ux_settings_cat_key', table_name='settings')
    op.create_index(op.f('ix_settings_id'), 'settings', ['id'], unique=False)
    op.create_unique_constraint('uq_settings_category_key', 'settings', ['category', 'key'])
    op.alter_column('telegram_configs', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('telegram_configs', 'bot_token',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
    op.alter_column('telegram_configs', 'webhook_url',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=300),
               existing_nullable=True)
    op.alter_column('telegram_configs', 'webhook_secret',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('telegram_configs', 'bot_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=150),
               existing_nullable=True)
    op.alter_column('telegram_configs', 'notifications_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_configs', 'appointment_reminders',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_configs', 'lab_results_notifications',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_configs', 'payment_notifications',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_configs', 'default_language',
               existing_type=sa.VARCHAR(length=10),
               server_default=None,
               type_=sa.String(length=5),
               nullable=False)
    op.alter_column('telegram_configs', 'supported_languages',
               existing_type=sqlite.JSON(),
               nullable=False)
    op.alter_column('telegram_configs', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.drop_index('idx_telegram_configs_active', table_name='telegram_configs')
    op.create_index(op.f('ix_telegram_configs_id'), 'telegram_configs', ['id'], unique=False)
    op.add_column('telegram_messages', sa.Column('chat_id', sa.BigInteger(), nullable=False))
    op.add_column('telegram_messages', sa.Column('message_id', sa.Integer(), nullable=True))
    op.add_column('telegram_messages', sa.Column('template_key', sa.String(length=100), nullable=True))
    op.add_column('telegram_messages', sa.Column('sent_by_user_id', sa.Integer(), nullable=True))
    op.add_column('telegram_messages', sa.Column('related_entity_type', sa.String(length=50), nullable=True))
    op.add_column('telegram_messages', sa.Column('related_entity_id', sa.Integer(), nullable=True))
    op.add_column('telegram_messages', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.alter_column('telegram_messages', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('telegram_messages', 'message_text',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('telegram_messages', 'status',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_messages', 'sent_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=True)
    op.drop_index('idx_telegram_messages_status', table_name='telegram_messages')
    op.drop_index('idx_telegram_messages_type', table_name='telegram_messages')
    op.drop_index('idx_telegram_messages_user_id', table_name='telegram_messages')
    op.create_index(op.f('ix_telegram_messages_chat_id'), 'telegram_messages', ['chat_id'], unique=False)
    op.create_index(op.f('ix_telegram_messages_created_at'), 'telegram_messages', ['created_at'], unique=False)
    op.create_index(op.f('ix_telegram_messages_id'), 'telegram_messages', ['id'], unique=False)
    op.create_foreign_key(None, 'telegram_messages', 'users', ['sent_by_user_id'], ['id'])
    op.drop_column('telegram_messages', 'message_data')
    op.drop_column('telegram_messages', 'telegram_user_id')
    op.alter_column('telegram_templates', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('telegram_templates', 'language',
               existing_type=sa.VARCHAR(length=10),
               server_default=None,
               type_=sa.String(length=5),
               existing_nullable=False)
    op.alter_column('telegram_templates', 'parse_mode',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_templates', 'disable_web_page_preview',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_templates', 'inline_buttons',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('telegram_templates', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.create_index(op.f('ix_telegram_templates_id'), 'telegram_templates', ['id'], unique=False)
    op.create_index(op.f('ix_telegram_templates_template_key'), 'telegram_templates', ['template_key'], unique=False)
    op.alter_column('telegram_users', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('telegram_users', 'chat_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               nullable=False)
    op.alter_column('telegram_users', 'language_code',
               existing_type=sa.VARCHAR(length=10),
               server_default=None,
               type_=sa.String(length=5),
               nullable=False)
    op.alter_column('telegram_users', 'notifications_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_users', 'appointment_reminders',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_users', 'lab_notifications',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_users', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('telegram_users', 'blocked',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.drop_index('idx_telegram_users_active', table_name='telegram_users')
    op.drop_index('idx_telegram_users_telegram_id', table_name='telegram_users')
    op.create_index(op.f('ix_telegram_users_chat_id'), 'telegram_users', ['chat_id'], unique=True)
    op.create_index(op.f('ix_telegram_users_id'), 'telegram_users', ['id'], unique=False)
    op.drop_column('telegram_users', 'is_active')
    op.drop_column('telegram_users', 'telegram_id')
    op.drop_column('telegram_users', 'updated_at')
    op.drop_column('telegram_users', 'is_bot')
    op.add_column('user_groups', sa.Column('created_by', sa.Integer(), nullable=True))
    op.alter_column('user_groups', 'display_name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=150),
               existing_nullable=False)
    op.alter_column('user_groups', 'group_type',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               nullable=False)
    op.alter_column('user_groups', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user_groups', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('user_groups', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index('idx_user_groups_name', table_name='user_groups')
    op.drop_index('idx_user_groups_type', table_name='user_groups')
    op.create_index(op.f('ix_user_groups_group_type'), 'user_groups', ['group_type'], unique=False)
    op.create_index(op.f('ix_user_groups_name'), 'user_groups', ['name'], unique=True)
    op.create_foreign_key(None, 'user_groups', 'users', ['created_by'], ['id'])
    op.drop_column('user_groups', 'is_system')
    op.alter_column('user_permission_overrides', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('user_permission_overrides', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('user_permission_overrides', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('user_permission_overrides', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index('idx_user_permission_overrides_user', table_name='user_permission_overrides')
    op.create_index(op.f('ix_user_permission_overrides_id'), 'user_permission_overrides', ['id'], unique=False)
    op.create_index(op.f('ix_user_permission_overrides_permission_id'), 'user_permission_overrides', ['permission_id'], unique=False)
    op.create_index(op.f('ix_user_permission_overrides_user_id'), 'user_permission_overrides', ['user_id'], unique=False)
    op.add_column('user_roles', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('user_roles', sa.Column('role_id', sa.Integer(), nullable=False))
    op.add_column('user_roles', sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('user_roles', sa.Column('assigned_by', sa.Integer(), nullable=True))
    op.drop_index('ix_user_roles_id', table_name='user_roles')
    op.create_foreign_key(None, 'user_roles', 'users', ['assigned_by'], ['id'])
    op.create_foreign_key(None, 'user_roles', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_roles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('user_roles', 'permissions')
    op.drop_column('user_roles', 'created_at')
    op.drop_column('user_roles', 'updated_at')
    op.drop_column('user_roles', 'id')
    op.drop_column('user_roles', 'name')
    op.drop_column('user_roles', 'description')
    op.drop_column('user_roles', 'is_system')
    op.drop_column('user_roles', 'display_name')
    op.drop_column('user_roles', 'is_active')
    op.alter_column('user_sessions', 'refresh_token',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
    op.alter_column('user_sessions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('user_sessions', 'expires_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('user_sessions', 'revoked',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=True)
    op.drop_index('ix_user_sessions_user', table_name='user_sessions')
    op.drop_index('ux_user_sessions_token', table_name='user_sessions')
    op.create_index('idx_user_sessions_expires', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_user_sessions_user_active', 'user_sessions', ['user_id', 'revoked'], unique=False)
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.drop_constraint(None, 'user_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'user_sessions', 'users', ['user_id'], ['id'])
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=True)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=32),
               server_default=None,
               type_=sa.String(length=20),
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('users', 'updated_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=True)
    op.drop_index('ux_users_email', table_name='users')
    op.drop_index('ux_users_username', table_name='users')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'password_changed_at')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'email_verified')
    op.alter_column('visit_services', 'service_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('visit_services', 'qty',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('visit_services', 'price',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               server_default=None,
               nullable=True)
    op.alter_column('visit_services', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.drop_index('idx_visit_services_visit_id', table_name='visit_services')
    op.drop_index('ix_visit_services_code', table_name='visit_services')
    op.drop_index('ix_visit_services_visit', table_name='visit_services')
    op.create_index(op.f('ix_visit_services_service_id'), 'visit_services', ['service_id'], unique=False)
    op.create_index(op.f('ix_visit_services_visit_id'), 'visit_services', ['visit_id'], unique=False)
    op.alter_column('visits', 'patient_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('visits', 'status',
               existing_type=sa.VARCHAR(length=16),
               server_default=None,
               existing_nullable=False)
    op.alter_column('visits', 'notes',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=512),
               existing_nullable=True)
    op.alter_column('visits', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('visits', 'discount_mode',
               existing_type=sa.VARCHAR(length=16),
               server_default=None,
               existing_nullable=False)
    op.alter_column('visits', 'approval_status',
               existing_type=sa.VARCHAR(length=16),
               server_default=None,
               existing_nullable=False)
    op.drop_index('idx_visits_doctor_id', table_name='visits')
    op.drop_index('idx_visits_patient_id', table_name='visits')
    op.drop_index('ix_visits_doctor', table_name='visits')
    op.drop_index('ix_visits_patient', table_name='visits')
    op.drop_index('ix_visits_payment_provider', table_name='visits')
    op.drop_index('ix_visits_payment_status', table_name='visits')
    op.drop_index('ix_visits_payment_transaction', table_name='visits')
    op.drop_index('ix_visits_status', table_name='visits')
    op.create_index(op.f('ix_visits_doctor_id'), 'visits', ['doctor_id'], unique=False)
    op.create_index(op.f('ix_visits_patient_id'), 'visits', ['patient_id'], unique=False)
    op.drop_constraint(None, 'visits', type_='foreignkey')
    op.drop_constraint(None, 'visits', type_='foreignkey')
    op.create_foreign_key(None, 'visits', 'doctors', ['doctor_id'], ['id'])
    op.drop_column('visits', 'finished_at')
    op.drop_column('visits', 'payment_currency')
    op.drop_column('visits', 'payment_status')
    op.drop_column('visits', 'started_at')
    op.drop_column('visits', 'payment_transaction_id')
    op.drop_column('visits', 'planned_date')
    op.drop_column('visits', 'payment_provider')
    op.drop_column('visits', 'payment_processed_at')
    op.drop_column('visits', 'payment_amount')
    op.drop_column('visits', 'payment_webhook_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('visits', sa.Column('payment_webhook_id', sa.INTEGER(), nullable=True))
    op.add_column('visits', sa.Column('payment_amount', sa.NUMERIC(precision=12, scale=2), nullable=True))
    op.add_column('visits', sa.Column('payment_processed_at', sa.DATETIME(), nullable=True))
    op.add_column('visits', sa.Column('payment_provider', sa.VARCHAR(length=32), nullable=True))
    op.add_column('visits', sa.Column('planned_date', sa.DATE(), nullable=True))
    op.add_column('visits', sa.Column('payment_transaction_id', sa.VARCHAR(length=255), nullable=True))
    op.add_column('visits', sa.Column('started_at', sa.DATETIME(), nullable=True))
    op.add_column('visits', sa.Column('payment_status', sa.VARCHAR(length=32), server_default=sa.text("'unpaid'"), nullable=True))
    op.add_column('visits', sa.Column('payment_currency', sa.VARCHAR(length=3), server_default=sa.text("'UZS'"), nullable=True))
    op.add_column('visits', sa.Column('finished_at', sa.DATETIME(), nullable=True))
    op.drop_constraint(None, 'visits', type_='foreignkey')
    op.create_foreign_key(None, 'visits', 'patients', ['patient_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'visits', 'users', ['doctor_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_visits_patient_id'), table_name='visits')
    op.drop_index(op.f('ix_visits_doctor_id'), table_name='visits')
    op.create_index('ix_visits_status', 'visits', ['status'], unique=False)
    op.create_index('ix_visits_payment_transaction', 'visits', ['payment_transaction_id'], unique=False)
    op.create_index('ix_visits_payment_status', 'visits', ['payment_status'], unique=False)
    op.create_index('ix_visits_payment_provider', 'visits', ['payment_provider'], unique=False)
    op.create_index('ix_visits_patient', 'visits', ['patient_id'], unique=False)
    op.create_index('ix_visits_doctor', 'visits', ['doctor_id'], unique=False)
    op.create_index('idx_visits_patient_id', 'visits', ['patient_id'], unique=False)
    op.create_index('idx_visits_doctor_id', 'visits', ['doctor_id'], unique=False)
    op.alter_column('visits', 'approval_status',
               existing_type=sa.VARCHAR(length=16),
               server_default=sa.text("'none'"),
               existing_nullable=False)
    op.alter_column('visits', 'discount_mode',
               existing_type=sa.VARCHAR(length=16),
               server_default=sa.text("'none'"),
               existing_nullable=False)
    op.alter_column('visits', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('visits', 'notes',
               existing_type=sa.String(length=512),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('visits', 'status',
               existing_type=sa.VARCHAR(length=16),
               server_default=sa.text("'open'"),
               existing_nullable=False)
    op.alter_column('visits', 'patient_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_visit_services_visit_id'), table_name='visit_services')
    op.drop_index(op.f('ix_visit_services_service_id'), table_name='visit_services')
    op.create_index('ix_visit_services_visit', 'visit_services', ['visit_id'], unique=False)
    op.create_index('ix_visit_services_code', 'visit_services', ['code'], unique=False)
    op.create_index('idx_visit_services_visit_id', 'visit_services', ['visit_id'], unique=False)
    op.alter_column('visit_services', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('visit_services', 'price',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               server_default=sa.text("'0'"),
               nullable=False)
    op.alter_column('visit_services', 'qty',
               existing_type=sa.INTEGER(),
               server_default=sa.text("'1'"),
               existing_nullable=False)
    op.alter_column('visit_services', 'service_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('users', sa.Column('email_verified', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False))
    op.add_column('users', sa.Column('last_login', sa.DATETIME(), nullable=True))
    op.add_column('users', sa.Column('password_changed_at', sa.DATETIME(), nullable=True))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_index('ux_users_username', 'users', ['username'], unique=1)
    op.create_index('ux_users_email', 'users', ['email'], unique=1)
    op.alter_column('users', 'updated_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text("'false'"),
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.String(length=20),
               server_default=sa.text("'User'"),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('users', 'full_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
    op.drop_constraint(None, 'user_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'user_sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_active', table_name='user_sessions')
    op.drop_index('idx_user_sessions_expires', table_name='user_sessions')
    op.create_index('ux_user_sessions_token', 'user_sessions', ['refresh_token'], unique=1)
    op.create_index('ix_user_sessions_user', 'user_sessions', ['user_id'], unique=False)
    op.alter_column('user_sessions', 'revoked',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               nullable=False)
    op.alter_column('user_sessions', 'expires_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('user_sessions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('user_sessions', 'refresh_token',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
    op.add_column('user_roles', sa.Column('is_active', sa.BOOLEAN(), nullable=True))
    op.add_column('user_roles', sa.Column('display_name', sa.VARCHAR(length=100), nullable=False))
    op.add_column('user_roles', sa.Column('is_system', sa.BOOLEAN(), nullable=True))
    op.add_column('user_roles', sa.Column('description', sa.TEXT(), nullable=True))
    op.add_column('user_roles', sa.Column('name', sa.VARCHAR(length=50), nullable=False))
    op.add_column('user_roles', sa.Column('id', sa.INTEGER(), nullable=False))
    op.add_column('user_roles', sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('user_roles', sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('user_roles', sa.Column('permissions', sqlite.JSON(), nullable=True))
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.create_index('ix_user_roles_id', 'user_roles', ['id'], unique=False)
    op.drop_column('user_roles', 'assigned_by')
    op.drop_column('user_roles', 'assigned_at')
    op.drop_column('user_roles', 'role_id')
    op.drop_column('user_roles', 'user_id')
    op.drop_index(op.f('ix_user_permission_overrides_user_id'), table_name='user_permission_overrides')
    op.drop_index(op.f('ix_user_permission_overrides_permission_id'), table_name='user_permission_overrides')
    op.drop_index(op.f('ix_user_permission_overrides_id'), table_name='user_permission_overrides')
    op.create_index('idx_user_permission_overrides_user', 'user_permission_overrides', ['user_id'], unique=False)
    op.alter_column('user_permission_overrides', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('user_permission_overrides', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('user_permission_overrides', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.alter_column('user_permission_overrides', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.add_column('user_groups', sa.Column('is_system', sa.BOOLEAN(), nullable=True))
    op.drop_constraint(None, 'user_groups', type_='foreignkey')
    op.drop_index(op.f('ix_user_groups_name'), table_name='user_groups')
    op.drop_index(op.f('ix_user_groups_group_type'), table_name='user_groups')
    op.create_index('idx_user_groups_type', 'user_groups', ['group_type'], unique=False)
    op.create_index('idx_user_groups_name', 'user_groups', ['name'], unique=False)
    op.alter_column('user_groups', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('user_groups', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('user_groups', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user_groups', 'group_type',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text('("custom")'),
               nullable=True)
    op.alter_column('user_groups', 'display_name',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
    op.drop_column('user_groups', 'created_by')
    op.add_column('telegram_users', sa.Column('is_bot', sa.BOOLEAN(), server_default=sa.text('0'), nullable=True))
    op.add_column('telegram_users', sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('telegram_users', sa.Column('telegram_id', sa.INTEGER(), nullable=False))
    op.add_column('telegram_users', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('1'), nullable=True))
    op.drop_index(op.f('ix_telegram_users_id'), table_name='telegram_users')
    op.drop_index(op.f('ix_telegram_users_chat_id'), table_name='telegram_users')
    op.create_index('idx_telegram_users_telegram_id', 'telegram_users', ['telegram_id'], unique=False)
    op.create_index('idx_telegram_users_active', 'telegram_users', ['is_active'], unique=False)
    op.alter_column('telegram_users', 'blocked',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               nullable=True)
    op.alter_column('telegram_users', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_users', 'lab_notifications',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_users', 'appointment_reminders',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_users', 'notifications_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_users', 'language_code',
               existing_type=sa.String(length=5),
               server_default=sa.text("'ru'"),
               type_=sa.VARCHAR(length=10),
               nullable=True)
    op.alter_column('telegram_users', 'chat_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('telegram_users', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_telegram_templates_template_key'), table_name='telegram_templates')
    op.drop_index(op.f('ix_telegram_templates_id'), table_name='telegram_templates')
    op.alter_column('telegram_templates', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_templates', 'inline_buttons',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('telegram_templates', 'disable_web_page_preview',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               nullable=True)
    op.alter_column('telegram_templates', 'parse_mode',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'HTML'"),
               nullable=True)
    op.alter_column('telegram_templates', 'language',
               existing_type=sa.String(length=5),
               server_default=sa.text("'ru'"),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.alter_column('telegram_templates', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.add_column('telegram_messages', sa.Column('telegram_user_id', sa.INTEGER(), nullable=False))
    op.add_column('telegram_messages', sa.Column('message_data', sqlite.JSON(), nullable=True))
    op.drop_constraint(None, 'telegram_messages', type_='foreignkey')
    op.drop_index(op.f('ix_telegram_messages_id'), table_name='telegram_messages')
    op.drop_index(op.f('ix_telegram_messages_created_at'), table_name='telegram_messages')
    op.drop_index(op.f('ix_telegram_messages_chat_id'), table_name='telegram_messages')
    op.create_index('idx_telegram_messages_user_id', 'telegram_messages', ['telegram_user_id'], unique=False)
    op.create_index('idx_telegram_messages_type', 'telegram_messages', ['message_type'], unique=False)
    op.create_index('idx_telegram_messages_status', 'telegram_messages', ['status'], unique=False)
    op.alter_column('telegram_messages', 'sent_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=True)
    op.alter_column('telegram_messages', 'status',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'sent'"),
               nullable=True)
    op.alter_column('telegram_messages', 'message_text',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('telegram_messages', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_column('telegram_messages', 'created_at')
    op.drop_column('telegram_messages', 'related_entity_id')
    op.drop_column('telegram_messages', 'related_entity_type')
    op.drop_column('telegram_messages', 'sent_by_user_id')
    op.drop_column('telegram_messages', 'template_key')
    op.drop_column('telegram_messages', 'message_id')
    op.drop_column('telegram_messages', 'chat_id')
    op.drop_index(op.f('ix_telegram_configs_id'), table_name='telegram_configs')
    op.create_index('idx_telegram_configs_active', 'telegram_configs', ['active'], unique=False)
    op.alter_column('telegram_configs', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_configs', 'supported_languages',
               existing_type=sqlite.JSON(),
               nullable=True)
    op.alter_column('telegram_configs', 'default_language',
               existing_type=sa.String(length=5),
               server_default=sa.text("'ru'"),
               type_=sa.VARCHAR(length=10),
               nullable=True)
    op.alter_column('telegram_configs', 'payment_notifications',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_configs', 'lab_results_notifications',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_configs', 'appointment_reminders',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_configs', 'notifications_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               nullable=True)
    op.alter_column('telegram_configs', 'bot_name',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('telegram_configs', 'webhook_secret',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('telegram_configs', 'webhook_url',
               existing_type=sa.String(length=300),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.alter_column('telegram_configs', 'bot_token',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('telegram_configs', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_constraint('uq_settings_category_key', 'settings', type_='unique')
    op.drop_index(op.f('ix_settings_id'), table_name='settings')
    op.create_index('ux_settings_cat_key', 'settings', ['category', 'key'], unique=1)
    op.create_index('ix_settings_category', 'settings', ['category'], unique=False)
    op.alter_column('settings', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('settings', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('settings', 'value',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('settings', 'key',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
    op.alter_column('settings', 'category',
               existing_type=sa.String(length=50),
               server_default=sa.text("'default'"),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_index(op.f('ix_services_service_code'), table_name='services')
    op.drop_index(op.f('ix_services_category_code'), table_name='services')
    op.alter_column('services', 'allow_doctor_price_override',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text("'false'"),
               existing_nullable=False)
    op.alter_column('services', 'is_consultation',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text("'false'"),
               existing_nullable=False)
    op.alter_column('services', 'requires_doctor',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text("'false'"),
               existing_nullable=False)
    op.alter_column('services', 'duration_minutes',
               existing_type=sa.INTEGER(),
               server_default=sa.text('(30)'),
               existing_nullable=True)
    op.add_column('service_catalog', sa.Column('unit', sa.VARCHAR(length=32), nullable=True))
    op.add_column('service_catalog', sa.Column('updated_at', sa.DATETIME(), nullable=True))
    op.add_column('service_catalog', sa.Column('department', sa.VARCHAR(length=64), nullable=True))
    op.drop_index(op.f('ix_service_catalog_name'), table_name='service_catalog')
    op.drop_index(op.f('ix_service_catalog_code'), table_name='service_catalog')
    op.create_index('ux_service_catalog_code', 'service_catalog', ['code'], unique=1)
    op.create_index('ix_service_catalog_dept', 'service_catalog', ['department'], unique=False)
    op.alter_column('service_catalog', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('service_catalog', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.alter_column('service_catalog', 'price',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               server_default=sa.text("'0'"),
               nullable=False)
    op.alter_column('service_catalog', 'name',
               existing_type=sa.String(length=256),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('service_catalog', 'currency')
    op.drop_index(op.f('ix_schedule_templates_weekday'), table_name='schedule_templates')
    op.drop_index(op.f('ix_schedule_templates_id'), table_name='schedule_templates')
    op.drop_index(op.f('ix_schedule_templates_doctor_id'), table_name='schedule_templates')
    op.drop_index(op.f('ix_schedule_templates_department'), table_name='schedule_templates')
    op.create_index('ix_sched_wd', 'schedule_templates', ['weekday'], unique=False)
    op.create_index('ix_sched_doc', 'schedule_templates', ['doctor_id'], unique=False)
    op.create_index('ix_sched_dep', 'schedule_templates', ['department'], unique=False)
    op.alter_column('schedule_templates', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.create_index('idx_roles_name', 'roles', ['name'], unique=False)
    op.alter_column('roles', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('roles', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('roles', 'is_system',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('roles', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.alter_column('roles', 'level',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('roles', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.add_column('role_permissions', sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('role_permissions', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'role_permissions', type_='foreignkey')
    op.drop_constraint(None, 'role_permissions', type_='foreignkey')
    op.drop_constraint(None, 'role_permissions', type_='foreignkey')
    op.create_foreign_key(None, 'role_permissions', 'user_roles', ['role_id'], ['id'])
    op.create_foreign_key(None, 'role_permissions', 'user_permissions', ['permission_id'], ['id'])
    op.create_index('ix_role_permissions_id', 'role_permissions', ['id'], unique=False)
    op.drop_column('role_permissions', 'granted_by')
    op.drop_column('role_permissions', 'granted_at')
    op.drop_index(op.f('ix_role_hierarchy_parent_role_id'), table_name='role_hierarchy')
    op.drop_index(op.f('ix_role_hierarchy_id'), table_name='role_hierarchy')
    op.drop_index(op.f('ix_role_hierarchy_child_role_id'), table_name='role_hierarchy')
    op.alter_column('role_hierarchy', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('role_hierarchy', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.add_column('queue_entries', sa.Column('printed_at', sa.DATETIME(), nullable=True))
    op.add_column('queue_entries', sa.Column('called_by_user_id', sa.INTEGER(), nullable=True))
    op.add_column('queue_entries', sa.Column('print_data', sqlite.JSON(), nullable=True))
    op.add_column('queue_entries', sa.Column('data_version', sa.VARCHAR(length=16), server_default=sa.text("'v1.0'"), nullable=False))
    op.drop_constraint(None, 'queue_entries', type_='foreignkey')
    op.create_index('ix_queue_entries_visit_id_status', 'queue_entries', ['visit_id', 'status'], unique=False)
    op.create_index('ix_queue_entries_source_created_at', 'queue_entries', ['source', 'created_at'], unique=False)
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_codename'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_category'), table_name='permissions')
    op.create_index('idx_permissions_codename', 'permissions', ['codename'], unique=False)
    op.create_index('idx_permissions_category', 'permissions', ['category'], unique=False)
    op.alter_column('permissions', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('permissions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('permissions', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.alter_column('permissions', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_permission_audit_log_user_id'), table_name='permission_audit_log')
    op.drop_index(op.f('ix_permission_audit_log_id'), table_name='permission_audit_log')
    op.drop_index(op.f('ix_permission_audit_log_action'), table_name='permission_audit_log')
    op.create_index('idx_permission_audit_log_user', 'permission_audit_log', ['user_id'], unique=False)
    op.create_index('idx_permission_audit_log_action', 'permission_audit_log', ['action'], unique=False)
    op.alter_column('permission_audit_log', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('permission_audit_log', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.add_column('payments', sa.Column('cashier_id', sa.INTEGER(), nullable=True))
    op.drop_index(op.f('ix_payments_visit_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider_transaction_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider_payment_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider'), table_name='payments')
    op.create_index('idx_payments_visit_id', 'payments', ['visit_id'], unique=False)
    op.create_index('idx_payments_status', 'payments', ['status'], unique=False)
    op.create_index('idx_payments_provider_transaction_id', 'payments', ['provider_transaction_id'], unique=False)
    op.create_index('idx_payments_provider_payment_id', 'payments', ['provider_payment_id'], unique=False)
    op.create_index('idx_payments_provider', 'payments', ['provider'], unique=False)
    op.create_index('idx_payments_method', 'payments', ['method'], unique=False)
    op.alter_column('payments', 'commission',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.alter_column('payments', 'status',
               existing_type=sa.VARCHAR(length=32),
               server_default=sa.text("'paid'"),
               existing_nullable=False)
    op.alter_column('payments', 'method',
               existing_type=sa.VARCHAR(length=32),
               server_default=sa.text("'cash'"),
               existing_nullable=False)
    op.alter_column('payments', 'currency',
               existing_type=sa.VARCHAR(length=8),
               server_default=sa.text("'UZS'"),
               existing_nullable=False)
    op.alter_column('payments', 'amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('payments', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_constraint(None, 'payment_webhooks', type_='foreignkey')
    op.drop_index(op.f('ix_payment_webhooks_visit_id'), table_name='payment_webhooks')
    op.drop_index(op.f('ix_payment_webhooks_payment_id'), table_name='payment_webhooks')
    op.drop_index(op.f('ix_payment_webhooks_patient_id'), table_name='payment_webhooks')
    op.drop_column('payment_webhooks', 'payment_id')
    op.drop_column('payment_webhooks', 'payment_status')
    op.drop_constraint(None, 'payment_transactions', type_='foreignkey')
    op.drop_constraint(None, 'payment_transactions', type_='foreignkey')
    op.drop_index(op.f('ix_payment_transactions_webhook_id'), table_name='payment_transactions')
    op.drop_index(op.f('ix_payment_transactions_visit_id'), table_name='payment_transactions')
    op.drop_index(op.f('ix_payment_transactions_payment_id'), table_name='payment_transactions')
    op.alter_column('payment_transactions', 'status',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.drop_column('payment_transactions', 'error_message')
    op.drop_column('payment_transactions', 'provider_data')
    op.drop_column('payment_transactions', 'payment_id')
    op.drop_constraint(None, 'payment_providers', type_='unique')
    op.drop_column('payment_providers', 'config')
    op.drop_column('payment_providers', 'supported_currencies')
    op.drop_column('payment_providers', 'service_id')
    op.drop_column('payment_providers', 'merchant_id')
    op.alter_column('payment_invoices', 'commission',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               server_default=sa.text("'0'"),
               existing_nullable=True)
    op.alter_column('payment_invoices', 'payment_method',
               existing_type=sa.VARCHAR(length=32),
               server_default=sa.text("'cash'"),
               existing_nullable=False)
    op.alter_column('payment_invoices', 'status',
               existing_type=sa.VARCHAR(length=32),
               server_default=sa.text("'pending'"),
               existing_nullable=False)
    op.alter_column('payment_invoices', 'currency',
               existing_type=sa.VARCHAR(length=8),
               server_default=sa.text("'UZS'"),
               existing_nullable=False)
    op.create_index('uq_payment_invoice_visits_invoice_visit', 'payment_invoice_visits', ['invoice_id', 'visit_id'], unique=1)
    op.drop_constraint(None, 'patients', type_='unique')
    op.drop_index(op.f('ix_patients_last_name'), table_name='patients')
    op.drop_index(op.f('ix_patients_first_name'), table_name='patients')
    op.create_index('ix_patients_phone', 'patients', ['phone'], unique=False)
    op.create_index('ix_patients_doc', 'patients', ['doc_type', 'doc_number'], unique=False)
    op.alter_column('patients', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('patients', 'middle_name',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=120),
               existing_nullable=True)
    op.alter_column('patients', 'first_name',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=120),
               nullable=True)
    op.alter_column('patients', 'last_name',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=120),
               nullable=True)
    op.drop_constraint('uq_online_day_dep_date', 'online_days', type_='unique')
    op.drop_index(op.f('ix_online_days_id'), table_name='online_days')
    op.drop_index(op.f('ix_online_days_department'), table_name='online_days')
    op.drop_index(op.f('ix_online_days_date_str'), table_name='online_days')
    op.create_index('uq_online_day_dep_date__uniq_idx', 'online_days', ['department', 'date_str'], unique=1)
    op.create_index('ix_online_days_dep', 'online_days', ['department'], unique=False)
    op.create_index('ix_online_days_date', 'online_days', ['date_str'], unique=False)
    op.drop_index(op.f('ix_lab_results_test_code'), table_name='lab_results')
    op.drop_index(op.f('ix_lab_results_order_id'), table_name='lab_results')
    op.create_index('ix_lab_results_order', 'lab_results', ['order_id'], unique=False)
    op.create_index('ix_lab_results_code', 'lab_results', ['test_code'], unique=False)
    op.alter_column('lab_results', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('lab_results', 'abnormal',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.drop_index(op.f('ix_lab_orders_visit_id'), table_name='lab_orders')
    op.drop_index(op.f('ix_lab_orders_patient_id'), table_name='lab_orders')
    op.create_index('ix_lab_orders_visit', 'lab_orders', ['visit_id'], unique=False)
    op.create_index('ix_lab_orders_status', 'lab_orders', ['status'], unique=False)
    op.create_index('ix_lab_orders_patient', 'lab_orders', ['patient_id'], unique=False)
    op.alter_column('lab_orders', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('lab_orders', 'status',
               existing_type=sa.VARCHAR(length=16),
               server_default=sa.text("'ordered'"),
               existing_nullable=False)
    op.drop_index(op.f('ix_files_folder_id'), table_name='files')
    op.alter_column('emr', 'ai_confidence',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=True)
    op.alter_column('emr', 'ai_suggestions',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('emr', 'social_history',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('emr', 'family_history',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('emr', 'allergies',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('emr', 'medications',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('emr', 'imaging_results',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('emr', 'lab_results',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('emr', 'vital_signs',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'doctors', type_='foreignkey')
    op.alter_column('doctor_price_overrides', 'updated_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('doctor_price_overrides', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
    op.alter_column('doctor_price_overrides', 'notification_sent',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('doctor_price_overrides', 'status',
               existing_type=sa.VARCHAR(length=32),
               server_default=sa.text("'pending'"),
               existing_nullable=False)
    op.drop_constraint(None, 'daily_queues', type_='foreignkey')
    op.create_foreign_key(None, 'daily_queues', 'doctors', ['specialist_id'], ['id'])
    op.drop_index(op.f('ix_daily_queues_cabinet_number'), table_name='daily_queues')
    op.create_index('ix_daily_queues_day_specialist_tag', 'daily_queues', ['day', 'specialist_id', 'queue_tag'], unique=False)
    op.create_index('ix_daily_queues_day_queue_tag', 'daily_queues', ['day', 'queue_tag'], unique=False)
    op.create_index('idx_daily_queues_cabinet_number', 'daily_queues', ['cabinet_number'], unique=False)
    op.alter_column('daily_queues', 'max_online_entries',
               existing_type=sa.INTEGER(),
               server_default=sa.text("'15'"),
               existing_nullable=False)
    op.alter_column('daily_queues', 'online_end_time',
               existing_type=sa.VARCHAR(length=5),
               server_default=sa.text("'09:00'"),
               existing_nullable=False)
    op.alter_column('daily_queues', 'online_start_time',
               existing_type=sa.VARCHAR(length=5),
               server_default=sa.text("'07:00'"),
               existing_nullable=False)
    op.drop_index(op.f('ix_audit_logs_entity_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_entity_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_actor_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.create_index('ix_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False)
    op.alter_column('audit_logs', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=sa.text("(datetime('now'))"),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('audit_logs', 'payload',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('audit_logs', 'entity_type',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('audit_logs', 'action',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('audit_logs', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.alter_column('appointments', 'payment_type',
               existing_type=sa.VARCHAR(length=16),
               server_default=sa.text("'cash'"),
               existing_nullable=True)
    op.alter_column('appointments', 'visit_type',
               existing_type=sa.VARCHAR(length=16),
               server_default=sa.text("'paid'"),
               existing_nullable=True)
    op.create_index('idx_activations_machine_hash', 'activations', ['machine_hash'], unique=False)
    op.create_index('idx_activations_key', 'activations', ['key'], unique=False)
    op.alter_column('activations', 'status',
               existing_type=sa.VARCHAR(length=7),
               server_default=sa.text("'issued'"),
               existing_nullable=False)
    op.create_table('user_group_members',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), nullable=True),
    sa.Column('joined_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['user_groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_group_members_id', 'user_group_members', ['id'], unique=False)
    op.create_table('pricing_rules',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('rule_type', sa.VARCHAR(length=12), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('end_date', sa.DATETIME(), nullable=True),
    sa.Column('start_time', sa.VARCHAR(length=8), nullable=True),
    sa.Column('end_time', sa.VARCHAR(length=8), nullable=True),
    sa.Column('days_of_week', sa.VARCHAR(length=20), nullable=True),
    sa.Column('discount_type', sa.VARCHAR(length=12), nullable=False),
    sa.Column('discount_value', sa.FLOAT(), nullable=False),
    sa.Column('min_quantity', sa.INTEGER(), nullable=True),
    sa.Column('max_quantity', sa.INTEGER(), nullable=True),
    sa.Column('min_amount', sa.FLOAT(), nullable=True),
    sa.Column('priority', sa.INTEGER(), nullable=True),
    sa.Column('max_uses', sa.INTEGER(), nullable=True),
    sa.Column('current_uses', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_pricing_rules_name', 'pricing_rules', ['name'], unique=False)
    op.create_index('ix_pricing_rules_id', 'pricing_rules', ['id'], unique=False)
    op.create_index('idx_pricing_rules_active_dates', 'pricing_rules', ['is_active', 'start_date', 'end_date'], unique=False)
    op.create_table('dynamic_prices',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.Column('base_price', sa.FLOAT(), nullable=False),
    sa.Column('current_price', sa.FLOAT(), nullable=False),
    sa.Column('min_price', sa.FLOAT(), nullable=False),
    sa.Column('max_price', sa.FLOAT(), nullable=False),
    sa.Column('demand_factor', sa.FLOAT(), nullable=True),
    sa.Column('time_factor', sa.FLOAT(), nullable=True),
    sa.Column('capacity_factor', sa.FLOAT(), nullable=True),
    sa.Column('seasonal_factor', sa.FLOAT(), nullable=True),
    sa.Column('price_changes_count', sa.INTEGER(), nullable=True),
    sa.Column('last_price_change', sa.DATETIME(), nullable=True),
    sa.Column('avg_price_last_30d', sa.FLOAT(), nullable=True),
    sa.Column('effective_from', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('effective_to', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_dynamic_prices_id', 'dynamic_prices', ['id'], unique=False)
    op.create_index('idx_dynamic_prices_service_effective', 'dynamic_prices', ['service_id', 'effective_from', 'effective_to'], unique=False)
    op.create_table('discount_services',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('discount_id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_discount_services_id', 'discount_services', ['id'], unique=False)
    op.create_table('payment_reminders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('invoice_id', sa.INTEGER(), nullable=False),
    sa.Column('reminder_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('days_before_due', sa.INTEGER(), nullable=True),
    sa.Column('days_after_due', sa.INTEGER(), nullable=True),
    sa.Column('subject', sa.VARCHAR(length=255), nullable=True),
    sa.Column('message', sa.TEXT(), nullable=False),
    sa.Column('is_sent', sa.BOOLEAN(), nullable=True),
    sa.Column('sent_at', sa.DATETIME(), nullable=True),
    sa.Column('delivery_status', sa.VARCHAR(length=50), nullable=True),
    sa.Column('scheduled_at', sa.DATETIME(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_payment_reminders_id', 'payment_reminders', ['id'], unique=False)
    op.create_index('idx_reminders_scheduled_sent', 'payment_reminders', ['scheduled_at', 'is_sent'], unique=False)
    op.create_table('package_services',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('package_id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=True),
    sa.Column('is_required', sa.BOOLEAN(), nullable=True),
    sa.Column('discount_percentage', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['package_id'], ['service_packages.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_package_services_id', 'package_services', ['id'], unique=False)
    op.create_table('webhook_events',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('uuid', sa.VARCHAR(length=36), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('event_data', sqlite.JSON(), nullable=False),
    sa.Column('source', sa.VARCHAR(length=100), nullable=True),
    sa.Column('source_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('correlation_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('processed', sa.BOOLEAN(), server_default=sa.text('0'), nullable=True),
    sa.Column('processed_at', sa.DATETIME(), nullable=True),
    sa.Column('failed_webhooks', sqlite.JSON(), server_default=sa.text("'[]'"), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_webhook_events_uuid', 'webhook_events', ['uuid'], unique=False)
    op.create_index('idx_webhook_events_processed', 'webhook_events', ['processed'], unique=False)
    op.create_index('idx_webhook_events_event_type', 'webhook_events', ['event_type'], unique=False)
    op.create_index('idx_webhook_events_created_at', 'webhook_events', ['created_at'], unique=False)
    op.create_table('price_history',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.Column('old_price', sa.FLOAT(), nullable=False),
    sa.Column('new_price', sa.FLOAT(), nullable=False),
    sa.Column('price_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('change_reason', sa.VARCHAR(length=255), nullable=True),
    sa.Column('change_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('changed_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('changed_by', sa.INTEGER(), nullable=True),
    sa.Column('effective_from', sa.DATETIME(), nullable=True),
    sa.Column('effective_to', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_price_history_id', 'price_history', ['id'], unique=False)
    op.create_index('idx_price_history_service_date', 'price_history', ['service_id', 'changed_at'], unique=False)
    op.create_table('loyalty_programs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('points_per_ruble', sa.FLOAT(), nullable=True),
    sa.Column('min_purchase_for_points', sa.FLOAT(), nullable=True),
    sa.Column('ruble_per_point', sa.FLOAT(), nullable=True),
    sa.Column('min_points_to_redeem', sa.INTEGER(), nullable=True),
    sa.Column('max_points_per_purchase', sa.INTEGER(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('end_date', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_loyalty_programs_id', 'loyalty_programs', ['id'], unique=False)
    op.create_index('idx_loyalty_programs_active', 'loyalty_programs', ['is_active'], unique=False)
    op.create_table('user_permissions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), nullable=True),
    sa.Column('is_system', sa.BOOLEAN(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('ix_user_permissions_id', 'user_permissions', ['id'], unique=False)
    op.create_table('package_purchases',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('package_id', sa.INTEGER(), nullable=False),
    sa.Column('patient_id', sa.INTEGER(), nullable=False),
    sa.Column('visit_id', sa.INTEGER(), nullable=True),
    sa.Column('appointment_id', sa.INTEGER(), nullable=True),
    sa.Column('purchase_price', sa.FLOAT(), nullable=False),
    sa.Column('original_price', sa.FLOAT(), nullable=False),
    sa.Column('savings_amount', sa.FLOAT(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), nullable=True),
    sa.Column('purchased_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=True),
    sa.Column('used_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['service_packages.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['visit_id'], ['visits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_package_purchases_id', 'package_purchases', ['id'], unique=False)
    op.create_index('idx_package_purchases_patient_package', 'package_purchases', ['patient_id', 'package_id', 'status'], unique=False)
    op.create_table('loyalty_point_transactions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('patient_loyalty_id', sa.INTEGER(), nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('points', sa.INTEGER(), nullable=False),
    sa.Column('appointment_id', sa.INTEGER(), nullable=True),
    sa.Column('visit_id', sa.INTEGER(), nullable=True),
    sa.Column('invoice_id', sa.INTEGER(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('amount_related', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_loyalty_id'], ['patient_loyalty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_loyalty_point_transactions_id', 'loyalty_point_transactions', ['id'], unique=False)
    op.create_index('idx_loyalty_transactions_patient', 'loyalty_point_transactions', ['patient_loyalty_id'], unique=False)
    op.create_index('idx_loyalty_transactions_date', 'loyalty_point_transactions', ['created_at'], unique=False)
    op.create_table('benefits',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('benefit_type', sa.VARCHAR(length=12), nullable=False),
    sa.Column('discount_percentage', sa.FLOAT(), nullable=False),
    sa.Column('max_discount_amount', sa.FLOAT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('requires_document', sa.BOOLEAN(), nullable=True),
    sa.Column('document_types', sa.TEXT(), nullable=True),
    sa.Column('age_min', sa.INTEGER(), nullable=True),
    sa.Column('age_max', sa.INTEGER(), nullable=True),
    sa.Column('applies_to_services', sa.BOOLEAN(), nullable=True),
    sa.Column('applies_to_appointments', sa.BOOLEAN(), nullable=True),
    sa.Column('monthly_limit', sa.FLOAT(), nullable=True),
    sa.Column('yearly_limit', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_benefits_name', 'benefits', ['name'], unique=False)
    op.create_index('ix_benefits_id', 'benefits', ['id'], unique=False)
    op.create_index('idx_benefits_type', 'benefits', ['benefit_type'], unique=False)
    op.create_index('idx_benefits_active', 'benefits', ['is_active'], unique=False)
    op.create_table('feature_flag_history',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('flag_key', sa.VARCHAR(length=100), nullable=False),
    sa.Column('action', sa.VARCHAR(length=20), nullable=False),
    sa.Column('old_value', sqlite.JSON(), nullable=True),
    sa.Column('new_value', sqlite.JSON(), nullable=True),
    sa.Column('changed_by', sa.VARCHAR(length=100), nullable=True),
    sa.Column('changed_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=500), nullable=True),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_feature_flag_history_id', 'feature_flag_history', ['id'], unique=False)
    op.create_index('ix_feature_flag_history_flag_key', 'feature_flag_history', ['flag_key'], unique=False)
    op.create_table('service_packages',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('package_price', sa.FLOAT(), nullable=False),
    sa.Column('original_price', sa.FLOAT(), nullable=True),
    sa.Column('savings_amount', sa.FLOAT(), nullable=True),
    sa.Column('savings_percentage', sa.FLOAT(), nullable=True),
    sa.Column('min_services', sa.INTEGER(), nullable=True),
    sa.Column('max_services', sa.INTEGER(), nullable=True),
    sa.Column('valid_from', sa.DATETIME(), nullable=True),
    sa.Column('valid_to', sa.DATETIME(), nullable=True),
    sa.Column('max_purchases', sa.INTEGER(), nullable=True),
    sa.Column('current_purchases', sa.INTEGER(), nullable=True),
    sa.Column('per_patient_limit', sa.INTEGER(), nullable=True),
    sa.Column('pricing_rule_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['pricing_rule_id'], ['pricing_rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_service_packages_name', 'service_packages', ['name'], unique=False)
    op.create_index('ix_service_packages_id', 'service_packages', ['id'], unique=False)
    op.create_index('idx_service_packages_active_dates', 'service_packages', ['is_active', 'valid_from', 'valid_to'], unique=False)
    op.create_table('billing_rules',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('trigger_event', sa.VARCHAR(length=50), nullable=False),
    sa.Column('service_types', sa.VARCHAR(length=500), nullable=True),
    sa.Column('patient_categories', sa.VARCHAR(length=500), nullable=True),
    sa.Column('amount_threshold_min', sa.FLOAT(), nullable=True),
    sa.Column('amount_threshold_max', sa.FLOAT(), nullable=True),
    sa.Column('invoice_type', sa.VARCHAR(length=10), nullable=True),
    sa.Column('payment_terms_days', sa.INTEGER(), nullable=True),
    sa.Column('auto_send', sa.BOOLEAN(), nullable=True),
    sa.Column('send_reminders', sa.BOOLEAN(), nullable=True),
    sa.Column('template_id', sa.INTEGER(), nullable=True),
    sa.Column('priority', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['invoice_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_billing_rules_id', 'billing_rules', ['id'], unique=False)
    op.create_index('idx_billing_rules_active_event', 'billing_rules', ['is_active', 'trigger_event'], unique=False)
    op.create_table('benefit_applications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('patient_benefit_id', sa.INTEGER(), nullable=False),
    sa.Column('benefit_id', sa.INTEGER(), nullable=False),
    sa.Column('appointment_id', sa.INTEGER(), nullable=True),
    sa.Column('visit_id', sa.INTEGER(), nullable=True),
    sa.Column('invoice_id', sa.INTEGER(), nullable=True),
    sa.Column('original_amount', sa.FLOAT(), nullable=False),
    sa.Column('benefit_amount', sa.FLOAT(), nullable=False),
    sa.Column('final_amount', sa.FLOAT(), nullable=False),
    sa.Column('applied_at', sa.DATETIME(), nullable=True),
    sa.Column('applied_by', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['applied_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['benefit_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['patient_benefit_id'], ['patient_benefits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_benefit_applications_id', 'benefit_applications', ['id'], unique=False)
    op.create_index('idx_benefit_applications_date', 'benefit_applications', ['applied_at'], unique=False)
    op.create_index('idx_benefit_applications_benefit', 'benefit_applications', ['benefit_id'], unique=False)
    op.create_table('discount_applications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('discount_id', sa.INTEGER(), nullable=False),
    sa.Column('appointment_id', sa.INTEGER(), nullable=True),
    sa.Column('visit_id', sa.INTEGER(), nullable=True),
    sa.Column('invoice_id', sa.INTEGER(), nullable=True),
    sa.Column('original_amount', sa.FLOAT(), nullable=False),
    sa.Column('discount_amount', sa.FLOAT(), nullable=False),
    sa.Column('final_amount', sa.FLOAT(), nullable=False),
    sa.Column('applied_at', sa.DATETIME(), nullable=True),
    sa.Column('applied_by', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['applied_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_discount_applications_id', 'discount_applications', ['id'], unique=False)
    op.create_index('idx_discount_applications_discount', 'discount_applications', ['discount_id'], unique=False)
    op.create_index('idx_discount_applications_date', 'discount_applications', ['applied_at'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('invoice_number', sa.VARCHAR(length=50), nullable=False),
    sa.Column('patient_id', sa.INTEGER(), nullable=False),
    sa.Column('visit_id', sa.INTEGER(), nullable=True),
    sa.Column('appointment_id', sa.INTEGER(), nullable=True),
    sa.Column('invoice_type', sa.VARCHAR(length=10), nullable=True),
    sa.Column('status', sa.VARCHAR(length=14), nullable=True),
    sa.Column('subtotal', sa.FLOAT(), nullable=False),
    sa.Column('tax_rate', sa.FLOAT(), nullable=True),
    sa.Column('tax_amount', sa.FLOAT(), nullable=True),
    sa.Column('discount_amount', sa.FLOAT(), nullable=True),
    sa.Column('total_amount', sa.FLOAT(), nullable=False),
    sa.Column('paid_amount', sa.FLOAT(), nullable=True),
    sa.Column('balance', sa.FLOAT(), nullable=True),
    sa.Column('issue_date', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('due_date', sa.DATETIME(), nullable=True),
    sa.Column('paid_date', sa.DATETIME(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('payment_terms', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_auto_generated', sa.BOOLEAN(), nullable=True),
    sa.Column('auto_send', sa.BOOLEAN(), nullable=True),
    sa.Column('send_reminders', sa.BOOLEAN(), nullable=True),
    sa.Column('is_recurring', sa.BOOLEAN(), nullable=True),
    sa.Column('recurrence_type', sa.VARCHAR(length=9), nullable=True),
    sa.Column('recurrence_interval', sa.INTEGER(), nullable=True),
    sa.Column('next_invoice_date', sa.DATETIME(), nullable=True),
    sa.Column('parent_invoice_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['visit_id'], ['visits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_invoices_invoice_number', 'invoices', ['invoice_number'], unique=1)
    op.create_index('ix_invoices_id', 'invoices', ['id'], unique=False)
    op.create_index('idx_invoices_patient_status', 'invoices', ['patient_id', 'status'], unique=False)
    op.create_index('idx_invoices_issue_date', 'invoices', ['issue_date'], unique=False)
    op.create_index('idx_invoices_due_date', 'invoices', ['due_date', 'status'], unique=False)
    op.create_table('billing_settings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('invoice_number_prefix', sa.VARCHAR(length=10), nullable=True),
    sa.Column('invoice_number_format', sa.VARCHAR(length=50), nullable=True),
    sa.Column('next_invoice_number', sa.INTEGER(), nullable=True),
    sa.Column('default_tax_rate', sa.FLOAT(), nullable=True),
    sa.Column('tax_included_in_price', sa.BOOLEAN(), nullable=True),
    sa.Column('default_payment_terms_days', sa.INTEGER(), nullable=True),
    sa.Column('overdue_threshold_days', sa.INTEGER(), nullable=True),
    sa.Column('auto_generate_invoices', sa.BOOLEAN(), nullable=True),
    sa.Column('auto_send_invoices', sa.BOOLEAN(), nullable=True),
    sa.Column('auto_send_reminders', sa.BOOLEAN(), nullable=True),
    sa.Column('reminder_days_before', sa.VARCHAR(length=50), nullable=True),
    sa.Column('reminder_days_after', sa.VARCHAR(length=50), nullable=True),
    sa.Column('currency_code', sa.VARCHAR(length=3), nullable=True),
    sa.Column('currency_symbol', sa.VARCHAR(length=5), nullable=True),
    sa.Column('decimal_places', sa.INTEGER(), nullable=True),
    sa.Column('company_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('company_address', sa.TEXT(), nullable=True),
    sa.Column('company_phone', sa.VARCHAR(length=50), nullable=True),
    sa.Column('company_email', sa.VARCHAR(length=100), nullable=True),
    sa.Column('company_website', sa.VARCHAR(length=100), nullable=True),
    sa.Column('company_logo_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('bank_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('bank_account', sa.VARCHAR(length=50), nullable=True),
    sa.Column('bank_routing', sa.VARCHAR(length=50), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_billing_settings_id', 'billing_settings', ['id'], unique=False)
    op.create_table('pricing_rule_services',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('rule_id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.Column('custom_discount_value', sa.FLOAT(), nullable=True),
    sa.Column('is_excluded', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['rule_id'], ['pricing_rules.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_pricing_rule_services_id', 'pricing_rule_services', ['id'], unique=False)
    op.create_index('idx_pricing_rule_services_rule_service', 'pricing_rule_services', ['rule_id', 'service_id'], unique=False)
    op.create_table('invoice_templates',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('template_content', sa.TEXT(), nullable=False),
    sa.Column('css_styles', sa.TEXT(), nullable=True),
    sa.Column('auto_generate_for_visits', sa.BOOLEAN(), nullable=True),
    sa.Column('auto_generate_for_appointments', sa.BOOLEAN(), nullable=True),
    sa.Column('auto_send_email', sa.BOOLEAN(), nullable=True),
    sa.Column('auto_send_sms', sa.BOOLEAN(), nullable=True),
    sa.Column('service_types', sa.VARCHAR(length=500), nullable=True),
    sa.Column('patient_categories', sa.VARCHAR(length=500), nullable=True),
    sa.Column('amount_threshold_min', sa.FLOAT(), nullable=True),
    sa.Column('amount_threshold_max', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_invoice_templates_id', 'invoice_templates', ['id'], unique=False)
    op.create_table('invoice_items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('invoice_id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=True),
    sa.Column('description', sa.VARCHAR(length=500), nullable=False),
    sa.Column('quantity', sa.FLOAT(), nullable=False),
    sa.Column('unit_price', sa.FLOAT(), nullable=False),
    sa.Column('discount_rate', sa.FLOAT(), nullable=True),
    sa.Column('discount_amount', sa.FLOAT(), nullable=True),
    sa.Column('tax_rate', sa.FLOAT(), nullable=True),
    sa.Column('tax_amount', sa.FLOAT(), nullable=True),
    sa.Column('total_amount', sa.FLOAT(), nullable=False),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('sort_order', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_invoice_items_id', 'invoice_items', ['id'], unique=False)
    op.create_table('webhook_calls',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('uuid', sa.VARCHAR(length=36), nullable=False),
    sa.Column('webhook_id', sa.INTEGER(), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('event_data', sqlite.JSON(), nullable=False),
    sa.Column('url', sa.VARCHAR(length=500), nullable=False),
    sa.Column('method', sa.VARCHAR(length=10), server_default=sa.text("'POST'"), nullable=True),
    sa.Column('headers', sqlite.JSON(), server_default=sa.text("'{}'"), nullable=True),
    sa.Column('payload', sqlite.JSON(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'"), nullable=True),
    sa.Column('response_status_code', sa.INTEGER(), nullable=True),
    sa.Column('response_headers', sqlite.JSON(), server_default=sa.text("'{}'"), nullable=True),
    sa.Column('response_body', sa.TEXT(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('attempt_number', sa.INTEGER(), server_default=sa.text('1'), nullable=True),
    sa.Column('max_attempts', sa.INTEGER(), server_default=sa.text('3'), nullable=True),
    sa.Column('next_retry_at', sa.DATETIME(), nullable=True),
    sa.Column('duration_ms', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['webhook_id'], ['webhooks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_webhook_calls_webhook_id', 'webhook_calls', ['webhook_id'], unique=False)
    op.create_index('idx_webhook_calls_uuid', 'webhook_calls', ['uuid'], unique=False)
    op.create_index('idx_webhook_calls_status', 'webhook_calls', ['status'], unique=False)
    op.create_index('idx_webhook_calls_event_type', 'webhook_calls', ['event_type'], unique=False)
    op.create_index('idx_webhook_calls_created_at', 'webhook_calls', ['created_at'], unique=False)
    op.create_table('discounts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('discount_type', sa.VARCHAR(length=14), nullable=False),
    sa.Column('value', sa.FLOAT(), nullable=False),
    sa.Column('min_amount', sa.FLOAT(), nullable=True),
    sa.Column('max_discount', sa.FLOAT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('end_date', sa.DATETIME(), nullable=True),
    sa.Column('usage_limit', sa.INTEGER(), nullable=True),
    sa.Column('usage_count', sa.INTEGER(), nullable=True),
    sa.Column('applies_to_services', sa.BOOLEAN(), nullable=True),
    sa.Column('applies_to_appointments', sa.BOOLEAN(), nullable=True),
    sa.Column('applies_to_packages', sa.BOOLEAN(), nullable=True),
    sa.Column('can_combine_with_others', sa.BOOLEAN(), nullable=True),
    sa.Column('priority', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_discounts_name', 'discounts', ['name'], unique=False)
    op.create_index('ix_discounts_id', 'discounts', ['id'], unique=False)
    op.create_index('idx_discounts_type', 'discounts', ['discount_type'], unique=False)
    op.create_index('idx_discounts_priority', 'discounts', ['priority'], unique=False)
    op.create_index('idx_discounts_dates', 'discounts', ['start_date', 'end_date'], unique=False)
    op.create_index('idx_discounts_active', 'discounts', ['is_active'], unique=False)
    op.create_table('webhooks',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('uuid', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('url', sa.VARCHAR(length=500), nullable=False),
    sa.Column('events', sqlite.JSON(), nullable=False),
    sa.Column('headers', sqlite.JSON(), server_default=sa.text("'{}'"), nullable=True),
    sa.Column('secret', sa.VARCHAR(length=255), nullable=True),
    sa.Column('max_retries', sa.INTEGER(), server_default=sa.text('3'), nullable=True),
    sa.Column('retry_delay', sa.INTEGER(), server_default=sa.text('(60)'), nullable=True),
    sa.Column('timeout', sa.INTEGER(), server_default=sa.text('(30)'), nullable=True),
    sa.Column('filters', sqlite.JSON(), server_default=sa.text("'{}'"), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'active'"), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('1'), nullable=True),
    sa.Column('total_calls', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('successful_calls', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('failed_calls', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('last_call_at', sa.DATETIME(), nullable=True),
    sa.Column('last_success_at', sa.DATETIME(), nullable=True),
    sa.Column('last_failure_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_webhooks_uuid', 'webhooks', ['uuid'], unique=False)
    op.create_index('idx_webhooks_status', 'webhooks', ['status'], unique=False)
    op.create_index('idx_webhooks_is_active', 'webhooks', ['is_active'], unique=False)
    op.create_index('idx_webhooks_created_by', 'webhooks', ['created_by'], unique=False)
    op.create_table('user_groups_association',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('joined_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('added_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['added_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['user_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('feature_flags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('key', sa.VARCHAR(length=100), nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), nullable=False),
    sa.Column('config', sqlite.JSON(), nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), nullable=True),
    sa.Column('environment', sa.VARCHAR(length=20), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=100), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_feature_flags_key', 'feature_flags', ['key'], unique=1)
    op.create_index('ix_feature_flags_id', 'feature_flags', ['id'], unique=False)
    op.create_table('patient_benefits',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('patient_id', sa.INTEGER(), nullable=False),
    sa.Column('benefit_id', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('verified', sa.BOOLEAN(), nullable=True),
    sa.Column('verification_date', sa.DATETIME(), nullable=True),
    sa.Column('verification_notes', sa.TEXT(), nullable=True),
    sa.Column('document_number', sa.VARCHAR(length=100), nullable=True),
    sa.Column('document_issued_date', sa.DATETIME(), nullable=True),
    sa.Column('document_expiry_date', sa.DATETIME(), nullable=True),
    sa.Column('monthly_used_amount', sa.FLOAT(), nullable=True),
    sa.Column('yearly_used_amount', sa.FLOAT(), nullable=True),
    sa.Column('last_used_date', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('verified_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['benefit_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_patient_benefits_id', 'patient_benefits', ['id'], unique=False)
    op.create_index('idx_patient_benefits_patient', 'patient_benefits', ['patient_id'], unique=False)
    op.create_index('idx_patient_benefits_expiry', 'patient_benefits', ['document_expiry_date'], unique=False)
    op.create_index('idx_patient_benefits_active', 'patient_benefits', ['is_active', 'verified'], unique=False)
    op.create_table('patient_loyalty',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('patient_id', sa.INTEGER(), nullable=False),
    sa.Column('program_id', sa.INTEGER(), nullable=False),
    sa.Column('total_points_earned', sa.INTEGER(), nullable=True),
    sa.Column('total_points_redeemed', sa.INTEGER(), nullable=True),
    sa.Column('current_balance', sa.INTEGER(), nullable=True),
    sa.Column('total_purchases', sa.INTEGER(), nullable=True),
    sa.Column('total_amount_spent', sa.FLOAT(), nullable=True),
    sa.Column('last_activity_date', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('joined_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['program_id'], ['loyalty_programs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_patient_loyalty_id', 'patient_loyalty', ['id'], unique=False)
    op.create_index('idx_patient_loyalty_program', 'patient_loyalty', ['program_id'], unique=False)
    op.create_index('idx_patient_loyalty_patient', 'patient_loyalty', ['patient_id'], unique=False)
    # ### end Alembic commands ###

