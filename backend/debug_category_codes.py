#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –∫–æ–¥–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def debug_category_codes():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

    db_path = 'clinic.db'

    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{db_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return False

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏ —Å –∏—Ö –∫–æ–¥–∞–º–∏
        cursor.execute("""
            SELECT service_code, name, category_code, code FROM services
            WHERE category_code IN ('D', 'D_PROC', 'P', 'C', 'K', 'S', 'L', 'ECG')
            ORDER BY category_code, service_code
        """)

        services = cursor.fetchall()
        print("\nüìã –£—Å–ª—É–≥–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        for service_code, name, category_code, code in services:
            print(f"   {service_code} - {name} (category_code: {category_code}, code: {code})")

        # –ü—Ä–æ–≤–µ—Ä–∏–º –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –æ—Ç–¥–µ–ª—å–Ω–æ
        print("\nüîç –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã:")
        cursor.execute("""
            SELECT service_code, name, category_code FROM services
            WHERE service_code LIKE 'D_PROC%'
        """)

        derm_proc = cursor.fetchall()
        for service_code, name, category_code in derm_proc:
            print(f"   {service_code} - {name} (category_code: {category_code})")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    debug_category_codes()
