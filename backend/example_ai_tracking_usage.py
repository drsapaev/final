#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ AI –º–æ–¥–µ–ª–µ–π –≤ –∞–≤—Ç–æ —Ä–µ–∂–∏–º–µ
"""
import asyncio
from sqlalchemy.orm import Session
from app.db.session import SessionLocal
from app.services.ai_service_enhanced import get_enhanced_ai_service


async def example_ai_tracking():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ AI –º–æ–¥–µ–ª–µ–π"""
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π AI —Å–µ—Ä–≤–∏—Å
        async with get_enhanced_ai_service(db) as ai_service:
            
            print("ü§ñ –ü—Ä–∏–º–µ—Ä —Ç—Ä–µ–∫–∏–Ω–≥–∞ AI –º–æ–¥–µ–ª–µ–π –≤ –∞–≤—Ç–æ —Ä–µ–∂–∏–º–µ")
            print("=" * 60)
            
            # –ü—Ä–∏–º–µ—Ä 1: –ê–Ω–∞–ª–∏–∑ –∂–∞–ª–æ–± —Å —Ç—Ä–µ–∫–∏–Ω–≥–æ–º
            print("\nüìã –ü—Ä–∏–º–µ—Ä 1: –ê–Ω–∞–ª–∏–∑ –∂–∞–ª–æ–± –ø–∞—Ü–∏–µ–Ω—Ç–∞")
            print("-" * 40)
            
            complaints = "–ü–∞—Ü–∏–µ–Ω—Ç –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ –±–æ–ª—å –≤ –≥—Ä—É–¥–∏, –æ–¥—ã—à–∫—É –ø—Ä–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ"
            
            result = await ai_service.analyze_complaints_with_tracking(
                complaints_text=complaints,
                specialty="cardio",
                language="ru",
                user_id=1
            )
            
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
            tracking = result.tracking
            model_info = tracking.model_info
            
            print(f"‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"ü§ñ AI –ú–æ–¥–µ–ª—å: {model_info.provider_name} - {model_info.model_name}")
            print(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞={model_info.temperature}, max_tokens={model_info.max_tokens}")
            print(f"‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {tracking.response_time_ms}–º—Å")
            print(f"üî¢ –¢–æ–∫–µ–Ω—ã: {tracking.tokens_used}")
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {tracking.success}")
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.data}")
            
            # –ü—Ä–∏–º–µ—Ä 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ —Å —Ç—Ä–µ–∫–∏–Ω–≥–æ–º
            print("\nüíä –ü—Ä–∏–º–µ—Ä 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–∞")
            print("-" * 40)
            
            patient_data = {
                "name": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
                "age": 45,
                "gender": "male"
            }
            
            diagnosis = "–ò—à–µ–º–∏—á–µ—Å–∫–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞, —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è"
            
            result = await ai_service.generate_prescription_with_tracking(
                patient_data=patient_data,
                diagnosis=diagnosis,
                specialty="cardio",
                user_id=1
            )
            
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
            tracking = result.tracking
            model_info = tracking.model_info
            
            print(f"‚úÖ –†–µ—Ü–µ–ø—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"ü§ñ AI –ú–æ–¥–µ–ª—å: {model_info.provider_name} - {model_info.model_name}")
            print(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞={model_info.temperature}, max_tokens={model_info.max_tokens}")
            print(f"‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {tracking.response_time_ms}–º—Å")
            print(f"üî¢ –¢–æ–∫–µ–Ω—ã: {tracking.tokens_used}")
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {tracking.success}")
            print(f"üíä –†–µ—Ü–µ–ø—Ç: {result.data}")
            
            # –ü—Ä–∏–º–µ—Ä 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –º–æ–¥–µ–ª—è–º
            print("\nüìä –ü—Ä–∏–º–µ—Ä 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ AI –º–æ–¥–µ–ª–µ–π")
            print("-" * 40)
            
            model_stats = ai_service.get_model_stats(days_back=7)
            
            print(f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:")
            for stat in model_stats:
                print(f"   ü§ñ {stat.provider_name} - {stat.model_name}")
                print(f"      üìä –ó–∞–ø—Ä–æ—Å–æ–≤: {stat.total_requests}")
                print(f"      ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {stat.successful_requests}")
                print(f"      ‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: {stat.average_response_time_ms:.2f}–º—Å")
                print(f"      üî¢ –¢–æ–∫–µ–Ω–æ–≤: {stat.total_tokens_used}")
                print(f"      üíæ –ö—ç—à: {stat.cache_hit_rate:.1%}")
                print()
            
            # –ü—Ä–∏–º–µ—Ä 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º
            print("\nüè¢ –ü—Ä–∏–º–µ—Ä 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤")
            print("-" * 40)
            
            provider_stats = ai_service.get_provider_stats(days_back=7)
            
            print(f"üè¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:")
            for stat in provider_stats:
                print(f"   üè¢ {stat.display_name} ({stat.provider_name})")
                print(f"      üìä –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stat.total_requests}")
                print(f"      ‚úÖ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {stat.success_rate:.1f}%")
                print(f"      ‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: {stat.average_response_time_ms:.2f}–º—Å")
                print(f"      üîß –ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if stat.is_active else '–ù–µ—Ç'}")
                print(f"      ‚≠ê –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: {'–î–∞' if stat.is_default else '–ù–µ—Ç'}")
                print(f"      ü§ñ –ú–æ–¥–µ–ª–µ–π: {len(stat.models)}")
                print()
            
            print("üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print("\nüí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
            print("   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å, –∫–∞–∫–∞—è AI –º–æ–¥–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å")
            print("   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–µ–π")
            print("   ‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã")
            print("   ‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ AI —Ä–µ—Å—É—Ä—Å–æ–≤")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        db.close()


if __name__ == "__main__":
    asyncio.run(example_ai_tracking())
