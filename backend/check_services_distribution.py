#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Å–ª—É–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def check_services_distribution():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Å–ª—É–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""

    db_path = 'clinic.db'

    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{db_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return False

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏
        cursor.execute("""
            SELECT service_code, name, department, category_code, category_id
            FROM services
            WHERE active = 1
            ORDER BY service_code
        """)

        services = cursor.fetchall()

        print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ {len(services)} –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Å–ª—É–≥:")
        print("=" * 80)

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —É—Å–ª—É–≥–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = {
            'K': {'name': '–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è', 'services': []},
            'D': {'name': '–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—è', 'services': []},
            'S': {'name': '–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è', 'services': []},
            'L': {'name': '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è', 'services': []},
            'C': {'name': '–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è', 'services': []},
            'P': {'name': '–§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è', 'services': []},
            'ECG': {'name': '–≠–ö–ì', 'services': []},
            'ECHO': {'name': '–≠—Ö–æ–ö–ì', 'services': []},
            'D_PROC': {'name': '–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã', 'services': []},
            'OTHER': {'name': '–î—Ä—É–≥–∏–µ', 'services': []}
        }

        for service_code, name, department, category_code, category_id in services:
            if not service_code:
                categories['OTHER']['services'].append(f"{name} (–∫–æ–¥: {service_code}, –æ—Ç–¥–µ–ª: {department})")
                continue

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –∫–æ–¥—É —É—Å–ª—É–≥–∏
            if service_code.upper().startswith('K') or service_code == 'K01' or service_code == 'K02':
                categories['K']['services'].append(f"{name} ({service_code})")
            elif service_code.upper().startswith('D') or service_code == 'D01' or service_code == 'D02':
                categories['D']['services'].append(f"{name} ({service_code})")
            elif service_code.upper().startswith('S') or service_code == 'S01' or service_code == 'S02':
                categories['S']['services'].append(f"{name} ({service_code})")
            elif service_code.upper().startswith('L') or service_code == 'L01' or service_code == 'L02':
                categories['L']['services'].append(f"{name} ({service_code})")
            elif service_code.upper().startswith('C') or service_code == 'C01' or service_code == 'C02':
                categories['C']['services'].append(f"{name} ({service_code})")
            elif service_code.upper().startswith('P') or service_code == 'P01' or service_code == 'P02':
                categories['P']['services'].append(f"{name} ({service_code})")
            elif 'ECG' in service_code.upper() or '–≠–ö–ì' in name.upper():
                categories['ECG']['services'].append(f"{name} ({service_code})")
            elif 'ECHO' in service_code.upper() or '–≠—Ö–æ–ö–ì' in name or '–≠–•–û' in name.upper():
                categories['ECHO']['services'].append(f"{name} ({service_code})")
            else:
                categories['OTHER']['services'].append(f"{name} ({service_code})")

        # –í—ã–≤–æ–¥–∏–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
        for cat_code, cat_data in categories.items():
            if cat_data['services']:
                print(f"\nüè• {cat_data['name']} ({cat_code}):")
                for service in cat_data['services']:
                    print(f"   ‚Ä¢ {service}")

        print("\n" + "=" * 80)

        # –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º:")

        # –ö–∞—Ä–¥–∏–æ–ª–æ–≥ (–¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å K –∏ ECHO)
        cardio_services = categories['K']['services'] + categories['ECHO']['services']
        print(f"‚úÖ –ö–∞—Ä–¥–∏–æ–ª–æ–≥: {len(cardio_services)} —É—Å–ª—É–≥")
        for service in cardio_services[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"   ‚Ä¢ {service}")
        if len(cardio_services) > 3:
            print(f"   ... –∏ –µ—â—ë {len(cardio_services) - 3} —É—Å–ª—É–≥")

        # –≠–ö–ì (—Ç–æ–ª—å–∫–æ ECG)
        ecg_services = categories['ECG']['services']
        print(f"‚úÖ –≠–ö–ì: {len(ecg_services)} —É—Å–ª—É–≥")
        for service in ecg_services:
            print(f"   ‚Ä¢ {service}")

        # –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥ (—Ç–æ–ª—å–∫–æ D)
        derma_services = categories['D']['services']
        print(f"‚úÖ –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥: {len(derma_services)} —É—Å–ª—É–≥")
        for service in derma_services[:3]:
            print(f"   ‚Ä¢ {service}")
        if len(derma_services) > 3:
            print(f"   ... –∏ –µ—â—ë {len(derma_services) - 3} —É—Å–ª—É–≥")

        # –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥ (—Ç–æ–ª—å–∫–æ S)
        dental_services = categories['S']['services']
        print(f"‚úÖ –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥: {len(dental_services)} —É—Å–ª—É–≥")
        for service in dental_services:
            print(f"   ‚Ä¢ {service}")

        # –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è (—Ç–æ–ª—å–∫–æ L)
        lab_services = categories['L']['services']
        print(f"‚úÖ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è: {len(lab_services)} —É—Å–ª—É–≥")
        for service in lab_services[:3]:
            print(f"   ‚Ä¢ {service}")
        if len(lab_services) > 3:
            print(f"   ... –∏ –µ—â—ë {len(lab_services) - 3} —É—Å–ª—É–≥")

        # –ü—Ä–æ—Ü–µ–¥—É—Ä—ã (P, C, D_PROC)
        proc_services = categories['P']['services'] + categories['C']['services'] + categories['D_PROC']['services']
        print(f"‚úÖ –ü—Ä–æ—Ü–µ–¥—É—Ä—ã: {len(proc_services)} —É—Å–ª—É–≥")

        physio_services = categories['P']['services']
        cosmetology_services = categories['C']['services']
        derm_proc_services = categories['D_PROC']['services']

        if physio_services:
            print(f"   üìã –§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è: {len(physio_services)} —É—Å–ª—É–≥")
            for service in physio_services[:2]:
                print(f"      ‚Ä¢ {service}")
            if len(physio_services) > 2:
                print(f"      ... –∏ –µ—â—ë {len(physio_services) - 2} —É—Å–ª—É–≥")

        if cosmetology_services:
            print(f"   üíÑ –ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è: {len(cosmetology_services)} —É—Å–ª—É–≥")
            for service in cosmetology_services[:2]:
                print(f"      ‚Ä¢ {service}")
            if len(cosmetology_services) > 2:
                print(f"      ... –∏ –µ—â—ë {len(cosmetology_services) - 2} —É—Å–ª—É–≥")

        if derm_proc_services:
            print(f"   ü©∫ –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã: {len(derm_proc_services)} —É—Å–ª—É–≥")
            for service in derm_proc_services:
                print(f"      ‚Ä¢ {service}")

        # –î—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏
        other_services = categories['OTHER']['services']
        if other_services:
            print(f"\n‚ö†Ô∏è –î—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏ (—Ç—Ä–µ–±—É—é—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏): {len(other_services)} —É—Å–ª—É–≥")
            for service in other_services[:3]:
                print(f"   ‚Ä¢ {service}")
            if len(other_services) > 3:
                print(f"   ... –∏ –µ—â—ë {len(other_services) - 3} —É—Å–ª—É–≥")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    check_services_distribution()
