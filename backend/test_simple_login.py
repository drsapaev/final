#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ª–æ–≥–∏–Ω–∞
"""

import httpx


def test_login():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω...")

    try:
        with httpx.Client() as client:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω
            data = {
                "username": "admin",
                "password": "admin123",
                "grant_type": "password",
            }

            print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ: {data}")

            response = client.post(
                "http://localhost:8000/api/v1/auth/login", data=data, timeout=5
            )

            print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")

            if response.status_code == 200:
                try:
                    token_data = response.json()
                    print(f"JSON –æ—Ç–≤–µ—Ç: {token_data}")

                    if "access_token" in token_data:
                        print("‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω")
                        print(f"   –¢–æ–∫–µ–Ω: {token_data['access_token'][:20]}...")
                        print(f"   –¢–∏–ø —Ç–æ–∫–µ–Ω–∞: {token_data.get('token_type', 'N/A')}")

                        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
                        headers = {
                            "Authorization": f"Bearer {token_data['access_token']}"
                        }
                        profile_response = client.get(
                            "http://localhost:8000/api/v1/auth/me",
                            headers=headers,
                            timeout=5,
                        )

                        print(f"–ü—Ä–æ—Ñ–∏–ª—å —Å—Ç–∞—Ç—É—Å: {profile_response.status_code}")
                        if profile_response.status_code == 200:
                            print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                        else:
                            print(
                                f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {profile_response.status_code}"
                            )
                            print(f"   –û—Ç–≤–µ—Ç: {profile_response.text}")
                    else:
                        print("‚ùå –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç access_token")
                        print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è: {list(token_data.keys())}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
                    print(f"   –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ª–æ–≥–∏–Ω–∞: {e}")


if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–Ω–∞...")
    print("=" * 50)

    test_login()

    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
