#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–µ–±—Ö—É–∫–æ–≤ —Å –∑–∞–ø–∏—Å—è–º–∏ (appointments)
"""
import os
import sys

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from datetime import datetime

from sqlalchemy.orm import Session

from app.db.session import SessionLocal
from app.schemas.payment_webhook import PaymentWebhookOut
from app.services.visit_payment_integration import VisitPaymentIntegrationService


def test_payment_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –ø–ª–∞—Ç–µ–∂–µ–π —Å –∑–∞–ø–∏—Å—è–º–∏"""
    db: Session = SessionLocal()

    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–µ–±—Ö—É–∫–æ–≤ —Å –∑–∞–ø–∏—Å—è–º–∏...")

        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤–µ–±—Ö—É–∫
        test_webhook = PaymentWebhookOut(
            id=999,
            provider="payme",
            webhook_id="test_webhook_123",
            transaction_id="test_transaction_456",
            amount=50000,  # 500.00 UZS –≤ —Ç–∏–π–∏–Ω–∞—Ö
            currency="UZS",
            status="processed",
            raw_data={"test": "data"},
            signature="test_signature",
            error_message=None,
            created_at=datetime.utcnow(),
            processed_at=datetime.utcnow(),
        )

        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –≤–µ–±—Ö—É–∫ —Å–æ–∑–¥–∞–Ω")

        # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–ª–∞—Ç–µ–∂–∞
        print("\nüìù –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–ª–∞—Ç–µ–∂–∞")
        success, message, appointment_id = (
            VisitPaymentIntegrationService.create_appointment_from_payment(
                db=db,
                webhook=test_webhook,
                patient_id=1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø–∞—Ü–∏–µ–Ω—Ç —Å ID=1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                doctor_id=1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤—Ä–∞—á —Å ID=1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                department="General",
                appointment_date="2025-01-30",
                appointment_time="10:00",
            )
        )

        if success:
            print(f"‚úÖ –ó–∞–ø–∏—Å—å {appointment_id} —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ: {message}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: {message}")

        # –¢–µ—Å—Ç 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–ø–∏—Å–∏
        if success and appointment_id:
            print(f"\nüí∞ –¢–µ—Å—Ç 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ {appointment_id}")
            success2, message2 = (
                VisitPaymentIntegrationService.process_payment_for_appointment(
                    db=db, appointment_id=appointment_id, webhook=test_webhook
                )
            )

            if success2:
                print(f"‚úÖ –ü–ª–∞—Ç—ë–∂ –¥–ª—è –∑–∞–ø–∏—Å–∏ {appointment_id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {message2}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞: {message2}")

        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ
        if success and appointment_id:
            print(
                f"\nüìä –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ {appointment_id}"
            )
            success3, message3, payment_info = (
                VisitPaymentIntegrationService.get_visit_payment_info(
                    db=db,
                    visit_id=appointment_id,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º appointment_id –∫–∞–∫ visit_id –¥–ª—è —Ç–µ—Å—Ç–∞
                )
            )

            if success3:
                print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—É—á–µ–Ω–∞: {message3}")
                print(f"   –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞: {payment_info.get('payment_status')}")
                print(
                    f"   –°—É–º–º–∞: {payment_info.get('payment_amount')} {payment_info.get('payment_currency')}"
                )
                print(f"   –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {payment_info.get('payment_provider')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ: {message3}")

        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback

        traceback.print_exc()
    finally:
        db.close()


if __name__ == "__main__":
    test_payment_integration()
