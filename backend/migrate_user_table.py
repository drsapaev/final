#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã users –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π created_at –∏ updated_at
"""
import sqlite3
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def migrate_user_table():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è created_at –∏ updated_at –≤ —Ç–∞–±–ª–∏—Ü—É users"""
    print("üîß –ú–ò–ì–†–ê–¶–ò–Ø –¢–ê–ë–õ–ò–¶–´ USERS")
    print("=" * 40)
    
    try:
        conn = sqlite3.connect('clinic.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—è created_at –∏ updated_at
        cursor.execute("PRAGMA table_info(users)")
        columns = [col[1] for col in cursor.fetchall()]
        
        if 'created_at' in columns and 'updated_at' in columns:
            print("‚úÖ –ü–æ–ª—è created_at –∏ updated_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
            conn.close()
            return True
        
        print("üìã –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π created_at –∏ updated_at...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ created_at
        if 'created_at' not in columns:
            cursor.execute("ALTER TABLE users ADD COLUMN created_at DATETIME")
            print("‚úÖ –ü–æ–ª–µ created_at –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ updated_at
        if 'updated_at' not in columns:
            cursor.execute("ALTER TABLE users ADD COLUMN updated_at DATETIME")
            print("‚úÖ –ü–æ–ª–µ updated_at –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è created_at –Ω–∞ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        cursor.execute("UPDATE users SET created_at = CURRENT_TIMESTAMP WHERE created_at IS NULL")
        cursor.execute("UPDATE users SET updated_at = CURRENT_TIMESTAMP WHERE updated_at IS NULL")
        
        conn.commit()
        conn.close()
        
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = migrate_user_table()
    sys.exit(0 if success else 1)
