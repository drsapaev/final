#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ endpoints
"""
import requests
import json
import time

def test_complete_system_corrected():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    results = {
        "authentication": {"passed": 0, "total": 0},
        "emr_system": {"passed": 0, "total": 0},
        "mobile_api": {"passed": 0, "total": 0},
        "analytics": {"passed": 0, "total": 0},
        "two_factor": {"passed": 0, "total": 0},
        "telegram": {"passed": 0, "total": 0},
        "email_sms": {"passed": 0, "total": 0},
        "file_system": {"passed": 0, "total": 0},
        "frontend": {"passed": 0, "total": 0}
    }
    
    # 1. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò
    print("\nüîê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò")
    print("-" * 40)
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_credentials = {
        "admin": "admin123",
        "registrar": "registrar123", 
        "lab": "lab123",
        "doctor": "doctor123",
        "cashier": "cashier123",
        "cardio": "cardio123",
        "derma": "derma123",
        "dentist": "dentist123"
    }
    
    tokens = {}
    
    for role, password in user_credentials.items():
        try:
            auth_response = requests.post(
                "http://localhost:8000/api/v1/auth/login",
                data={"username": role, "password": password},
                headers={"Content-Type": "application/x-www-form-urlencoded"},
                timeout=5
            )
            
            if auth_response.status_code == 200:
                token = auth_response.json()["access_token"]
                tokens[role] = token
                print(f"   ‚úÖ {role}: –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω")
                results["authentication"]["passed"] += 1
            else:
                print(f"   ‚ùå {role}: –û—à–∏–±–∫–∞ {auth_response.status_code}")
            
            results["authentication"]["total"] += 1
            
        except Exception as e:
            print(f"   ‚ùå {role}: –û—à–∏–±–∫–∞ {e}")
            results["authentication"]["total"] += 1
    
    # 2. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï EMR –°–ò–°–¢–ï–ú–´
    print("\nüè• –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï EMR –°–ò–°–¢–ï–ú–´")
    print("-" * 40)
    
    if "admin" in tokens:
        headers = {"Authorization": f"Bearer {tokens['admin']}"}
        
        # –¢–µ—Å—Ç AI –∞–Ω–∞–ª–∏–∑–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint)
        try:
            ai_response = requests.post(
                "http://localhost:8000/api/v1/emr/ai-enhanced/analyze-patient",
                headers=headers,
                json={"patient_data": {"symptoms": "–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"}},
                timeout=5
            )
            if ai_response.status_code in [200, 422]:  # 422 –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                print("   ‚úÖ AI –∞–Ω–∞–ª–∏–∑: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["emr_system"]["passed"] += 1
            else:
                print(f"   ‚ùå AI –∞–Ω–∞–ª–∏–∑: –û—à–∏–±–∫–∞ {ai_response.status_code}")
            results["emr_system"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå AI –∞–Ω–∞–ª–∏–∑: {e}")
            results["emr_system"]["total"] += 1
        
        # –¢–µ—Å—Ç EMR —à–∞–±–ª–æ–Ω–æ–≤
        try:
            templates_response = requests.get(
                "http://localhost:8000/api/v1/emr/templates",
                headers=headers,
                timeout=5
            )
            if templates_response.status_code == 200:
                print("   ‚úÖ EMR —à–∞–±–ª–æ–Ω—ã: –†–∞–±–æ—Ç–∞—é—Ç")
                results["emr_system"]["passed"] += 1
            else:
                print(f"   ‚ùå EMR —à–∞–±–ª–æ–Ω—ã: –û—à–∏–±–∫–∞ {templates_response.status_code}")
            results["emr_system"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå EMR —à–∞–±–ª–æ–Ω—ã: {e}")
            results["emr_system"]["total"] += 1
    
    # 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–ë–ò–õ–¨–ù–û–ì–û API
    print("\nüì± –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–ë–ò–õ–¨–ù–û–ì–û API")
    print("-" * 40)
    
    if "admin" in tokens:
        headers = {"Authorization": f"Bearer {tokens['admin']}"}
        
        # –¢–µ—Å—Ç –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è
        try:
            mobile_health_response = requests.get(
                "http://localhost:8000/api/v1/mobile/health",
                headers=headers,
                timeout=5
            )
            if mobile_health_response.status_code == 200:
                print("   ‚úÖ –ú–æ–±–∏–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["mobile_api"]["passed"] += 1
            else:
                print(f"   ‚ùå –ú–æ–±–∏–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ: –û—à–∏–±–∫–∞ {mobile_health_response.status_code}")
            results["mobile_api"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå –ú–æ–±–∏–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ: {e}")
            results["mobile_api"]["total"] += 1
        
        # –¢–µ—Å—Ç –º–æ–±–∏–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        try:
            mobile_stats_response = requests.get(
                "http://localhost:8000/api/v1/mobile/stats",
                headers=headers,
                timeout=5
            )
            if mobile_stats_response.status_code == 200:
                print("   ‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["mobile_api"]["passed"] += 1
            else:
                print(f"   ‚ùå –ú–æ–±–∏–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –û—à–∏–±–∫–∞ {mobile_stats_response.status_code}")
            results["mobile_api"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå –ú–æ–±–∏–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {e}")
            results["mobile_api"]["total"] += 1
    
    # 4. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ù–ê–õ–ò–¢–ò–ö–ò
    print("\nüìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ù–ê–õ–ò–¢–ò–ö–ò")
    print("-" * 40)
    
    if "admin" in tokens:
        headers = {"Authorization": f"Bearer {tokens['admin']}"}
        
        # –¢–µ—Å—Ç –±—ã—Å—Ç—Ä–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        try:
            quick_stats_response = requests.get(
                "http://localhost:8000/api/v1/analytics/quick-stats",
                headers=headers,
                timeout=5
            )
            if quick_stats_response.status_code == 200:
                print("   ‚úÖ –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["analytics"]["passed"] += 1
            else:
                print(f"   ‚ùå –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –û—à–∏–±–∫–∞ {quick_stats_response.status_code}")
            results["analytics"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {e}")
            results["analytics"]["total"] += 1
        
        # –¢–µ—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞
        try:
            dashboard_response = requests.get(
                "http://localhost:8000/api/v1/analytics/dashboard",
                headers=headers,
                timeout=5
            )
            if dashboard_response.status_code == 200:
                print("   ‚úÖ –î–∞—à–±–æ—Ä–¥: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["analytics"]["passed"] += 1
            else:
                print(f"   ‚ùå –î–∞—à–±–æ—Ä–¥: –û—à–∏–±–∫–∞ {dashboard_response.status_code}")
            results["analytics"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå –î–∞—à–±–æ—Ä–¥: {e}")
            results["analytics"]["total"] += 1
    
    # 5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï 2FA
    print("\nüîí –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TWO-FACTOR AUTHENTICATION")
    print("-" * 40)
    
    if "admin" in tokens:
        headers = {"Authorization": f"Bearer {tokens['admin']}"}
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ 2FA
        try:
            twofa_status_response = requests.get(
                "http://localhost:8000/api/v1/2fa/status",
                headers=headers,
                timeout=5
            )
            if twofa_status_response.status_code == 200:
                print("   ‚úÖ 2FA —Å—Ç–∞—Ç—É—Å: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["two_factor"]["passed"] += 1
            else:
                print(f"   ‚ùå 2FA —Å—Ç–∞—Ç—É—Å: –û—à–∏–±–∫–∞ {twofa_status_response.status_code}")
            results["two_factor"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå 2FA —Å—Ç–∞—Ç—É—Å: {e}")
            results["two_factor"]["total"] += 1
        
        # –¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è 2FA
        try:
            twofa_health_response = requests.get(
                "http://localhost:8000/api/v1/2fa/health",
                headers=headers,
                timeout=5
            )
            if twofa_health_response.status_code == 200:
                print("   ‚úÖ 2FA –∑–¥–æ—Ä–æ–≤—å–µ: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["two_factor"]["passed"] += 1
            else:
                print(f"   ‚ùå 2FA –∑–¥–æ—Ä–æ–≤—å–µ: –û—à–∏–±–∫–∞ {twofa_health_response.status_code}")
            results["two_factor"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå 2FA –∑–¥–æ—Ä–æ–≤—å–µ: {e}")
            results["two_factor"]["total"] += 1
    
    # 6. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM
    print("\nüì± –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
    print("-" * 40)
    
    if "admin" in tokens:
        headers = {"Authorization": f"Bearer {tokens['admin']}"}
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
        try:
            telegram_status_response = requests.get(
                "http://localhost:8000/api/v1/telegram/bot-status",
                headers=headers,
                timeout=5
            )
            if telegram_status_response.status_code == 200:
                print("   ‚úÖ Telegram —Å—Ç–∞—Ç—É—Å: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["telegram"]["passed"] += 1
            else:
                print(f"   ‚ùå Telegram —Å—Ç–∞—Ç—É—Å: –û—à–∏–±–∫–∞ {telegram_status_response.status_code}")
            results["telegram"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå Telegram —Å—Ç–∞—Ç—É—Å: {e}")
            results["telegram"]["total"] += 1
    
    # 7. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï EMAIL/SMS
    print("\nüìß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï EMAIL/SMS –°–ï–†–í–ò–°–û–í")
    print("-" * 40)
    
    if "admin" in tokens:
        headers = {"Authorization": f"Bearer {tokens['admin']}"}
        
        # –¢–µ—Å—Ç Email/SMS —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        try:
            email_sms_response = requests.get(
                "http://localhost:8000/api/v1/email-sms/statistics",
                headers=headers,
                timeout=5
            )
            if email_sms_response.status_code == 200:
                print("   ‚úÖ Email/SMS —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["email_sms"]["passed"] += 1
            else:
                print(f"   ‚ùå Email/SMS —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –û—à–∏–±–∫–∞ {email_sms_response.status_code}")
            results["email_sms"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå Email/SMS —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {e}")
            results["email_sms"]["total"] += 1
        
        # –¢–µ—Å—Ç —à–∞–±–ª–æ–Ω–æ–≤
        try:
            templates_response = requests.get(
                "http://localhost:8000/api/v1/email-sms/templates",
                headers=headers,
                timeout=5
            )
            if templates_response.status_code == 200:
                print("   ‚úÖ Email/SMS —à–∞–±–ª–æ–Ω—ã: –†–∞–±–æ—Ç–∞—é—Ç")
                results["email_sms"]["passed"] += 1
            else:
                print(f"   ‚ùå Email/SMS —à–∞–±–ª–æ–Ω—ã: –û—à–∏–±–∫–∞ {templates_response.status_code}")
            results["email_sms"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå Email/SMS —à–∞–±–ª–æ–Ω—ã: {e}")
            results["email_sms"]["total"] += 1
    
    # 8. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´
    print("\nüìÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´")
    print("-" * 40)
    
    if "admin" in tokens:
        headers = {"Authorization": f"Bearer {tokens['admin']}"}
        
        # –¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        try:
            files_response = requests.get(
                "http://localhost:8000/api/v1/files/statistics",
                headers=headers,
                timeout=5
            )
            if files_response.status_code == 200:
                print("   ‚úÖ –§–∞–π–ª–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["file_system"]["passed"] += 1
            else:
                print(f"   ‚ùå –§–∞–π–ª–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –û—à–∏–±–∫–∞ {files_response.status_code}")
            results["file_system"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå –§–∞–π–ª–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {e}")
            results["file_system"]["total"] += 1
        
        # –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
        try:
            upload_response = requests.post(
                "http://localhost:8000/api/v1/files/test-upload",
                headers=headers,
                timeout=5
            )
            if upload_response.status_code == 200:
                print("   ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤: –†–∞–±–æ—Ç–∞–µ—Ç")
                results["file_system"]["passed"] += 1
            else:
                print(f"   ‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤: –û—à–∏–±–∫–∞ {upload_response.status_code}")
            results["file_system"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤: {e}")
            results["file_system"]["total"] += 1
    
    # 9. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï FRONTEND
    print("\nüé® –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï FRONTEND –ö–û–ú–ü–û–ù–ï–ù–¢–û–í")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ frontend —Ñ–∞–π–ª–æ–≤
    frontend_components = [
        "frontend/src/components/mobile/PWAInstallPrompt.jsx",
        "frontend/src/components/analytics/AdvancedCharts.jsx",
        "frontend/src/components/security/TwoFactorManager.jsx",
        "frontend/src/components/telegram/TelegramManager.jsx",
        "frontend/src/components/notifications/EmailSMSManager.jsx"
    ]
    
    for component in frontend_components:
        try:
            with open(component, 'r', encoding='utf-8') as f:
                content = f.read()
                if len(content) > 100:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
                    print(f"   ‚úÖ {component.split('/')[-1]}: –ì–æ—Ç–æ–≤")
                    results["frontend"]["passed"] += 1
                else:
                    print(f"   ‚ùå {component.split('/')[-1]}: –ü—É—Å—Ç–æ–π —Ñ–∞–π–ª")
            results["frontend"]["total"] += 1
        except FileNotFoundError:
            print(f"   ‚ùå {component.split('/')[-1]}: –ù–µ –Ω–∞–π–¥–µ–Ω")
            results["frontend"]["total"] += 1
        except Exception as e:
            print(f"   ‚ùå {component.split('/')[-1]}: –û—à–∏–±–∫–∞ {e}")
            results["frontend"]["total"] += 1
    
    # –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´
    print("\n" + "=" * 60)
    print("üèÜ –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    total_passed = 0
    total_tests = 0
    
    for system, stats in results.items():
        passed = stats["passed"]
        total = stats["total"]
        percentage = (passed / total * 100) if total > 0 else 0
        
        status = "‚úÖ" if percentage >= 80 else "‚ö†Ô∏è" if percentage >= 50 else "‚ùå"
        
        print(f"{status} {system.upper()}: {passed}/{total} ({percentage:.1f}%)")
        
        total_passed += passed
        total_tests += total
    
    overall_percentage = (total_passed / total_tests * 100) if total_tests > 0 else 0
    
    print("-" * 60)
    print(f"üéØ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢: {total_passed}/{total_tests} ({overall_percentage:.1f}%)")
    
    if overall_percentage >= 90:
        print("üéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!")
    elif overall_percentage >= 70:
        print("‚ö†Ô∏è –°–ò–°–¢–ï–ú–ê –ü–û–ß–¢–ò –ì–û–¢–û–í–ê, –ù–£–ñ–ù–´ –ú–ï–õ–ö–ò–ï –î–û–†–ê–ë–û–¢–ö–ò")
    else:
        print("‚ùå –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ô –†–ê–ó–†–ê–ë–û–¢–ö–ò")
    
    return overall_percentage

if __name__ == "__main__":
    test_complete_system_corrected()
