#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3

def check_users():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î"""
    conn = sqlite3.connect('clinic.db')
    cursor = conn.cursor()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT COUNT(*) FROM users")
        count = cursor.fetchone()[0]
        print(f"üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {count}")
        
        if count > 0:
            # –ü–æ–∫–∞–∂–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            cursor.execute("SELECT id, username, email, role, is_active FROM users")
            users = cursor.fetchall()
            
            print("\nüìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            for user in users:
                print(f"  ID: {user[0]}, Username: {user[1]}, Email: {user[2]}, Role: {user[3]}, Active: {user[4]}")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ admin
            cursor.execute("SELECT id, username, hashed_password FROM users WHERE username = 'admin'")
            admin = cursor.fetchone()
            
            if admin:
                print(f"\n‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–∞–π–¥–µ–Ω:")
                print(f"   ID: {admin[0]}")
                print(f"   Username: {admin[1]}")
                print(f"   Password hash: {admin[2][:20]}...")
            else:
                print(f"\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –ù–ï –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –í —Ç–∞–±–ª–∏—Ü–µ users –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    check_users()

