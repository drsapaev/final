#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π
"""
import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "..", ".."))

from app.crud.payment_webhook import create_provider
from app.db.session import get_db
from app.schemas.payment_webhook import PaymentProviderCreate


def init_payment_providers():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π...")

    db = next(get_db())

    try:
        # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        providers = [
            {
                "name": "Payme",
                "code": "payme",
                "is_active": True,
                "webhook_url": "https://your-domain.com/api/v1/webhooks/payment/payme",
                "commission_percent": 2,  # 2% –∫–æ–º–∏—Å—Å–∏—è
                "min_amount": 1000,  # 10 —Å—É–º
                "max_amount": 10000000,  # 100,000 —Å—É–º
            },
            {
                "name": "Click",
                "code": "click",
                "is_active": True,
                "webhook_url": "https://your-domain.com/api/v1/webhooks/payment/click",
                "commission_percent": 1,  # 1% –∫–æ–º–∏—Å—Å–∏—è
                "min_amount": 1000,  # 10 —Å—É–º
                "max_amount": 10000000,  # 100,000 —Å—É–º
            },
            {
                "name": "UzCard",
                "code": "uzcard",
                "is_active": False,  # –ü–æ–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω
                "webhook_url": "https://your-domain.com/api/v1/webhooks/payment/uzcard",
                "commission_percent": 1,  # 1% –∫–æ–º–∏—Å—Å–∏—è
                "min_amount": 1000,  # 10 —Å—É–º
                "max_amount": 10000000,  # 100,000 —Å—É–º
            },
        ]

        created_count = 0
        updated_count = 0

        for provider_data in providers:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä
            from app.crud.payment_webhook import get_provider_by_code

            existing = get_provider_by_code(db, code=provider_data["code"])

            if existing:
                print(f"‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä {provider_data['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                updated_count += 1
            else:
                # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
                provider_create = PaymentProviderCreate(**provider_data)
                new_provider = create_provider(db, provider_create)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {new_provider.name} ({new_provider.code})")
                created_count += 1

        db.commit()

        print(f"\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìä –°–æ–∑–¥–∞–Ω–æ: {created_count}")
        print(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
        print(f"\nüìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:")
        from app.crud.payment_webhook import get_all_providers

        all_providers = get_all_providers(db)
        for p in all_providers:
            status = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if p.is_active else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
            print(f"  - {p.name} ({p.code}): {status}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        import traceback

        traceback.print_exc()
        db.rollback()
    finally:
        db.close()


if __name__ == "__main__":
    init_payment_providers()
