#!/usr/bin/env python3
"""
üß™ –¢–µ—Å—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –æ–ø–ª–∞—Ç—ã
"""

import urllib.request
import urllib.parse
import json
import time
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://127.0.0.1:8000"

def get_auth_token():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"""
    # –í —Ä–µ–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    return "test_admin_token"

def test_admin_providers_crud():
    """–¢–µ—Å—Ç CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤"""
    print("‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤...")
    
    try:
        # 1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
        print("   üìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤")
        
        list_url = f"{BASE_URL}/api/v1/admin/providers"
        req = urllib.request.Request(list_url)
        req.add_header('Authorization', f'Bearer {get_auth_token()}')
        
        try:
            response = urllib.request.urlopen(req)
            if response.getcode() == 200:
                providers = json.loads(response.read().decode())
                print(f"     ‚úÖ –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω: {len(providers)} –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤")
                
                # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞—Ö
                for provider in providers:
                    print(f"       - {provider.get('name', 'N/A')} ({provider.get('code', 'N/A')})")
            else:
                print(f"     ‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.getcode()})")
        except Exception as e:
            print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤: {e}")
        
        # 2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ
        print("   üìã –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–≤–æ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        try:
            provider_url = f"{BASE_URL}/api/v1/admin/providers/1"
            req = urllib.request.Request(provider_url)
            req.add_header('Authorization', f'Bearer {get_auth_token()}')
            
            response = urllib.request.urlopen(req)
            if response.getcode() == 200:
                provider = json.loads(response.read().decode())
                print(f"     ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ –ø–æ–ª—É—á–µ–Ω–∞: {provider.get('name', 'N/A')}")
            else:
                print(f"     ‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: {response.getcode()})")
        except Exception as e:
            print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ: {e}")
        
        # 3. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        print("   üìã –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
        
        new_provider_data = {
            "code": "test_provider",
            "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä",
            "description": "–ü—Ä–æ–≤–∞–π–¥–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            "secret_key": "test_secret_key_123",
            "api_url": "https://test.api.com",
            "is_active": True
        }
        
        try:
            create_url = f"{BASE_URL}/api/v1/admin/providers"
            data = json.dumps(new_provider_data).encode('utf-8')
            req = urllib.request.Request(
                create_url,
                data=data,
                headers={
                    'Content-Type': 'application/json',
                    'Authorization': f'Bearer {get_auth_token()}'
                }
            )
            
            response = urllib.request.urlopen(req)
            if response.getcode() in [200, 201]:
                created_provider = json.loads(response.read().decode())
                print(f"     ‚úÖ –ù–æ–≤—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Å–æ–∑–¥–∞–Ω: ID {created_provider.get('id', 'N/A')}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
                new_provider_id = created_provider.get('id')
            else:
                print(f"     ‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (–∫–æ–¥: {response.getcode()})")
                new_provider_id = None
        except Exception as e:
            print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: {e}")
            new_provider_id = None
        
        # 4. –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        if new_provider_id:
            print("   üìã –¢–µ—Å—Ç 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
            
            update_data = {
                "name": "–û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä",
                "description": "–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ",
                "is_active": False
            }
            
            try:
                update_url = f"{BASE_URL}/api/v1/admin/providers/{new_provider_id}"
                data = json.dumps(update_data).encode('utf-8')
                req = urllib.request.Request(
                    update_url,
                    data=data,
                    headers={
                        'Content-Type': 'application/json',
                        'Authorization': f'Bearer {get_auth_token()}'
                    }
                )
                req.get_method = lambda: 'PUT'
                
                response = urllib.request.urlopen(req)
                if response.getcode() == 200:
                    updated_provider = json.loads(response.read().decode())
                    print(f"     ‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä –æ–±–Ω–æ–≤–ª—ë–Ω: {updated_provider.get('name', 'N/A')}")
                else:
                    print(f"     ‚ö†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (–∫–æ–¥: {response.getcode()})")
            except Exception as e:
                print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: {e}")
        
        # 5. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        if new_provider_id:
            print("   üìã –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
            
            try:
                stats_url = f"{BASE_URL}/api/v1/admin/providers/{new_provider_id}/stats"
                req = urllib.request.Request(stats_url)
                req.add_header('Authorization', f'Bearer {get_auth_token()}')
                
                response = urllib.request.urlopen(req)
                if response.getcode() == 200:
                    stats = json.loads(response.read().decode())
                    print(f"     ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞: {stats.get('provider_name', 'N/A')}")
                else:
                    print(f"     ‚ö†Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: {response.getcode()})")
            except Exception as e:
                print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        
        # 6. –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        if new_provider_id:
            print("   üìã –¢–µ—Å—Ç 6: –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
            
            try:
                delete_url = f"{BASE_URL}/api/v1/admin/providers/{new_provider_id}"
                req = urllib.request.Request(delete_url)
                req.add_header('Authorization', f'Bearer {get_auth_token()}')
                req.get_method = lambda: 'DELETE'
                
                response = urllib.request.urlopen(req)
                if response.getcode() == 200:
                    result = json.loads(response.read().decode())
                    print(f"     ‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä —É–¥–∞–ª—ë–Ω: {result.get('message', 'N/A')}")
                else:
                    print(f"     ‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (–∫–æ–¥: {response.getcode()})")
            except Exception as e:
                print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: {e}")
        
        print("   ‚úÖ –í—Å–µ CRUD —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è CRUD –æ–ø–µ—Ä–∞—Ü–∏–π: {e}")
        return False

def test_admin_providers_advanced_features():
    """–¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
    
    try:
        # 1. –¢–µ—Å—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
        print("   üìã –¢–µ—Å—Ç 1: –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤")
        
        bulk_update_data = [
            {
                "id": 1,
                "updates": {
                    "description": "–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –º–∞—Å—Å–æ–≤–æ",
                    "is_active": True
                }
            },
            {
                "id": 2,
                "updates": {
                    "description": "–í—Ç–æ—Ä–æ–µ –º–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
                }
            }
        ]
        
        try:
            bulk_url = f"{BASE_URL}/api/v1/admin/providers/bulk-update"
            data = json.dumps(bulk_update_data).encode('utf-8')
            req = urllib.request.Request(
                bulk_url,
                data=data,
                headers={
                    'Content-Type': 'application/json',
                    'Authorization': f'Bearer {get_auth_token()}'
                }
            )
            
            response = urllib.request.urlopen(req)
            if response.getcode() == 200:
                result = json.loads(response.read().decode())
                print(f"     ‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {result.get('message', 'N/A')}")
            else:
                print(f"     ‚ö†Ô∏è –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (–∫–æ–¥: {response.getcode()})")
        except Exception as e:
            print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
        
        # 2. –¢–µ—Å—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
        print("   üìã –¢–µ—Å—Ç 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É")
        
        try:
            test_url = f"{BASE_URL}/api/v1/admin/providers/1/test"
            req = urllib.request.Request(test_url)
            req.add_header('Authorization', f'Bearer {get_auth_token()}')
            
            response = urllib.request.urlopen(req)
            if response.getcode() == 200:
                test_result = json.loads(response.read().decode())
                print(f"     ‚úÖ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω: {test_result.get('test_status', 'N/A')}")
            else:
                print(f"     ‚ö†Ô∏è –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.getcode()})")
        except Exception as e:
            print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        
        print("   ‚úÖ –í—Å–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏")
    print("=" * 70)
    
    # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("‚è≥ –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(3)
    
    tests = [
        ("CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤", test_admin_providers_crud),
        ("–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏", test_admin_providers_advanced_features)
    ]
    
    results = []
    for test_name, test_func in tests:
        print(f"\nüìã –ó–∞–ø—É—Å–∫: {test_name}")
        try:
            result = test_func()
            results.append(result)
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£–°–ü–ï–•' if result else '‚ùå –ù–ï–£–î–ê–ß–ê'}")
        except Exception as e:
            print(f"   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            results.append(False)
        print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    print("=" * 70)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {sum(results)}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {len(results) - sum(results)}")
    print(f"üìà –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(sum(results)/len(results)*100):.1f}%")
    
    if sum(results) >= len(results) * 0.8:
        print("\nüéâ –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–û–í–ê–ô–î–ï–†–ê–ú–ò –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û!")
        print("‚úÖ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã")
        print("‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        return True
    elif sum(results) >= len(results) * 0.6:
        print("\n‚ö†Ô∏è –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ –†–ê–ë–û–¢–ê–ï–¢ –ß–ê–°–¢–ò–ß–ù–û")
        print("–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã, –µ—Å—Ç—å –º–µ–ª–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")
        return True
    else:
        print("\n‚ùå –ï—Å—Ç—å —Å–µ—Ä—å—ë–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é")
        print("–ú–Ω–æ–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return False

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)

