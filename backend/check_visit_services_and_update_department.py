#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª—É–≥ –≤ –≤–∏–∑–∏—Ç–∞—Ö –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ department
"""

import sqlite3
import json
from datetime import date

def check_visit_services_and_update_department():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏ –≤ –≤–∏–∑–∏—Ç–∞—Ö –∏ –æ–±–Ω–æ–≤–ª—è–µ–º department"""
    conn = sqlite3.connect('clinic.db')
    cursor = conn.cursor()
    
    today = date.today()
    print(f"üîß –ü–†–û–í–ï–†–ö–ê –£–°–õ–£–ì –í –í–ò–ó–ò–¢–ê–• –ò –û–ë–ù–û–í–õ–ï–ù–ò–ï DEPARTMENT")
    print("=" * 70)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã visit_services
    print(f"\nüìã –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ VISIT_SERVICES:")
    print("-" * 40)
    
    try:
        cursor.execute("PRAGMA table_info(visit_services)")
        columns = cursor.fetchall()
        
        for col in columns:
            print(f"  {col[1]} ({col[2]}) - {'NOT NULL' if col[3] else 'NULL'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT * FROM visit_services LIMIT 3")
        records = cursor.fetchall()
        
        if records:
            print(f"\n  –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:")
            for i, record in enumerate(records):
                print(f"    –ó–∞–ø–∏—Å—å {i+1}: {record}")
        else:
            print(f"\n  –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ visit_services: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–∑–∏—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    print(f"\nüìã –í–ò–ó–ò–¢–´ –ù–ê –°–ï–ì–û–î–ù–Ø –° –£–°–õ–£–ì–ê–ú–ò:")
    print("-" * 50)
    
    cursor.execute("""
        SELECT v.id, v.patient_id, v.department, v.created_at
        FROM visits v
        WHERE v.visit_date = ?
        ORDER BY v.created_at DESC
    """, (today,))
    visits = cursor.fetchall()
    
    updated_count = 0
    
    for visit in visits:
        visit_id, patient_id, department, created_at = visit
        print(f"\n  –í–∏–∑–∏—Ç {visit_id} (–ø–∞—Ü–∏–µ–Ω—Ç {patient_id}, –æ—Ç–¥–µ–ª: {department}):")
        
        # –ü–æ–ª—É—á–∞–µ–º —É—Å–ª—É–≥–∏ –≤–∏–∑–∏—Ç–∞
        cursor.execute("""
            SELECT vs.name, vs.code, vs.price, vs.qty
            FROM visit_services vs
            WHERE vs.visit_id = ?
        """, (visit_id,))
        visit_services = cursor.fetchall()
        
        if visit_services:
            print(f"    –£—Å–ª—É–≥–∏:")
            has_procedures = False
            
            for service in visit_services:
                name, code, price, qty = service
                print(f"      - {name} (–∫–æ–¥: {code}, —Ü–µ–Ω–∞: {price}, –∫–æ–ª-–≤–æ: {qty})")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—Å–ª—É–≥–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–æ–π
                if code:
                    if (code.startswith('P') and code[1:].isdigit()) or \
                       (code.startswith('C') and code[1:].isdigit()) or \
                       (code.startswith('D_PROC') and code[6:].isdigit()) or \
                       code.startswith('PHYS_') or \
                       code.startswith('COSM_') or \
                       code.startswith('DERM_'):
                        has_procedures = True
                        print(f"        üéØ –ü—Ä–æ—Ü–µ–¥—É—Ä–∞!")
                
                # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
                if name:
                    name_lower = name.lower()
                    if any(word in name_lower for word in [
                        '–¥–∞—Ä—Å–æ–Ω–≤–∞–ª—å', '—É—Ñ–æ', '–¥–∏–æ–¥–Ω–∞—è –º–∞—Å–∫–∞', '–±–∏–æ–ø—Ç—Ä–æ–Ω', '—ç–∫—Å–∏–º–µ—Ä –ª–∞–∑–µ—Ä',
                        '–ø–ª–∞–∑–º–æ–ª–∏—Ñ—Ç–∏–Ω–≥', '—á–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞', '–±–ª–µ—Ñ–∞—Ä–æ–ø–ª–∞—Å—Ç–∏–∫–∞', '–∂–∏—Ä–æ–≤–∏–∫', '—Ç–∞—Ç—É–∏—Ä–æ–≤–æ–∫', '–ø–∏–ª–∏–Ω–≥',
                        '–∫—Ä–∏–æ–¥–µ—Å—Ç—Ä—É–∫—Ü–∏—è', '–±–æ—Ä–æ–¥–∞–≤–æ–∫', '–ø–∞–ø–∏–ª–ª–æ–º', '–º–µ–∑–æ—Ç–µ—Ä–∞–ø–∏—è', '—Ä—É–±—Ü–æ–≤'
                    ]):
                        has_procedures = True
                        print(f"        üéØ –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é!")
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∏ –æ—Ç–¥–µ–ª –Ω–µ procedures, –æ–±–Ω–æ–≤–ª—è–µ–º
            if has_procedures and department != 'procedures':
                print(f"    ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ü—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ –æ—Ç–¥–µ–ª–µ '{department}', –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞ 'procedures'")
                cursor.execute("UPDATE visits SET department = 'procedures' WHERE id = ?", (visit_id,))
                updated_count += 1
                print(f"    ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: department = 'procedures'")
            elif has_procedures:
                print(f"    ‚úÖ –ü—Ä–æ—Ü–µ–¥—É—Ä—ã —É–∂–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–¥–µ–ª–µ 'procedures'")
            else:
                print(f"    ‚ÑπÔ∏è –ù–µ—Ç –ø—Ä–æ—Ü–µ–¥—É—Ä, –æ—Ç–¥–µ–ª '{department}' –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        else:
            print(f"    ‚ùå –ù–µ—Ç —É—Å–ª—É–≥ –≤ –≤–∏–∑–∏—Ç–µ")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    conn.commit()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("-" * 30)
    print(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –≤–∏–∑–∏—Ç–æ–≤: {updated_count}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç–¥–µ–ª–∞–º –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    cursor.execute("""
        SELECT department, COUNT(*) 
        FROM visits 
        WHERE visit_date = ?
        GROUP BY department
        ORDER BY COUNT(*) DESC
    """, (today,))
    departments_after = cursor.fetchall()
    
    print(f"\nüìã –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –û–¢–î–ï–õ–ê–ú –ü–û–°–õ–ï –û–ë–ù–û–í–õ–ï–ù–ò–Ø:")
    for dept, count in departments_after:
        print(f"  {dept}: {count} –∑–∞–ø–∏—Å–µ–π")
    
    conn.close()
    print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    check_visit_services_and_update_department()
