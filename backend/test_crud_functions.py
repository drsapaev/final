#!/usr/bin/env python3
"""
–¢–µ—Å—Ç CRUD —Ñ—É–Ω–∫—Ü–∏–π –≤–µ–±—Ö—É–∫–æ–≤
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), ".."))

from app.crud.payment_webhook import (count_transactions, count_webhooks,
                                      get_all_transactions, get_all_webhooks)
from app.db.session import get_db


def test_crud_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º CRUD —Ñ—É–Ω–∫—Ü–∏–∏"""
    print("üöÄ –¢–µ—Å—Ç CRUD —Ñ—É–Ω–∫—Ü–∏–π –≤–µ–±—Ö—É–∫–æ–≤")
    print("=" * 50)

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ë–î
        db = next(get_db())
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

        # –¢–µ—Å—Ç 1: –ü–æ–¥—Å—á—ë—Ç –≤–µ–±—Ö—É–∫–æ–≤
        print("\nüìä –¢–µ—Å—Ç –ø–æ–¥—Å—á—ë—Ç–∞ –≤–µ–±—Ö—É–∫–æ–≤...")
        try:
            webhook_count = count_webhooks(db)
            print(f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ–±—Ö—É–∫–æ–≤: {webhook_count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á—ë—Ç–∞ –≤–µ–±—Ö—É–∫–æ–≤: {e}")

        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–µ–±—Ö—É–∫–æ–≤
        print("\nüìã –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –≤–µ–±—Ö—É–∫–æ–≤...")
        try:
            webhooks = get_all_webhooks(db)
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –≤–µ–±—Ö—É–∫–æ–≤: {len(webhooks)}")
            if webhooks:
                print(f"  –ü–µ—Ä–≤—ã–π –≤–µ–±—Ö—É–∫: {webhooks[0]}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–æ–≤: {e}")

        # –¢–µ—Å—Ç 3: –ü–æ–¥—Å—á—ë—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        print("\nüí≥ –¢–µ—Å—Ç –ø–æ–¥—Å—á—ë—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...")
        try:
            transaction_count = count_transactions(db)
            print(f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {transaction_count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á—ë—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {e}")

        # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        print("\nüí≥ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...")
        try:
            transactions = get_all_transactions(db)
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(transactions)}")
            if transactions:
                print(f"  –ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: {transactions[0]}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {e}")
            import traceback

            traceback.print_exc()

        db.close()
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω")

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    test_crud_functions()
