#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞–Ω–µ–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º–∏ –∏ –∑–∞–ø–∏—Å—è–º–∏
"""
import httpx
import json
from datetime import datetime, timedelta

def test_registrar_panel():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    try:
        with httpx.Client() as client:
            # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω
            print("1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω...")
            login_data = {
                "username": "admin",
                "password": "admin123",
                "grant_type": "password"
            }
            login_response = client.post(
                "http://localhost:8000/api/v1/auth/login",
                data=login_data,
                timeout=10
            )
            if login_response.status_code != 200:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {login_response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {login_response.text}")
                return
            token_data = login_response.json()
            access_token = token_data.get("access_token")
            if not access_token:
                print("‚ùå –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç access_token")
                return
            print(f"‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω, —Ç–æ–∫–µ–Ω: {access_token[:20]}...")
            
            headers = {"Authorization": f"Bearer {access_token}"}
            
            # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
            print("\n2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞...")
            test_patient = {
                "first_name": "–ò–≤–∞–Ω",
                "last_name": "–ò–≤–∞–Ω–æ–≤",
                "middle_name": "–ò–≤–∞–Ω–æ–≤–∏—á",
                "birth_date": "1990-01-01",
                "gender": "male",
                "phone": "+998901234567",
                "doc_type": "passport",
                "doc_number": "AA1234567",
                "address": "–≥. –¢–∞—à–∫–µ–Ω—Ç, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1"
            }
            
            create_patient_response = client.post(
                "http://localhost:8000/api/v1/patients",
                headers={**headers, "Content-Type": "application/json"},
                json=test_patient,
                timeout=10
            )
            
            if create_patient_response.status_code == 200:
                created_patient = create_patient_response.json()
                patient_id = created_patient.get("id")
                print(f"‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å ID: {patient_id}")
                print(f"   –§–ò–û: {created_patient.get('last_name')} {created_patient.get('first_name')}")
                print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {created_patient.get('phone')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞: {create_patient_response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {create_patient_response.text}")
                return
            
            # 3. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
            print("\n3. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤...")
            patients_response = client.get(
                "http://localhost:8000/api/v1/patients",
                headers=headers,
                timeout=10
            )
            print(f"–°—Ç–∞—Ç—É—Å: {patients_response.status_code}")
            if patients_response.status_code == 200:
                patients = patients_response.json()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {len(patients)}")
                for patient in patients[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"   - {patient.get('last_name')} {patient.get('first_name')} (ID: {patient.get('id')})")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {patients_response.text}")
            
            # 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º
            print(f"\n4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_id}...")
            tomorrow = (datetime.now() + timedelta(days=1)).strftime("%Y-%m-%d")
            test_appointment = {
                "patient_id": patient_id,
                "doctor_id": 1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤—Ä–∞—á —Å ID 1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                "department": "ENT",
                "appointment_date": tomorrow,
                "appointment_time": "09:00",
                "reason": "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
                "notes": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å"
            }
            
            create_appointment_response = client.post(
                "http://localhost:8000/api/v1/appointments",
                headers={**headers, "Content-Type": "application/json"},
                json=test_appointment,
                timeout=10
            )
            
            if create_appointment_response.status_code == 200:
                created_appointment = create_appointment_response.json()
                appointment_id = created_appointment.get("id")
                print(f"‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {appointment_id}")
                print(f"   –î–∞—Ç–∞: {created_appointment.get('appointment_date')}")
                print(f"   –í—Ä–µ–º—è: {created_appointment.get('appointment_time')}")
                print(f"   –û—Ç–¥–µ–ª–µ–Ω–∏–µ: {created_appointment.get('department')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: {create_appointment_response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {create_appointment_response.text}")
                return
            
            # 5. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π
            print("\n5. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π...")
            appointments_response = client.get(
                "http://localhost:8000/api/v1/appointments",
                headers=headers,
                timeout=10
            )
            print(f"–°—Ç–∞—Ç—É—Å: {appointments_response.status_code}")
            if appointments_response.status_code == 200:
                appointments = appointments_response.json()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(appointments)}")
                for appointment in appointments[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"   - –ó–∞–ø–∏—Å—å #{appointment.get('id')} (–ü–∞—Ü–∏–µ–Ω—Ç ID: {appointment.get('patient_id')})")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π: {appointments_response.text}")
            
            # 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
            print("\n6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤...")
            search_response = client.get(
                "http://localhost:8000/api/v1/patients?q=–ò–≤–∞–Ω–æ–≤",
                headers=headers,
                timeout=10
            )
            if search_response.status_code == 200:
                search_results = search_response.json()
                print(f"‚úÖ –ü–æ–∏—Å–∫ –ø–æ '–ò–≤–∞–Ω–æ–≤' –≤–µ—Ä–Ω—É–ª: {len(search_results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            else:
                print(f"‚ö†Ô∏è  –ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {search_response.status_code}")
            
            # 7. –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
            print(f"\n7. –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_id}...")
            patient_appointments_response = client.get(
                f"http://localhost:8000/api/v1/patients/{patient_id}/appointments",
                headers=headers,
                timeout=10
            )
            if patient_appointments_response.status_code == 200:
                patient_appointments = patient_appointments_response.json()
                print(f"‚úÖ –£ –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_id} –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(patient_appointments)}")
            else:
                print(f"‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –ø–∞—Ü–∏–µ–Ω—Ç–∞: {patient_appointments_response.status_code}")
            
            # 8. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
            print(f"\n8. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å {appointment_id}...")
            delete_appointment_response = client.delete(
                f"http://localhost:8000/api/v1/appointments/{appointment_id}",
                headers=headers,
                timeout=10
            )
            if delete_appointment_response.status_code == 200:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
            else:
                print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏: {delete_appointment_response.status_code}")
            
            # 9. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
            print(f"\n9. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_id}...")
            delete_patient_response = client.delete(
                f"http://localhost:8000/api/v1/patients/{patient_id}",
                headers=headers,
                timeout=10
            )
            if delete_patient_response.status_code == 200:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç —É–¥–∞–ª–µ–Ω")
            else:
                print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞: {delete_patient_response.status_code}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    print("=" * 60)
    test_registrar_panel()
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
