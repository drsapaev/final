#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö API –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –æ—á–µ—Ä–µ–¥–∏
"""
from datetime import date, timedelta

import httpx


def test_schedule_queue_apis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ API –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –æ—á–µ—Ä–µ–¥–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –æ—á–µ—Ä–µ–¥–∏...")
    try:
        with httpx.Client() as client:
            # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω
            print("1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω...")
            login_data = {
                "username": "admin",
                "password": "admin123",
                "grant_type": "password",
            }
            login_response = client.post(
                "http://localhost:8000/api/v1/auth/login", data=login_data, timeout=10
            )
            if login_response.status_code != 200:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {login_response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {login_response.text}")
                return
            token_data = login_response.json()
            access_token = token_data.get("access_token")
            if not access_token:
                print("‚ùå –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç access_token")
                return
            print(f"‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω, —Ç–æ–∫–µ–Ω: {access_token[:20]}...")

            headers = {"Authorization": f"Bearer {access_token}"}

            # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
            print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")

            # 2.1. –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é
            print("2.1. –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é...")
            today = date.today()
            week_start = today - timedelta(days=today.weekday())
            week_start_str = week_start.strftime("%Y-%m-%d")

            weekly_response = client.get(
                f"http://localhost:8000/api/v1/schedule/weekly?week_start={week_start_str}",
                headers=headers,
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {weekly_response.status_code}")
            if weekly_response.status_code == 200:
                weekly_data = weekly_response.json()
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –¥–Ω–µ–π: {len(weekly_data)}")
                for day in weekly_data[:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 –¥–Ω—è
                    print(
                        f"   - {day.get('weekday_name')} {day.get('date')}: {len(day.get('templates', []))} —à–∞–±–ª–æ–Ω–æ–≤"
                    )
            else:
                print(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {weekly_response.text}"
                )

            # 2.2. –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å
            print("\n2.2. –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å...")
            today_str = today.strftime("%Y-%m-%d")
            daily_response = client.get(
                f"http://localhost:8000/api/v1/schedule/daily?date_str={today_str}",
                headers=headers,
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {daily_response.status_code}")
            if daily_response.status_code == 200:
                daily_data = daily_response.json()
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {daily_data.get('date')}")
                print(f"   –®–∞–±–ª–æ–Ω–æ–≤: {len(daily_data.get('templates', []))}")
                print(f"   –ó–∞–ø–∏—Å–µ–π: {len(daily_data.get('appointments', []))}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {daily_response.text}")

            # 2.3. –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã
            print("\n2.3. –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã...")
            slots_response = client.get(
                f"http://localhost:8000/api/v1/schedule/available-slots?date_str={today_str}&department=ENT",
                headers=headers,
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {slots_response.status_code}")
            if slots_response.status_code == 200:
                slots_data = slots_response.json()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤: {len(slots_data)}")
                for slot in slots_data[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å–ª–æ—Ç–∞
                    print(
                        f"   - {slot.get('time')}: {slot.get('available_capacity')}/{slot.get('total_capacity')} –º–µ—Å—Ç"
                    )
            else:
                print(f"‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–æ—Ç–æ–≤: {slots_response.status_code}")

            # 2.4. –ü–æ–ª—É—á–∞–µ–º –æ—Ç–¥–µ–ª–µ–Ω–∏—è
            print("\n2.4. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–µ–Ω–∏–π...")
            dept_response = client.get(
                "http://localhost:8000/api/v1/schedule/departments",
                headers=headers,
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {dept_response.status_code}")
            if dept_response.status_code == 200:
                dept_data = dept_response.json()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—Ç–¥–µ–ª–µ–Ω–∏–π: {len(dept_data)}")
                for dept in dept_data:
                    print(
                        f"   - {dept.get('department')}: {dept.get('template_count')} —à–∞–±–ª–æ–Ω–æ–≤"
                    )
            else:
                print(f"‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–π: {dept_response.status_code}")

            # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ—á–µ—Ä–µ–¥–∏
            print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ—á–µ—Ä–µ–¥–∏...")

            # 3.1. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏
            print("3.1. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏...")
            queue_response = client.get(
                f"http://localhost:8000/api/v1/queue/status?department=ENT&date_str={today_str}",
                headers=headers,
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {queue_response.status_code}")
            if queue_response.status_code == 200:
                queue_data = queue_response.json()
                print("‚úÖ –°—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏ –ø–æ–ª—É—á–µ–Ω:")
                print(f"   –û—Ç–¥–µ–ª–µ–Ω–∏–µ: {queue_data.get('department')}")
                print(f"   –î–∞—Ç–∞: {queue_data.get('date')}")
                print(f"   –û—Ç–∫—Ä—ã—Ç–∞: {queue_data.get('is_open')}")
                print(f"   –û–∂–∏–¥–∞—é—Ç: {queue_data.get('waiting')}")
                print(f"   –ù–∞ –ø—Ä–∏–µ–º–µ: {queue_data.get('serving')}")
                print(f"   –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {queue_data.get('done')}")
            else:
                print(f"‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–µ—Ä–µ–¥–∏: {queue_response.status_code}")

            # 3.2. –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥—å
            print("\n3.2. –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥—å...")
            open_response = client.post(
                "http://localhost:8000/api/v1/queue/open",
                headers={
                    **headers,
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                data={"department": "ENT", "date_str": today_str, "start_number": "1"},
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {open_response.status_code}")
            if open_response.status_code == 200:
                open_data = open_response.json()
                print(f"‚úÖ –û—á–µ—Ä–µ–¥—å –æ—Ç–∫—Ä—ã—Ç–∞: {open_data.get('message')}")
            else:
                print(f"‚ö†Ô∏è  –û—Ç–∫—Ä—ã—Ç–∏–µ –æ—á–µ—Ä–µ–¥–∏: {open_response.status_code}")

            # 3.3. –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ –æ—á–µ—Ä–µ–¥—å
            print("\n3.3. –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ –æ—á–µ—Ä–µ–¥—å...")
            add_response = client.post(
                "http://localhost:8000/api/v1/queue/add",
                headers={
                    **headers,
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                data={
                    "department": "ENT",
                    "date_str": today_str,
                    "patient_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞—Ü–∏–µ–Ω—Ç",
                    "priority": "false",
                },
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {add_response.status_code}")
            if add_response.status_code == 200:
                add_data = add_response.json()
                print(f"‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω: —Ç–∞–ª–æ–Ω #{add_data.get('ticket_number')}")
            else:
                print(f"‚ö†Ô∏è  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å: {add_response.status_code}")

            # 3.4. –í—ã–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
            print("\n3.4. –í—ã–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞...")
            next_response = client.post(
                "http://localhost:8000/api/v1/queue/next",
                headers={
                    **headers,
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                data={"department": "ENT", "date_str": today_str},
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {next_response.status_code}")
            if next_response.status_code == 200:
                next_data = next_response.json()
                print(f"‚úÖ –°–ª–µ–¥—É—é—â–∏–π –ø–∞—Ü–∏–µ–Ω—Ç –≤—ã–∑–≤–∞–Ω: {next_data.get('message')}")
            else:
                print(f"‚ö†Ô∏è  –í—ã–∑–æ–≤ –ø–∞—Ü–∏–µ–Ω—Ç–∞: {next_response.status_code}")

            # 3.5. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–∏–µ–º
            print("\n3.5. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–∏–µ–º...")
            complete_response = client.post(
                "http://localhost:8000/api/v1/queue/complete",
                headers={
                    **headers,
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                data={"department": "ENT", "date_str": today_str},
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {complete_response.status_code}")
            if complete_response.status_code == 200:
                complete_data = complete_response.json()
                print(f"‚úÖ –ü—Ä–∏–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω: {complete_data.get('message')}")
            else:
                print(f"‚ö†Ô∏è  –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏–µ–º–∞: {complete_response.status_code}")

            # 3.6. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–µ–Ω–∏–π —Å –æ—á–µ—Ä–µ–¥—è–º–∏
            print("\n3.6. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–µ–Ω–∏–π —Å –æ—á–µ—Ä–µ–¥—è–º–∏...")
            dept_queue_response = client.get(
                f"http://localhost:8000/api/v1/queue/departments?date_str={today_str}",
                headers=headers,
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {dept_queue_response.status_code}")
            if dept_queue_response.status_code == 200:
                dept_queue_data = dept_queue_response.json()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—Ç–¥–µ–ª–µ–Ω–∏–π —Å –æ—á–µ—Ä–µ–¥—è–º–∏: {len(dept_queue_data)}")
                for dept in dept_queue_data:
                    print(
                        f"   - {dept.get('department')}: –æ–∂–∏–¥–∞—é—Ç {dept.get('waiting')}"
                    )
            else:
                print(
                    f"‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–π —Å –æ—á–µ—Ä–µ–¥—è–º–∏: {dept_queue_response.status_code}"
                )

            # 3.7. –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥—å
            print("\n3.7. –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥—å...")
            close_response = client.post(
                "http://localhost:8000/api/v1/queue/close",
                headers={
                    **headers,
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                data={"department": "ENT", "date_str": today_str},
                timeout=10,
            )
            print(f"–°—Ç–∞—Ç—É—Å: {close_response.status_code}")
            if close_response.status_code == 200:
                close_data = close_response.json()
                print(f"‚úÖ –û—á–µ—Ä–µ–¥—å –∑–∞–∫—Ä—ã—Ç–∞: {close_data.get('message')}")
            else:
                print(f"‚ö†Ô∏è  –ó–∞–∫—Ä—ã—Ç–∏–µ –æ—á–µ—Ä–µ–¥–∏: {close_response.status_code}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –æ—á–µ—Ä–µ–¥–∏...")
    print("=" * 60)
    test_schedule_queue_apis()
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
