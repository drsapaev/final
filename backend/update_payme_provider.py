#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Payme —Å —Ç–µ—Å—Ç–æ–≤—ã–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–æ–º
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), ".."))

from app.crud.payment_webhook import get_provider_by_code, update_provider
from app.db.session import get_db
from app.schemas.payment_webhook import PaymentProviderUpdate


def update_payme_provider():
    """–û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Payme"""
    print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Payme")
    print("=" * 50)

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ë–î
        db = next(get_db())
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

        # –ò—â–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Payme
        provider = get_provider_by_code(db, code="payme")
        if not provider:
            print("‚ùå –ü—Ä–æ–≤–∞–π–¥–µ—Ä Payme –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        print(f"üìã –ù–∞–π–¥–µ–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {provider.name} (ID: {provider.id})")
        print(f"üîë –¢–µ–∫—É—â–∏–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á: {provider.secret_key or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π
        new_secret_key = "test_secret_key_12345"
        update_data = PaymentProviderUpdate(secret_key=new_secret_key)

        updated_provider = update_provider(db, provider.id, update_data)
        if updated_provider:
            print(f"‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä –æ–±–Ω–æ–≤–ª—ë–Ω!")
            print(f"üîë –ù–æ–≤—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á: {updated_provider.secret_key}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")

        db.close()
        print("\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    update_payme_provider()
