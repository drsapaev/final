#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ .env
"""
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(str(Path(__file__).parent))

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ .env")
    print("=" * 50)
    
    env_path = Path(".env")
    if env_path.exists():
        print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
        
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        with open(env_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        lines = content.split('\n')
        non_empty_lines = [line for line in lines if line.strip() and not line.strip().startswith('#')]
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(non_empty_lines)} –Ω–∞—Å—Ç—Ä–æ–µ–∫")
        print()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        important_settings = [
            'ENV', 'APP_NAME', 'APP_VERSION', 'API_V1_STR',
            'DATABASE_URL', 'SECRET_KEY', 'ALGORITHM', 'ACCESS_TOKEN_EXPIRE_MINUTES',
            'CORS_ALLOW_ALL', 'CORS_ORIGINS', 'TIMEZONE', 'QUEUE_START_HOUR',
            'PDF_FOOTER_ENABLED', 'PRINTER_TYPE', 'REQUIRE_LICENSE'
        ]
        
        print("üîß –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        for setting in important_settings:
            for line in lines:
                if line.startswith(f"{setting}="):
                    value = line.split('=', 1)[1].strip()
                    if setting == 'SECRET_KEY' and len(value) > 20:
                        value = value[:20] + "..."
                    print(f"  {setting}: {value}")
                    break
            else:
                print(f"  {setting}: ‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        print()
        print("üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        for line in lines:
            if line.strip() and not line.strip().startswith('#') and '=' in line:
                key = line.split('=')[0].strip()
                if key not in important_settings:
                    value = line.split('=', 1)[1].strip()
                    if 'KEY' in key.upper() or 'TOKEN' in key.upper() or 'SECRET' in key.upper():
                        value = value[:10] + "..." if len(value) > 10 else "***"
                    print(f"  {key}: {value}")
        
    else:
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    return True

def check_app_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º"""
    print("\nüöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 50)
    
    try:
        from app.core.config import get_settings
        settings = get_settings()
        
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        print()
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print("üìã –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
        print(f"  ENV: {settings.ENV}")
        print(f"  APP_NAME: {settings.APP_NAME}")
        print(f"  APP_VERSION: {settings.APP_VERSION}")
        print(f"  API_V1_STR: {settings.API_V1_STR}")
        print()
        
        # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        print("üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:")
        print(f"  DATABASE_URL: {settings.DATABASE_URL}")
        print()
        
        # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
        print("üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:")
        print(f"  SECRET_KEY: {settings.SECRET_KEY[:20]}...")
        print(f"  ALGORITHM: {settings.ALGORITHM}")
        print(f"  ACCESS_TOKEN_EXPIRE_MINUTES: {settings.ACCESS_TOKEN_EXPIRE_MINUTES}")
        print()
        
        # CORS
        print("üåê CORS:")
        print(f"  CORS_ALLOW_ALL: {getattr(settings, 'CORS_ALLOW_ALL', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}")
        print(f"  CORS_ORIGINS: {settings.BACKEND_CORS_ORIGINS}")
        print()
        
        # –í—Ä–µ–º—è –∏ –æ—á–µ—Ä–µ–¥—å
        print("‚è∞ –í—Ä–µ–º—è –∏ –æ—á–µ—Ä–µ–¥—å:")
        print(f"  TIMEZONE: {settings.TIMEZONE}")
        print(f"  QUEUE_START_HOUR: {settings.QUEUE_START_HOUR}")
        print(f"  ONLINE_MAX_PER_DAY: {settings.ONLINE_MAX_PER_DAY}")
        print()
        
        # PDF –∏ –ø–µ—á–∞—Ç—å
        print("üìÑ PDF –∏ –ø–µ—á–∞—Ç—å:")
        print(f"  PDF_FOOTER_ENABLED: {settings.PDF_FOOTER_ENABLED}")
        print(f"  CLINIC_LOGO_PATH: {settings.CLINIC_LOGO_PATH}")
        print()
        
        # –ü—Ä–∏–Ω—Ç–µ—Ä
        print("üñ®Ô∏è –ü—Ä–∏–Ω—Ç–µ—Ä:")
        print(f"  PRINTER_TYPE: {settings.PRINTER_TYPE}")
        print(f"  PRINTER_NET_HOST: {settings.PRINTER_NET_HOST}")
        print(f"  PRINTER_NET_PORT: {settings.PRINTER_NET_PORT}")
        print()
        
        # –õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ
        print("üìú –õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ:")
        print(f"  REQUIRE_LICENSE: {getattr(settings, 'REQUIRE_LICENSE', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}")
        print(f"  LICENSE_ALLOW_HEALTH: {getattr(settings, 'LICENSE_ALLOW_HEALTH', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

def check_environment_variables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüåç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    
    env_vars = [
        'ENV', 'APP_NAME', 'DATABASE_URL', 'SECRET_KEY', 
        'CORS_ORIGINS', 'TIMEZONE', 'FIREBASE_PROJECT_ID'
    ]
    
    for var in env_vars:
        value = os.getenv(var)
        if value:
            if 'KEY' in var or 'SECRET' in var:
                value = value[:10] + "..." if len(value) > 10 else "***"
            print(f"  {var}: {value}")
        else:
            print(f"  {var}: ‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –∫–ª–∏–Ω–∏–∫–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_ok = check_env_file()
    
    if env_ok:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app_ok = check_app_config()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        check_environment_variables()
        
        print("\n" + "=" * 60)
        if app_ok:
            print("‚úÖ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print("üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
        else:
            print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    else:
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ setup_env.py")

if __name__ == "__main__":
    main()
