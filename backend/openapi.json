{
  "openapi": "3.1.0",
  "info": {
    "title": "Clinic Manager API",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "OAuth2 password flow (token endpoint).\n\nAccepts form fields:\n  - username\n  - password\n  - scope (ignored)\nReturns:\n  {\"access_token\": \"<jwt>\", \"token_type\": \"bearer\"}\n\nWorks with both async and sync SQLAlchemy sessions returned by get_db().",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Login Api V1 Auth Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "simple-auth"
        ],
        "summary": "Get Current User Simple",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435",
        "operationId": "get_current_user_simple_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/json-login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Json Login",
        "description": "JSON login endpoint (\u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0430 OAuth2 form).\n\nAccepts JSON:\n  - username (email \u0438\u043b\u0438 username)\n  - password\n  - remember_me (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e)\nReturns:\n  {\"access_token\": \"<jwt>\", \"token_type\": \"bearer\", \"user\": {...}}",
        "operationId": "json_login_api_v1_auth_json_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JSONLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/simple-login": {
      "post": {
        "tags": [
          "simple-auth"
        ],
        "summary": "Simple Login",
        "description": "\u0423\u043f\u0440\u043e\u0449\u0435\u043d\u043d\u044b\u0439 \u0432\u0445\u043e\u0434 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0431\u0435\u0437 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439",
        "operationId": "simple_login_api_v1_auth_simple_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/minimal-login": {
      "post": {
        "tags": [
          "minimal-auth"
        ],
        "summary": "Minimal Login",
        "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u0445\u043e\u0434 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0431\u0435\u0437 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u043e\u0442 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439",
        "operationId": "minimal_login_api_v1_auth_minimal_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MinimalLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinimalLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "List Patients",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0438\u0441\u043a\u0430 \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438",
        "operationId": "list_patients_api_v1_patients__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0424\u0418\u041e, \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \u0438\u043b\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443",
              "title": "Q"
            },
            "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0424\u0418\u041e, \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \u0438\u043b\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Patient"
                  },
                  "title": "Response List Patients Api V1 Patients  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Create Patient",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "create_patient_api_v1_patients__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/{patient_id}": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Get Patient",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u043f\u043e ID",
        "operationId": "get_patient_api_v1_patients__patient_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "patients"
        ],
        "summary": "Update Patient",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "update_patient_api_v1_patients__patient_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "patients"
        ],
        "summary": "Delete Patient",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "delete_patient_api_v1_patients__patient_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/{patient_id}/appointments": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Get Patient Appointments",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_patient_appointments_api_v1_patients__patient_id__appointments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits": {
      "get": {
        "tags": [
          "visits"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0438\u0437\u0438\u0442\u043e\u0432",
        "operationId": "list_visits_api_v1_visits_visits_get",
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doctor Id"
            }
          },
          {
            "name": "status_q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Q"
            }
          },
          {
            "name": "planned_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Planned Date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VisitOut"
                  },
                  "title": "Response List Visits Api V1 Visits Visits Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u0438\u0437\u0438\u0442",
        "operationId": "create_visit_api_v1_visits_visits_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}": {
      "get": {
        "tags": [
          "visits"
        ],
        "summary": "\u041a\u0430\u0440\u0442\u043e\u0447\u043a\u0430 \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "get_visit_api_v1_visits_visits__visit_id__get",
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitWithServices"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}/services": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443 \u043a \u0432\u0438\u0437\u0438\u0442\u0443",
        "operationId": "add_service_api_v1_visits_visits__visit_id__services_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitServiceIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}/status": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u0421\u043c\u0435\u043d\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "set_status_api_v1_visits_visits__visit_id__status_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "status_new",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Status New"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}/reschedule": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u041f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432\u0438\u0437\u0438\u0442 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0434\u0430\u0442\u0443 (new_date \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD)",
        "description": "\u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u0432\u0438\u0437\u0438\u0442\u0430 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443 (\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 planned_date).\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442, \u0447\u0442\u043e\u0431\u044b \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 visits \u0431\u044b\u043b\u0430 \u043a\u043e\u043b\u043e\u043d\u043a\u0430 planned_date.",
        "operationId": "reschedule_visit_api_v1_visits_visits__visit_id__reschedule_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "new_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "New Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}/reschedule/tomorrow": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u041f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432\u0438\u0437\u0438\u0442 \u043d\u0430 \u0437\u0430\u0432\u0442\u0440\u0430 (planned_date = today + 1)",
        "operationId": "reschedule_visit_tomorrow_api_v1_visits_visits__visit_id__reschedule_tomorrow_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/categories": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u0443\u0441\u043b\u0443\u0433",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "list_service_categories_api_v1_services_categories_get",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__api__v1__endpoints__services__ServiceCategoryOut"
                  },
                  "title": "Response List Service Categories Api V1 Services Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "services"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e \u0443\u0441\u043b\u0443\u0433",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e \u0443\u0441\u043b\u0443\u0433",
        "operationId": "create_service_category_api_v1_services_categories_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCategoryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__v1__endpoints__services__ServiceCategoryOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/categories/{category_id}": {
      "put": {
        "tags": [
          "services"
        ],
        "summary": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e \u0443\u0441\u043b\u0443\u0433",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e \u0443\u0441\u043b\u0443\u0433",
        "operationId": "update_service_category_api_v1_services_categories__category_id__put",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__v1__endpoints__services__ServiceCategoryOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "services"
        ],
        "summary": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e \u0443\u0441\u043b\u0443\u0433",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e \u0443\u0441\u043b\u0443\u0433",
        "operationId": "delete_service_category_api_v1_services_categories__category_id__delete",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "\u041a\u0430\u0442\u0430\u043b\u043e\u0433 \u0443\u0441\u043b\u0443\u0433",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0441\u043b\u0443\u0433 \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439",
        "operationId": "list_services_api_v1_services_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 120
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOut"
                  },
                  "title": "Response List Services Api V1 Services Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "services"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u0443\u0441\u043b\u0443\u0433\u0443",
        "operationId": "create_service_api_v1_services_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443 \u043f\u043e ID",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0443\u0441\u043b\u0443\u0433\u0443 \u043f\u043e ID",
        "operationId": "get_service_api_v1_services__service_id__get",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "services"
        ],
        "summary": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0443\u0441\u043b\u0443\u0433\u0443",
        "operationId": "update_service_api_v1_services__service_id__put",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "services"
        ],
        "summary": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443",
        "operationId": "delete_service_api_v1_services__service_id__delete",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/admin/doctors": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0440\u0430\u0447\u0435\u0439 (\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439)",
        "description": "\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 endpoint \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0440\u0430\u0447\u0435\u0439",
        "operationId": "list_doctors_temp_api_v1_services_admin_doctors_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/app__api__v1__endpoints__services__DoctorOut"
                  },
                  "type": "array",
                  "title": "Response List Doctors Temp Api V1 Services Admin Doctors Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/providers": {
      "get": {
        "tags": [
          "payments-new"
        ],
        "summary": "Get Available Providers",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "get_available_providers_api_v1_payments_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvidersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/init": {
      "post": {
        "tags": [
          "payments-new"
        ],
        "summary": "Init Payment",
        "description": "\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043b\u0430\u0442\u0435\u0436\u0430",
        "operationId": "init_payment_api_v1_payments_init_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/{payment_id}": {
      "get": {
        "tags": [
          "payments-new"
        ],
        "summary": "Get Payment Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430",
        "operationId": "get_payment_status_api_v1_payments__payment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Payment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/visit/{visit_id}": {
      "get": {
        "tags": [
          "payments-new"
        ],
        "summary": "Get Visit Payments",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439 \u043f\u043e \u0432\u0438\u0437\u0438\u0442\u0443",
        "operationId": "get_visit_payments_api_v1_payments_visit__visit_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{payment_id}/cancel": {
      "post": {
        "tags": [
          "payments-new"
        ],
        "summary": "Cancel Payment",
        "description": "\u041e\u0442\u043c\u0435\u043d\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430",
        "operationId": "cancel_payment_api_v1_payments__payment_id__cancel_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Payment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Cancel Payment Api V1 Payments  Payment Id  Cancel Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/test-init": {
      "post": {
        "tags": [
          "payments-new"
        ],
        "summary": "Test Init Payment",
        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043b\u0430\u0442\u0435\u0436\u0430 \u0411\u0415\u0417 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "test_init_payment_api_v1_payments_test_init_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{payment_id}/receipt": {
      "post": {
        "tags": [
          "payments-new"
        ],
        "summary": "Generate Receipt",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043a\u0432\u0438\u0442\u0430\u043d\u0446\u0438\u0438 \u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u0435",
        "operationId": "generate_receipt_api_v1_payments__payment_id__receipt_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Payment Id"
            }
          },
          {
            "name": "format_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "pdf",
              "title": "Format Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{payment_id}/receipt/download": {
      "get": {
        "tags": [
          "payments-new"
        ],
        "summary": "Download Receipt",
        "description": "\u0421\u043a\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u0435 \u043a\u0432\u0438\u0442\u0430\u043d\u0446\u0438\u0438",
        "operationId": "download_receipt_api_v1_payments__payment_id__receipt_download_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Payment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/invoice/create": {
      "post": {
        "tags": [
          "payments-new"
        ],
        "summary": "Create Payment Invoice",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0447\u0435\u0442\u0430 \u0434\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b \u0438\u0437 \u043c\u043e\u0434\u0443\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b",
        "operationId": "create_payment_invoice_api_v1_payments_invoice_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/invoices/pending": {
      "get": {
        "tags": [
          "payments-new"
        ],
        "summary": "Get Pending Invoices",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u0435\u043e\u043f\u043b\u0430\u0447\u0435\u043d\u043d\u044b\u0445 \u0441\u0447\u0435\u0442\u043e\u0432",
        "operationId": "get_pending_invoices_api_v1_payments_invoices_pending_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentInvoiceResponse"
                  },
                  "type": "array",
                  "title": "Response Get Pending Invoices Api V1 Payments Invoices Pending Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/webhook/click": {
      "post": {
        "tags": [
          "payment-webhooks"
        ],
        "summary": "Click Webhook",
        "description": "Webhook \u0434\u043b\u044f Click \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "click_webhook_api_v1_payments_webhook_click_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Click Webhook Api V1 Payments Webhook Click Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/webhook/payme": {
      "post": {
        "tags": [
          "payment-webhooks"
        ],
        "summary": "Payme Webhook",
        "description": "Webhook \u0434\u043b\u044f Payme \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b (JSON-RPC)",
        "operationId": "payme_webhook_api_v1_payments_webhook_payme_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Payme Webhook Api V1 Payments Webhook Payme Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/webhook/kaspi": {
      "post": {
        "tags": [
          "payment-webhooks"
        ],
        "summary": "Kaspi Webhook",
        "description": "Webhook \u0434\u043b\u044f Kaspi Pay \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "kaspi_webhook_api_v1_payments_webhook_kaspi_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Kaspi Webhook Api V1 Payments Webhook Kaspi Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/visits/confirm": {
      "post": {
        "tags": [
          "visit-confirmation"
        ],
        "summary": "Confirm Visit By Telegram",
        "description": "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u0438\u0437\u0438\u0442\u0430 \u0447\u0435\u0440\u0435\u0437 Telegram \u0431\u043e\u0442 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0443\n\u041f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0431\u0435\u0437 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
        "operationId": "confirm_visit_by_telegram_api_v1_telegram_visits_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TelegramConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/visits/confirm": {
      "post": {
        "tags": [
          "visit-confirmation"
        ],
        "summary": "Confirm Visit By Pwa",
        "description": "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u0438\u0437\u0438\u0442\u0430 \u0447\u0435\u0440\u0435\u0437 PWA \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0443\n\u041f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0431\u0435\u0437 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
        "operationId": "confirm_visit_by_pwa_api_v1_patient_visits_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PWAConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/info/{token}": {
      "get": {
        "tags": [
          "visit-confirmation"
        ],
        "summary": "Get Visit Info By Token",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0438\u0437\u0438\u0442\u0435 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0443 (\u0431\u0435\u0437 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f)\n\u0414\u043b\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435\u043c",
        "operationId": "get_visit_info_by_token_api_v1_visits_info__token__get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/morning-assignment/run": {
      "post": {
        "tags": [
          "morning-assignment"
        ],
        "summary": "Run Morning Assignment Manual",
        "description": "\u0420\u0443\u0447\u043d\u043e\u0439 \u0437\u0430\u043f\u0443\u0441\u043a \u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0441\u0431\u043e\u0440\u043a\u0438 \u0434\u043b\u044f \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u0445\n\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0435 \u0432\u0438\u0437\u0438\u0442\u044b \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "run_morning_assignment_manual_api_v1_admin_morning_assignment_run_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f",
              "title": "Target Date"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MorningAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/morning-assignment/stats": {
      "get": {
        "tags": [
          "morning-assignment"
        ],
        "summary": "Get Morning Assignment Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0441\u0431\u043e\u0440\u043a\u0438\n\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0432\u0438\u0437\u0438\u0442\u043e\u0432 \u0438 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u0445",
        "operationId": "get_morning_assignment_stats_api_v1_admin_morning_assignment_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f",
              "title": "Target Date"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/morning-assignment/manual": {
      "post": {
        "tags": [
          "morning-assignment"
        ],
        "summary": "Manual Assignment For Visits",
        "description": "\u0420\u0443\u0447\u043d\u043e\u0435 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u0432\u0438\u0437\u0438\u0442\u043e\u0432\n\u041f\u043e\u043b\u0435\u0437\u043d\u043e \u0434\u043b\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a \u0438\u043b\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432",
        "operationId": "manual_assignment_for_visits_api_v1_admin_morning_assignment_manual_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/morning-assignment/pending-visits": {
      "get": {
        "tags": [
          "morning-assignment"
        ],
        "summary": "Get Pending Visits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0438\u0437\u0438\u0442\u043e\u0432, \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u043d\u043e\u043c\u0435\u0440\u043e\u0432",
        "operationId": "get_pending_visits_api_v1_admin_morning_assignment_pending_visits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f",
              "title": "Target Date"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/morning-assignment/queue-summary": {
      "get": {
        "tags": [
          "morning-assignment"
        ],
        "summary": "Get Queue Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0434\u043a\u0438 \u043f\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u043c \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "get_queue_summary_api_v1_admin_morning_assignment_queue_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f",
              "title": "Target Date"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/security/stats": {
      "get": {
        "tags": [
          "security-management"
        ],
        "summary": "Get Security Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_security_stats_api_v1_admin_security_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0432 \u0447\u0430\u0441\u0430\u0445 (1-168)",
              "default": 24,
              "title": "Hours"
            },
            "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0432 \u0447\u0430\u0441\u0430\u0445 (1-168)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/security/cleanup-expired-tokens": {
      "post": {
        "tags": [
          "security-management"
        ],
        "summary": "Cleanup Expired Tokens",
        "description": "\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u0438\u0441\u0442\u0435\u043a\u0448\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u044b \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "cleanup_expired_tokens_api_v1_admin_security_cleanup_expired_tokens_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleanupResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/security/config": {
      "get": {
        "tags": [
          "security-management"
        ],
        "summary": "Get Security Config",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_security_config_api_v1_admin_security_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/security/validate-token/{token}": {
      "get": {
        "tags": [
          "security-management"
        ],
        "summary": "Validate Token Security",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0442\u043e\u043a\u0435\u043d\u0430\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "validate_token_security_api_v1_admin_security_validate_token__token__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/security/reset-rate-limits": {
      "post": {
        "tags": [
          "security-management"
        ],
        "summary": "Reset Rate Limits",
        "description": "\u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 rate limits\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c\n\nArgs:\n    target_type: \u0422\u0438\u043f \u0446\u0435\u043b\u0438 (ip, patient, all)\n    target_id: ID \u0446\u0435\u043b\u0438 (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f ip \u0438 patient)",
        "operationId": "reset_rate_limits_api_v1_admin_security_reset_rate_limits_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(ip|patient|all)$",
              "description": "\u0422\u0438\u043f \u0446\u0435\u043b\u0438 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430",
              "title": "Target Type"
            },
            "description": "\u0422\u0438\u043f \u0446\u0435\u043b\u0438 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430"
          },
          {
            "name": "target_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0446\u0435\u043b\u0438 (IP \u0438\u043b\u0438 patient_id)",
              "title": "Target Id"
            },
            "description": "ID \u0446\u0435\u043b\u0438 (IP \u0438\u043b\u0438 patient_id)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/security/block-ip/{ip}": {
      "post": {
        "tags": [
          "security-management"
        ],
        "summary": "Block Ip Address",
        "description": "\u0411\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 IP \u0430\u0434\u0440\u0435\u0441\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "block_ip_address_api_v1_admin_security_block_ip__ip__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041f\u0440\u0438\u0447\u0438\u043d\u0430 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438",
              "title": "Reason"
            },
            "description": "\u041f\u0440\u0438\u0447\u0438\u043d\u0430 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438"
          },
          {
            "name": "duration_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 8760,
              "minimum": 1,
              "description": "\u0414\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0447\u0430\u0441\u0430\u0445",
              "default": 24,
              "title": "Duration Hours"
            },
            "description": "\u0414\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0447\u0430\u0441\u0430\u0445"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "security-management"
        ],
        "summary": "Unblock Ip Address",
        "description": "\u0420\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 IP \u0430\u0434\u0440\u0435\u0441\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "unblock_ip_address_api_v1_admin_security_block_ip__ip__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/migration/migrate-legacy-data": {
      "post": {
        "tags": [
          "migration-management"
        ],
        "summary": "Migrate Legacy Queue Data",
        "description": "\u041c\u0438\u0433\u0440\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0441\u0442\u0430\u0440\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0446 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u0432 \u043d\u043e\u0432\u044b\u0435\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "migrate_legacy_queue_data_api_v1_admin_migration_migrate_legacy_data_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/migration/check-integrity": {
      "get": {
        "tags": [
          "migration-management"
        ],
        "summary": "Check Data Integrity",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0441\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0430\u0445 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "check_data_integrity_api_v1_admin_migration_check_integrity_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrityCheckResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/migration/backup-queue-data": {
      "post": {
        "tags": [
          "migration-management"
        ],
        "summary": "Backup Queue Data",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0443\u044e \u043a\u043e\u043f\u0438\u044e \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "backup_queue_data_api_v1_admin_migration_backup_queue_data_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Target Date"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/migration/restore-queue-data": {
      "post": {
        "tags": [
          "migration-management"
        ],
        "summary": "Restore Queue Data",
        "description": "\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u0438\u0437 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "restore_queue_data_api_v1_admin_migration_restore_queue_data_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_file",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438",
              "title": "Backup File"
            },
            "description": "\u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/migration/cleanup-old-data": {
      "post": {
        "tags": [
          "migration-management"
        ],
        "summary": "Cleanup Old Queue Data",
        "description": "\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0440\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "cleanup_old_queue_data_api_v1_admin_migration_cleanup_old_data_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_to_keep",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f",
              "default": 30,
              "title": "Days To Keep"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleanupResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/migration/stats": {
      "get": {
        "tags": [
          "migration-management"
        ],
        "summary": "Get Migration Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u043e \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044f\u043c \u0438 \u0434\u0430\u043d\u043d\u044b\u043c \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_migration_stats_api_v1_admin_migration_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/migration/health": {
      "get": {
        "tags": [
          "migration-management"
        ],
        "summary": "Check Migration Health",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "check_migration_health_api_v1_admin_migration_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/feature-flags": {
      "get": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Get All Feature Flags",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_all_feature_flags_api_v1_admin_feature_flags_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeatureFlagResponse"
                  },
                  "title": "Response Get All Feature Flags Api V1 Admin Feature Flags Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Create Feature Flag",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "create_feature_flag_api_v1_admin_feature_flags_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureFlagCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlagResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/feature-flags/{flag_key}": {
      "get": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Get Feature Flag",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433 \u043f\u043e \u043a\u043b\u044e\u0447\u0443\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_feature_flag_api_v1_admin_feature_flags__flag_key__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flag Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlagResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Update Feature Flag",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "update_feature_flag_api_v1_admin_feature_flags__flag_key__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flag Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureFlagUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlagResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Delete Feature Flag",
        "description": "\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "delete_feature_flag_api_v1_admin_feature_flags__flag_key__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flag Key"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/feature-flags/{flag_key}/toggle": {
      "post": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Toggle Feature Flag",
        "description": "\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u0430\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "toggle_feature_flag_api_v1_admin_feature_flags__flag_key__toggle_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flag Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureFlagToggleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlagStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/feature-flags/bulk-toggle": {
      "post": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Bulk Toggle Feature Flags",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u043e\u0432\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "bulk_toggle_feature_flags_api_v1_admin_feature_flags_bulk_toggle_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkToggleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/feature-flags/{flag_key}/history": {
      "get": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Get Feature Flag History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u0430\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_feature_flag_history_api_v1_admin_feature_flags__flag_key__history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flag Key"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeatureFlagHistoryResponse"
                  },
                  "title": "Response Get Feature Flag History Api V1 Admin Feature Flags  Flag Key  History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feature-flags/status/{flag_key}": {
      "get": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Get Feature Flag Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u0430 (\u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442)\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0432\u0441\u0435\u043c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c",
        "operationId": "get_feature_flag_status_api_v1_feature_flags_status__flag_key__get",
        "parameters": [
          {
            "name": "flag_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flag Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlagStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feature-flags/status": {
      "get": {
        "tags": [
          "feature-flags"
        ],
        "summary": "Get Multiple Feature Flags Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u043e\u0432\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0432\u0441\u0435\u043c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\n\nArgs:\n    keys: \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u044e\u0447\u0435\u0439 \u0444\u043b\u0430\u0433\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \"flag1,flag2,flag3\")",
        "operationId": "get_multiple_feature_flags_status_api_v1_feature_flags_status_get",
        "parameters": [
          {
            "name": "keys",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Keys"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/qr-tokens/generate": {
      "post": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Generate Qr Token",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 QR \u0442\u043e\u043a\u0435\u043d \u0434\u043b\u044f \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043a \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c, \u0432\u0440\u0430\u0447\u0430\u043c \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "generate_qr_token_api_v1_admin_qr_tokens_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QRTokenGenerateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/qr-tokens/{token}/info": {
      "get": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Get Qr Token Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e QR \u0442\u043e\u043a\u0435\u043d\u0435 (\u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442)",
        "operationId": "get_qr_token_info_api_v1_qr_tokens__token__info_get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRTokenInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/join/start": {
      "post": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Start Join Session",
        "description": "\u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043a \u043e\u0447\u0435\u0440\u0435\u0434\u0438 (\u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442)",
        "operationId": "start_join_session_api_v1_queue_join_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinSessionStartRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinSessionStartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/join/complete": {
      "post": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Complete Join Session",
        "description": "\u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043a \u043e\u0447\u0435\u0440\u0435\u0434\u0438 (\u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442)",
        "operationId": "complete_join_session_api_v1_queue_join_complete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinSessionCompleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinSessionCompleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/status/{specialist_id}": {
      "get": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Get Queue Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c, \u0432\u0440\u0430\u0447\u0430\u043c \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_queue_status_api_v1_queue_status__specialist_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Specialist Id"
            }
          },
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Target Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__v1__endpoints__qr_queue__QueueStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/{specialist_id}/call-next": {
      "post": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Call Next Patient",
        "description": "\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c, \u0432\u0440\u0430\u0447\u0430\u043c \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "call_next_patient_api_v1_queue__specialist_id__call_next_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Specialist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallNextPatientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/qr-tokens/active": {
      "get": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Get Active Qr Tokens",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 QR \u0442\u043e\u043a\u0435\u043d\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c, \u0432\u0440\u0430\u0447\u0430\u043c \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_active_qr_tokens_api_v1_admin_qr_tokens_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActiveQRTokenResponse"
                  },
                  "type": "array",
                  "title": "Response Get Active Qr Tokens Api V1 Admin Qr Tokens Active Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/qr-tokens/{token}": {
      "delete": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Deactivate Qr Token",
        "description": "\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 QR \u0442\u043e\u043a\u0435\u043d\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c, \u0432\u0440\u0430\u0447\u0430\u043c \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "deactivate_qr_token_api_v1_admin_qr_tokens__token__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queue-analytics/{specialist_id}": {
      "get": {
        "tags": [
          "qr-queue"
        ],
        "summary": "Get Queue Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043f\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u043c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_queue_analytics_api_v1_admin_queue_analytics__specialist_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Specialist Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queue-limits": {
      "get": {
        "tags": [
          "queue-limits"
        ],
        "summary": "Get Queue Limits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u0438\u043c\u0438\u0442\u043e\u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "get_queue_limits_api_v1_admin_queue_limits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueueLimitResponse"
                  },
                  "title": "Response Get Queue Limits Api V1 Admin Queue Limits Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "queue-limits"
        ],
        "summary": "Update Queue Limits",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u0438\u043c\u0438\u0442\u043e\u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "update_queue_limits_api_v1_admin_queue_limits_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/QueueLimitUpdate"
                },
                "title": "Limits"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queue-status": {
      "get": {
        "tags": [
          "queue-limits"
        ],
        "summary": "Get Queue Status With Limits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043b\u0438\u043c\u0438\u0442\u0430\u0445",
        "operationId": "get_queue_status_with_limits_api_v1_admin_queue_status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f)",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f)"
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__api__v1__endpoints__queue_limits__QueueStatusResponse"
                  },
                  "title": "Response Get Queue Status With Limits Api V1 Admin Queue Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/doctor-queue-limit": {
      "put": {
        "tags": [
          "queue-limits"
        ],
        "summary": "Set Doctor Queue Limit",
        "description": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u0438\u043c\u0438\u0442 \u0434\u043b\u044f \u0432\u0440\u0430\u0447\u0430 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
        "operationId": "set_doctor_queue_limit_api_v1_admin_doctor_queue_limit_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorQueueLimit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/reset-queue-limits": {
      "post": {
        "tags": [
          "queue-limits"
        ],
        "summary": "Reset Queue Limits",
        "description": "\u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u043b\u0438\u043c\u0438\u0442\u044b \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u043a \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e",
        "operationId": "reset_queue_limits_api_v1_admin_reset_queue_limits_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u043b\u0438\u043c\u0438\u0442\u044b \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
              "title": "Specialty"
            },
            "description": "\u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u043b\u0438\u043c\u0438\u0442\u044b \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queues/cabinet-info": {
      "get": {
        "tags": [
          "queue-cabinet-management"
        ],
        "summary": "Get Queues Cabinet Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430\u0445 \u0434\u043b\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "get_queues_cabinet_info_api_v1_admin_queues_cabinet_info_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          },
          {
            "name": "cabinet_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041d\u043e\u043c\u0435\u0440 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430",
              "title": "Cabinet Number"
            },
            "description": "\u041d\u043e\u043c\u0435\u0440 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueueCabinetResponse"
                  },
                  "title": "Response Get Queues Cabinet Info Api V1 Admin Queues Cabinet Info Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queues/{queue_id}/cabinet-info": {
      "get": {
        "tags": [
          "queue-cabinet-management"
        ],
        "summary": "Get Queue Cabinet Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "get_queue_cabinet_info_api_v1_admin_queues__queue_id__cabinet_info_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "queue-cabinet-management"
        ],
        "summary": "Update Queue Cabinet Info",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u0434\u043b\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "update_queue_cabinet_info_api_v1_admin_queues__queue_id__cabinet_info_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Queue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CabinetInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queues/cabinet-info/bulk": {
      "put": {
        "tags": [
          "queue-cabinet-management"
        ],
        "summary": "Bulk Update Cabinet Info",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430\u0445 \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "bulk_update_cabinet_info_api_v1_admin_queues_cabinet_info_bulk_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCabinetUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/queues/sync-cabinet-info": {
      "post": {
        "tags": [
          "queue-cabinet-management"
        ],
        "summary": "Sync Cabinet Info From Doctors",
        "description": "\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430\u0445 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b doctors\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "sync_cabinet_info_from_doctors_api_v1_admin_queues_sync_cabinet_info_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0434\u043b\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f)",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0434\u043b\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f)"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queues/cabinet-statistics": {
      "get": {
        "tags": [
          "queue-cabinet-management"
        ],
        "summary": "Get Cabinet Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432",
        "operationId": "get_cabinet_statistics_api_v1_admin_queues_cabinet_statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/user-data/users/{user_id}/data-summary": {
      "get": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Get User Data Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u0434\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_user_data_summary_api_v1_admin_user_data_users__user_id__data_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDataSummaryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/user-data/users/search": {
      "get": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Search Users For Transfer",
        "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "search_users_for_transfer_api_v1_admin_user_data_users_search_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "description": "\u041f\u043e\u0438\u0441\u043a\u043e\u0432\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 (\u0438\u043c\u044f, \u0442\u0435\u043b\u0435\u0444\u043e\u043d, email)",
              "title": "Query"
            },
            "description": "\u041f\u043e\u0438\u0441\u043a\u043e\u0432\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 (\u0438\u043c\u044f, \u0442\u0435\u043b\u0435\u0444\u043e\u043d, email)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432",
              "default": 10,
              "title": "Limit"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/user-data/transfer": {
      "post": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Transfer User Data",
        "description": "\u041f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a \u0434\u0440\u0443\u0433\u043e\u043c\u0443\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "transfer_user_data_api_v1_admin_user_data_transfer_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataTransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataTransferResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/user-data/transfer/request-confirmation": {
      "post": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Request Transfer Confirmation",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445\n\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0442\u043e\u043a\u0435\u043d \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c",
        "operationId": "request_transfer_confirmation_api_v1_admin_user_data_transfer_request_confirmation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataTransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/user-data/transfer/confirm": {
      "post": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Confirm Data Transfer",
        "description": "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0443\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043b\u044e\u0431\u043e\u043c\u0443 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e",
        "operationId": "confirm_data_transfer_api_v1_admin_user_data_transfer_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferConfirmationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/user-data/transfer/history": {
      "get": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Get Transfer History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043f\u0435\u0440\u0435\u0434\u0430\u0447 \u0434\u0430\u043d\u043d\u044b\u0445\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "get_transfer_history_api_v1_admin_user_data_transfer_history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438",
              "title": "User Id"
            },
            "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439",
              "default": 50,
              "title": "Limit"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/user-data/transfer/statistics": {
      "get": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Get Transfer Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u0435\u0440\u0435\u0434\u0430\u0447 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "get_transfer_statistics_api_v1_admin_user_data_transfer_statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "period_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0432 \u0434\u043d\u044f\u0445",
              "default": 30,
              "title": "Period Days"
            },
            "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0432 \u0434\u043d\u044f\u0445"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/user-data/transfer/validate": {
      "post": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Validate Transfer Request",
        "description": "\u0412\u0430\u043b\u0438\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438",
        "operationId": "validate_transfer_request_api_v1_admin_user_data_transfer_validate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f-\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430",
              "title": "Source User Id"
            },
            "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f-\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430"
          },
          {
            "name": "target_user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f-\u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f",
              "title": "Target User Id"
            },
            "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f-\u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/user-data/transfer/data-types": {
      "get": {
        "tags": [
          "user-data-transfer"
        ],
        "summary": "Get Available Data Types",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438",
        "operationId": "get_available_data_types_api_v1_admin_user_data_transfer_data_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/permissions/users/{user_id}/permissions": {
      "get": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Get User Permissions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0411\u0414\n\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438\u0437 \u0440\u043e\u043b\u0435\u0439, \u0433\u0440\u0443\u043f\u043f \u0438 \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_user_permissions_api_v1_admin_permissions_users__user_id__permissions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "use_cache",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u044d\u0448",
              "default": true,
              "title": "Use Cache"
            },
            "description": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u044d\u0448"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/users/{user_id}/permissions/check": {
      "get": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Check User Permission",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435",
        "operationId": "check_user_permission_api_v1_admin_permissions_users__user_id__permissions_check_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u0434 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438",
              "title": "Permission"
            },
            "description": "\u041a\u043e\u0434 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/groups": {
      "get": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Get Groups",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0433\u0440\u0443\u043f\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439",
        "operationId": "get_groups_api_v1_admin_permissions_groups_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0433\u0440\u0443\u043f\u043f\u044b",
              "default": true,
              "title": "Active Only"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0433\u0440\u0443\u043f\u043f\u044b"
          },
          {
            "name": "group_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0422\u0438\u043f \u0433\u0440\u0443\u043f\u043f\u044b",
              "title": "Group Type"
            },
            "description": "\u0422\u0438\u043f \u0433\u0440\u0443\u043f\u043f\u044b"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u0440\u0443\u043f\u043f",
              "default": 50,
              "title": "Limit"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u0440\u0443\u043f\u043f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupResponse"
                  },
                  "title": "Response Get Groups Api V1 Admin Permissions Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/groups/{group_id}/permissions": {
      "get": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Get Group Permissions Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u0434\u043a\u0443 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0433\u0440\u0443\u043f\u043f\u044b",
        "operationId": "get_group_permissions_summary_api_v1_admin_permissions_groups__group_id__permissions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPermissionsSummaryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/groups/{group_id}/roles": {
      "post": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Assign Role To Group",
        "description": "\u041d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u0440\u043e\u043b\u044c \u0433\u0440\u0443\u043f\u043f\u0435",
        "operationId": "assign_role_to_group_api_v1_admin_permissions_groups__group_id__roles_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/groups/{group_id}/roles/{role_id}": {
      "delete": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Revoke Role From Group",
        "description": "\u041e\u0442\u043e\u0437\u0432\u0430\u0442\u044c \u0440\u043e\u043b\u044c \u0443 \u0433\u0440\u0443\u043f\u043f\u044b",
        "operationId": "revoke_role_from_group_api_v1_admin_permissions_groups__group_id__roles__role_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/groups/{group_id}/users": {
      "post": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Add User To Group",
        "description": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0433\u0440\u0443\u043f\u043f\u0443",
        "operationId": "add_user_to_group_api_v1_admin_permissions_groups__group_id__users_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserToGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/groups/{group_id}/users/{user_id}": {
      "delete": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Remove User From Group",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0433\u0440\u0443\u043f\u043f\u044b",
        "operationId": "remove_user_from_group_api_v1_admin_permissions_groups__group_id__users__user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/roles": {
      "get": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Get Roles",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u043e\u043b\u0435\u0439",
        "operationId": "get_roles_api_v1_admin_permissions_roles_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0440\u043e\u043b\u0438",
              "default": true,
              "title": "Active Only"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0440\u043e\u043b\u0438"
          },
          {
            "name": "include_system",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u0440\u043e\u043b\u0438",
              "default": true,
              "title": "Include System"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u0440\u043e\u043b\u0438"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u043e\u043b\u0435\u0439",
              "default": 50,
              "title": "Limit"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u043e\u043b\u0435\u0439"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  },
                  "title": "Response Get Roles Api V1 Admin Permissions Roles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/permissions": {
      "get": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Get Permissions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439",
        "operationId": "get_permissions_api_v1_admin_permissions_permissions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f",
              "default": true,
              "title": "Active Only"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439",
              "title": "Category"
            },
            "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439",
              "default": 100,
              "title": "Limit"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionResponse"
                  },
                  "title": "Response Get Permissions Api V1 Admin Permissions Permissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/permissions/users/permission-override": {
      "post": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Create Permission Override",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "create_permission_override_api_v1_admin_permissions_users_permission_override_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionOverrideRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/permissions/cache/clear": {
      "post": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Clear Permissions Cache",
        "description": "\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u043a\u044d\u0448 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439",
        "operationId": "clear_permissions_cache_api_v1_admin_permissions_cache_clear_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/permissions/cache/stats": {
      "get": {
        "tags": [
          "group-permissions"
        ],
        "summary": "Get Cache Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043a\u044d\u0448\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439",
        "operationId": "get_cache_stats_api_v1_admin_permissions_cache_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/notifications/registrars": {
      "get": {
        "tags": [
          "registrar-notifications"
        ],
        "summary": "Get Active Registrars",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432",
        "operationId": "get_active_registrars_api_v1_registrar_notifications_registrars_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrarListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/notifications/appointment": {
      "post": {
        "tags": [
          "registrar-notifications"
        ],
        "summary": "Notify New Appointment",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e \u043d\u043e\u0432\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "notify_new_appointment_api_v1_registrar_notifications_appointment_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/notifications/price-change": {
      "post": {
        "tags": [
          "registrar-notifications"
        ],
        "summary": "Notify Price Change",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0431 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u0446\u0435\u043d\u044b",
        "operationId": "notify_price_change_api_v1_registrar_notifications_price_change_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceChangeNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/notifications/queue-status": {
      "post": {
        "tags": [
          "registrar-notifications"
        ],
        "summary": "Notify Queue Status",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "notify_queue_status_api_v1_registrar_notifications_queue_status_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueStatusNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/notifications/system-alert": {
      "post": {
        "tags": [
          "registrar-notifications"
        ],
        "summary": "Send System Alert",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435",
        "operationId": "send_system_alert_api_v1_registrar_notifications_system_alert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemAlertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/notifications/daily-summary": {
      "post": {
        "tags": [
          "registrar-notifications"
        ],
        "summary": "Send Daily Summary",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0435\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u0443\u044e \u0441\u0432\u043e\u0434\u043a\u0443",
        "operationId": "send_daily_summary_api_v1_registrar_notifications_daily_summary_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Target Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/notifications/stats": {
      "get": {
        "tags": [
          "registrar-notifications"
        ],
        "summary": "Get Notification Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_stats_api_v1_registrar_notifications_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__v1__endpoints__registrar_notifications__NotificationStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/notifications/test": {
      "post": {
        "tags": [
          "registrar-notifications"
        ],
        "summary": "Test Notifications",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435",
        "operationId": "test_notifications_api_v1_registrar_notifications_test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "\u0422\u0435\u0441\u0442\u043e\u0432\u043e\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b",
              "title": "Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor-info/doctors/{doctor_id}": {
      "get": {
        "tags": [
          "doctor-info"
        ],
        "summary": "Get Doctor Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0440\u0430\u0447\u0435",
        "operationId": "get_doctor_info_api_v1_doctor_info_doctors__doctor_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor-info/doctors": {
      "get": {
        "tags": [
          "doctor-info"
        ],
        "summary": "Get Doctors List",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0440\u0430\u0447\u0435\u0439",
        "operationId": "get_doctors_list_api_v1_doctor_info_doctors_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialization",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438",
              "title": "Specialization"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438"
          },
          {
            "name": "department_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department Name"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0432\u0440\u0430\u0447\u0438",
              "default": true,
              "title": "Active Only"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0432\u0440\u0430\u0447\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor-info/doctors/by-user/{user_id}": {
      "get": {
        "tags": [
          "doctor-info"
        ],
        "summary": "Get Doctor By User Id",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0440\u0430\u0447\u0435 \u043f\u043e ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_doctor_by_user_id_api_v1_doctor_info_doctors_by_user__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor-info/departments/{department_id}": {
      "get": {
        "tags": [
          "doctor-info"
        ],
        "summary": "Get Department Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0438",
        "operationId": "get_department_info_api_v1_doctor_info_departments__department_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor-info/departments": {
      "get": {
        "tags": [
          "doctor-info"
        ],
        "summary": "Get Departments List",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_departments_list_api_v1_doctor_info_departments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
              "default": true,
              "title": "Active Only"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor-info/appointments/{appointment_id}/doctor-info": {
      "get": {
        "tags": [
          "doctor-info"
        ],
        "summary": "Get Appointment Doctor Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0440\u0430\u0447\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "get_appointment_doctor_info_api_v1_doctor_info_appointments__appointment_id__doctor_info_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          },
          {
            "name": "appointment_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u0437\u0430\u043f\u0438\u0441\u0438: appointment \u0438\u043b\u0438 visit",
              "default": "appointment",
              "title": "Appointment Type"
            },
            "description": "\u0422\u0438\u043f \u0437\u0430\u043f\u0438\u0441\u0438: appointment \u0438\u043b\u0438 visit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDoctorInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor-info/doctors/{doctor_id}/formatted-info": {
      "get": {
        "tags": [
          "doctor-info"
        ],
        "summary": "Get Formatted Doctor Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0440\u0430\u0447\u0435 \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_formatted_doctor_info_api_v1_doctor_info_doctors__doctor_id__formatted_info_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor-info/departments/{department_id}/formatted-info": {
      "get": {
        "tags": [
          "doctor-info"
        ],
        "summary": "Get Formatted Department Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_formatted_department_info_api_v1_doctor_info_departments__department_id__formatted_info_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Department Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/wait-time/wait-time-analytics": {
      "get": {
        "tags": [
          "wait-time-analytics"
        ],
        "summary": "Get Wait Time Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "get_wait_time_analytics_api_v1_analytics_wait_time_wait_time_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0432\u0440\u0430\u0447\u0443",
              "title": "Doctor Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0432\u0440\u0430\u0447\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitTimeAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/wait-time/real-time-wait-estimates": {
      "get": {
        "tags": [
          "wait-time-analytics"
        ],
        "summary": "Get Real Time Wait Estimates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0432 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438",
        "operationId": "get_real_time_wait_estimates_api_v1_analytics_wait_time_real_time_wait_estimates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeWaitEstimateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/wait-time/service-wait-analytics": {
      "get": {
        "tags": [
          "wait-time-analytics"
        ],
        "summary": "Get Service Wait Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043f\u043e \u0442\u0438\u043f\u0430\u043c \u0443\u0441\u043b\u0443\u0433",
        "operationId": "get_service_wait_analytics_api_v1_analytics_wait_time_service_wait_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "service_codes",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u043e\u0434\u044b \u0443\u0441\u043b\u0443\u0433 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e",
              "title": "Service Codes"
            },
            "description": "\u041a\u043e\u0434\u044b \u0443\u0441\u043b\u0443\u0433 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceWaitAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/wait-time/wait-time-summary": {
      "get": {
        "tags": [
          "wait-time-analytics"
        ],
        "summary": "Get Wait Time Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0440\u0430\u0442\u043a\u0443\u044e \u0441\u0432\u043e\u0434\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u0434\u043d\u0438",
        "operationId": "get_wait_time_summary_api_v1_analytics_wait_time_wait_time_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 30,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
              "default": 7,
              "title": "Days"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/wait-time/wait-time-comparison": {
      "get": {
        "tags": [
          "wait-time-analytics"
        ],
        "summary": "Get Wait Time Comparison",
        "description": "\u0421\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043f\u0435\u0440\u0438\u043e\u0434\u0430\u043c\u0438",
        "operationId": "get_wait_time_comparison_api_v1_analytics_wait_time_wait_time_comparison_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "current_start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0435\u0440\u0438\u043e\u0434\u0430 (YYYY-MM-DD)",
              "title": "Current Start"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0435\u0440\u0438\u043e\u0434\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "current_end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0446 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0435\u0440\u0438\u043e\u0434\u0430 (YYYY-MM-DD)",
              "title": "Current End"
            },
            "description": "\u041a\u043e\u043d\u0435\u0446 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0435\u0440\u0438\u043e\u0434\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "compare_with_previous",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0421\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0441 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c \u043f\u0435\u0440\u0438\u043e\u0434\u043e\u043c",
              "default": true,
              "title": "Compare With Previous"
            },
            "description": "\u0421\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0441 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c \u043f\u0435\u0440\u0438\u043e\u0434\u043e\u043c"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/wait-time/wait-time-heatmap": {
      "get": {
        "tags": [
          "wait-time-analytics"
        ],
        "summary": "Get Wait Time Heatmap",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043f\u043b\u043e\u0432\u0443\u044e \u043a\u0430\u0440\u0442\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043f\u043e \u0434\u043d\u044f\u043c \u043d\u0435\u0434\u0435\u043b\u0438 \u0438 \u0447\u0430\u0441\u0430\u043c",
        "operationId": "get_wait_time_heatmap_api_v1_analytics_wait_time_wait_time_heatmap_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/ai/track-usage": {
      "post": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Track Ai Usage",
        "description": "\u041e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 AI \u0444\u0443\u043d\u043a\u0446\u0438\u0439",
        "operationId": "track_ai_usage_api_v1_analytics_ai_track_usage_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIUsageTrackingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/ai/usage-analytics": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Ai Usage Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI \u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "get_ai_usage_analytics_api_v1_analytics_ai_usage_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e",
              "title": "User Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e"
          },
          {
            "name": "ai_function",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e AI \u0444\u0443\u043d\u043a\u0446\u0438\u0438",
              "title": "Ai Function"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e AI \u0444\u0443\u043d\u043a\u0446\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIUsageAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/ai/learning-insights": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Ai Learning Insights",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0441\u0430\u0439\u0442\u044b \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f AI \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043b\u0438\u043d\u0438\u043a\u0438",
        "operationId": "get_ai_learning_insights_api_v1_analytics_ai_learning_insights_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AILearningInsightsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/ai/optimize-models": {
      "post": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Optimize Ai Models",
        "description": "\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044e AI \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "optimize_ai_models_api_v1_analytics_ai_optimize_models_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIOptimizationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/ai/generate-training-dataset": {
      "post": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Generate Training Dataset",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043b\u0438\u043d\u0438\u043a\u0438",
        "operationId": "generate_training_dataset_api_v1_analytics_ai_generate_training_dataset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingDatasetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDatasetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/ai/usage-summary": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Ai Usage Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0440\u0430\u0442\u043a\u0443\u044e \u0441\u0432\u043e\u0434\u043a\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u0434\u043d\u0438",
        "operationId": "get_ai_usage_summary_api_v1_analytics_ai_usage_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
              "default": 30,
              "title": "Days"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/ai/function-performance/{function_name}": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Function Performance",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 AI \u0444\u0443\u043d\u043a\u0446\u0438\u0438",
        "operationId": "get_function_performance_api_v1_analytics_ai_function_performance__function_name__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "function_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Function Name"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 90,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
              "default": 7,
              "title": "Days"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/ai/cost-analysis": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Ai Cost Analysis",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0437\u0430\u0442\u0440\u0430\u0442 \u043d\u0430 AI",
        "operationId": "get_ai_cost_analysis_api_v1_analytics_ai_cost_analysis_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "group_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430: day, week, month",
              "default": "day",
              "title": "Group By"
            },
            "description": "\u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430: day, week, month"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/ai/model-comparison": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Compare Ai Models",
        "description": "\u0421\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0445 AI \u043c\u043e\u0434\u0435\u043b\u0435\u0439",
        "operationId": "compare_ai_models_api_v1_analytics_ai_model_comparison_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "function",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "AI \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f",
              "title": "Function"
            },
            "description": "AI \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 180,
              "minimum": 7,
              "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f",
              "default": 30,
              "title": "Days"
            },
            "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/patient": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Generate Patient Report",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u0442\u0447\u0435\u0442 \u043f\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430\u043c",
        "operationId": "generate_patient_report_api_v1_reports_patient_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/reports/appointments": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Generate Appointments Report",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u0442\u0447\u0435\u0442 \u043f\u043e \u0437\u0430\u043f\u0438\u0441\u044f\u043c",
        "operationId": "generate_appointments_report_api_v1_reports_appointments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/reports/financial": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Generate Financial Report",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u044b\u0439 \u043e\u0442\u0447\u0435\u0442",
        "operationId": "generate_financial_report_api_v1_reports_financial_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/reports/daily-summary": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Daily Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0435\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u0443\u044e \u0441\u0432\u043e\u0434\u043a\u0443",
        "operationId": "get_daily_summary_api_v1_reports_daily_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0434\u043b\u044f \u0441\u0432\u043e\u0434\u043a\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f)",
              "title": "Target Date"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0434\u043b\u044f \u0441\u0432\u043e\u0434\u043a\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/available-reports": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Available Reports",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u043e\u0442\u0447\u0435\u0442\u043e\u0432",
        "operationId": "get_available_reports_api_v1_reports_available_reports_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/reports/cleanup": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Cleanup Old Reports",
        "description": "\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0440\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u043e\u0442\u0447\u0435\u0442\u043e\u0432",
        "operationId": "cleanup_old_reports_api_v1_reports_cleanup_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0435\u0442\u043e\u0432",
              "default": 30,
              "title": "Days"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0435\u0442\u043e\u0432"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/files": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "List Report Files",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u043e\u0442\u0447\u0435\u0442\u043e\u0432",
        "operationId": "list_report_files_api_v1_reports_files_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/system/backup/create": {
      "post": {
        "tags": [
          "system-management"
        ],
        "summary": "Create Backup",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u044d\u043a\u0430\u043f \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "create_backup_api_v1_system_backup_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/system/backup/list": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "List Backups",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0431\u044d\u043a\u0430\u043f\u043e\u0432",
        "operationId": "list_backups_api_v1_system_backup_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/system/backup/{backup_name}": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get Backup Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0431\u044d\u043a\u0430\u043f\u0435",
        "operationId": "get_backup_info_api_v1_system_backup__backup_name__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Backup Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system-management"
        ],
        "summary": "Delete Backup",
        "description": "\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0431\u044d\u043a\u0430\u043f",
        "operationId": "delete_backup_api_v1_system_backup__backup_name__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Backup Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/backup/{backup_name}/restore": {
      "post": {
        "tags": [
          "system-management"
        ],
        "summary": "Restore Backup",
        "description": "\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0438\u0437 \u0431\u044d\u043a\u0430\u043f\u0430",
        "operationId": "restore_backup_api_v1_system_backup__backup_name__restore_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Backup Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/monitoring/health": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get System Health",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u0449\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "get_system_health_api_v1_system_monitoring_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/system/monitoring/metrics/system": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get System Metrics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043c\u0435\u0442\u0440\u0438\u043a\u0438",
        "operationId": "get_system_metrics_api_v1_system_monitoring_metrics_system_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/system/monitoring/metrics/application": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get Application Metrics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
        "operationId": "get_application_metrics_api_v1_system_monitoring_metrics_application_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/system/monitoring/metrics/history": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get Metrics History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043c\u0435\u0442\u0440\u0438\u043a",
        "operationId": "get_metrics_history_api_v1_system_monitoring_metrics_history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0430\u0441\u043e\u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u0438",
              "default": 24,
              "title": "Hours"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0430\u0441\u043e\u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/monitoring/metrics/summary": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get Metrics Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0432\u043e\u0434\u043a\u0443 \u043c\u0435\u0442\u0440\u0438\u043a \u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "get_metrics_summary_api_v1_system_monitoring_metrics_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0430\u0441\u043e\u0432 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
              "default": 24,
              "title": "Hours"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0430\u0441\u043e\u0432 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/monitoring/alerts": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get Alerts",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u043b\u0435\u0440\u0442\u043e\u0432",
        "operationId": "get_alerts_api_v1_system_monitoring_alerts_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(critical|warning|info)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Severity"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/monitoring/thresholds": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get Monitoring Thresholds",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043f\u043e\u0440\u043e\u0433\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430",
        "operationId": "get_monitoring_thresholds_api_v1_system_monitoring_thresholds_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "system-management"
        ],
        "summary": "Update Monitoring Thresholds",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u0440\u043e\u0433\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430",
        "operationId": "update_monitoring_thresholds_api_v1_system_monitoring_thresholds_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitoringThresholds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/system/monitoring/collect": {
      "post": {
        "tags": [
          "system-management"
        ],
        "summary": "Collect Metrics Now",
        "description": "\u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u0442 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u0441\u0435\u0439\u0447\u0430\u0441",
        "operationId": "collect_metrics_now_api_v1_system_monitoring_collect_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/system/system/status": {
      "get": {
        "tags": [
          "system-management"
        ],
        "summary": "Get System Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u0440\u0430\u0442\u043a\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u044b (\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0432\u0441\u0435\u043c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c)",
        "operationId": "get_system_status_api_v1_system_system_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Create Webhook",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 webhook\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "create_webhook_api_v1_webhooks__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhooks",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a webhook'\u043e\u0432 \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN, DEVELOPER \u0438\u043b\u0438 REGISTRAR",
        "operationId": "get_webhooks_api_v1_webhooks__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WebhookStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 webhook \u043f\u043e ID \u0441\u043e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u043e\u0439\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN, DEVELOPER \u0438\u043b\u0438 REGISTRAR",
        "operationId": "get_webhook_api_v1_webhooks__webhook_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookWithStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "webhooks"
        ],
        "summary": "Update Webhook",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 webhook\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "update_webhook_api_v1_webhooks__webhook_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "summary": "Delete Webhook",
        "description": "\u0423\u0434\u0430\u043b\u044f\u0435\u0442 webhook\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "delete_webhook_api_v1_webhooks__webhook_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_id}/activate": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Activate Webhook",
        "description": "\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 webhook\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "activate_webhook_api_v1_webhooks__webhook_id__activate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_id}/deactivate": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Deactivate Webhook",
        "description": "\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 webhook\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "deactivate_webhook_api_v1_webhooks__webhook_id__deactivate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_id}/test": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Test Webhook",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u0442 webhook \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u043e\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044f\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "test_webhook_api_v1_webhooks__webhook_id__test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_id}/calls": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook Calls",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u044b\u0437\u043e\u0432\u044b webhook'\u0430\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN, DEVELOPER \u0438\u043b\u0438 REGISTRAR",
        "operationId": "get_webhook_calls_api_v1_webhooks__webhook_id__calls_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WebhookCallStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookCallListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/calls/{call_id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook Call",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u0432\u044b\u0437\u043e\u0432\u0430 webhook'\u0430\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN, DEVELOPER \u0438\u043b\u0438 REGISTRAR",
        "operationId": "get_webhook_call_api_v1_webhooks_calls__call_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "call_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Call Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookCall"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_id}/stats": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 webhook'\u0430\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN, DEVELOPER \u0438\u043b\u0438 REGISTRAR",
        "operationId": "get_webhook_stats_api_v1_webhooks__webhook_id__stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/system/stats": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get System Webhook Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u0449\u0443\u044e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0441\u0438\u0441\u0442\u0435\u043c\u044b webhook'\u043e\u0432\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "get_system_webhook_stats_api_v1_webhooks_system_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemWebhookStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/bulk-action": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Webhook Bulk Action",
        "description": "\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043d\u0430\u0434 webhook'\u0430\u043c\u0438\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "webhook_bulk_action_api_v1_webhooks_bulk_action_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookBulkAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookBulkActionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/events/trigger": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Trigger Webhook Event",
        "description": "\u0422\u0440\u0438\u0433\u0433\u0435\u0440\u0438\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 webhook'\u043e\u0432\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN \u0438\u043b\u0438 DEVELOPER",
        "operationId": "trigger_webhook_event_api_v1_webhooks_events_trigger_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEventCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/cleanup/calls": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Cleanup Webhook Calls",
        "description": "\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0440\u044b\u0435 \u0432\u044b\u0437\u043e\u0432\u044b webhook'\u043e\u0432\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN",
        "operationId": "cleanup_webhook_calls_api_v1_webhooks_cleanup_calls_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/cleanup/events": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Cleanup Webhook Events",
        "description": "\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0440\u044b\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f webhook'\u043e\u0432\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u043e\u043b\u044c: ADMIN",
        "operationId": "cleanup_webhook_events_api_v1_webhooks_cleanup_events_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queues/stats": {
      "get": {
        "tags": [
          "queues",
          "queues"
        ],
        "summary": "Stats",
        "operationId": "stats_api_v1_queues_stats_get",
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queues/next-ticket": {
      "post": {
        "tags": [
          "queues",
          "queues"
        ],
        "summary": "Next Ticket",
        "operationId": "next_ticket_api_v1_queues_next_ticket_post",
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "List Appointments",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043d\u0430 \u043f\u0440\u0438\u0435\u043c \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438",
        "operationId": "list_appointments_api_v1_appointments__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
              "title": "Patient Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0440\u0430\u0447\u0430"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  },
                  "title": "Response List Appointments Api V1 Appointments  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Create Appointment",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c",
        "operationId": "create_appointment_api_v1_appointments__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Get Appointment",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c \u043f\u043e ID",
        "operationId": "get_appointment_api_v1_appointments__appointment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Update Appointment",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c",
        "operationId": "update_appointment_api_v1_appointments__appointment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Delete Appointment",
        "description": "\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c",
        "operationId": "delete_appointment_api_v1_appointments__appointment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/doctor/{doctor_id}/schedule": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Get Doctor Schedule",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0440\u0430\u0447\u0430 \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "get_doctor_schedule_api_v1_appointments_doctor__doctor_id__schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/department/{department}/schedule": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Get Department Schedule",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "get_department_schedule_api_v1_appointments_department__department__schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/open-day": {
      "post": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Open Day",
        "description": "\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u043d\u044c \u0434\u043b\u044f \u043e\u043d\u043b\u0430\u0439\u043d-\u043e\u0447\u0435\u0440\u0435\u0434\u0438:\n- queue::{dep}::{date}::open = 1\n- queue::{dep}::{date}::start_number = {start_number}\n(last_ticket \u043d\u0435 \u0442\u0440\u043e\u0433\u0430\u0435\u043c; \u0431\u0443\u0434\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e \u043c\u0435\u0440\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0442\u0430\u043b\u043e\u043d\u043e\u0432)",
        "operationId": "open_day_api_v1_appointments_open_day_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ENT",
              "title": "Department"
            },
            "description": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ENT"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "YYYY-MM-DD",
              "title": "Date Str"
            },
            "description": "YYYY-MM-DD"
          },
          {
            "name": "start_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "title": "Start Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/stats": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Stats",
        "operationId": "stats_api_v1_appointments_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "date_str",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Str"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/close": {
      "post": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Close Day",
        "description": "\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u043e\u043d\u043b\u0430\u0439\u043d-\u043d\u0430\u0431\u043e\u0440 (\u043a\u043d\u043e\u043f\u043a\u0430 \u00ab\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u0451\u043c \u0441\u0435\u0439\u0447\u0430\u0441\u00bb).\n\u0424\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 OnlineDay.is_open = False \u0434\u043b\u044f department+date.",
        "operationId": "close_day_api_v1_appointments_close_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ENT",
              "title": "Department"
            },
            "description": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ENT"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "YYYY-MM-DD",
              "title": "Date Str"
            },
            "description": "YYYY-MM-DD"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/qrcode": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Qrcode Png",
        "description": "\u041c\u0430\u0440\u0448\u0440\u0443\u0442-\u0437\u0430\u0433\u043b\u0443\u0448\u043a\u0430: \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0430, \u0433\u0434\u0435 \u0443\u0436\u0435 \u0440\u0438\u0441\u0443\u0435\u0442\u0441\u044f QR\n(\u0435\u0441\u043b\u0438 \u0443 \u0442\u0435\u0431\u044f \u0435\u0441\u0442\u044c \u0440\u0435\u0430\u043b\u044c\u043d\u0430\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f PNG \u2014 \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043c\u0435\u043d\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0442\u0443\u0442).",
        "operationId": "qrcode_png_api_v1_appointments_qrcode_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "date_str",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Str"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/services": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Registrar Services",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0438 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b \u0438\u0437 \u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0430 \u0430\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u0438\n\u0418\u0437 detail.md \u0441\u0442\u0440. 112: \"\u0423\u0441\u043b\u0443\u0433\u0438 (\u0447\u0435\u043a\u2011\u043b\u0438\u0441\u0442, \u0433\u0440\u0443\u043f\u043f\u0430\u043c\u0438 \u2014 \u0434\u0435\u0440\u043c\u0430/\u043a\u043e\u0441\u043c\u0435\u0442\u043e\u043b\u043e\u0433\u0438\u044f/\u043a\u0430\u0440\u0434\u0438\u043e/\u042d\u041a\u0413/\u042d\u0445\u043e\u041a\u0413/\u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u044f/\u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u0438\u044f)\"",
        "operationId": "get_registrar_services_api_v1_registrar_services_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438"
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0443\u0441\u043b\u0443\u0433\u0438",
              "default": true,
              "title": "Active Only"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0443\u0441\u043b\u0443\u0433\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/doctors": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Registrar Doctors",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0435\u0439 \u0441 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 106: \"\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442/\u041a\u0430\u0431\u0438\u043d\u0435\u0442\"",
        "operationId": "get_registrar_doctors_api_v1_registrar_doctors_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438"
          },
          {
            "name": "with_schedule",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
              "default": true,
              "title": "With Schedule"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/queue-settings": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Registrar Queue Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 303-338: \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "get_registrar_queue_settings_api_v1_registrar_queue_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/appointments": {
      "post": {
        "tags": [
          "registrar"
        ],
        "summary": "Create Registrar Appointment",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0447\u0435\u0440\u0435\u0437 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u0443\n\u0418\u0437 detail.md \u0441\u0442\u0440. 366-376: POST /api/visits",
        "operationId": "create_registrar_appointment_api_v1_registrar_appointments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Appointment Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/generate-qr": {
      "post": {
        "tags": [
          "registrar"
        ],
        "summary": "Generate Qr For Registrar",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f QR \u043a\u043e\u0434\u0430 \u0438\u0437 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 355: POST /api/online-queue/qrcode?day&specialist_id",
        "operationId": "generate_qr_for_registrar_api_v1_registrar_generate_qr_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0430\u0442\u0430",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/open-reception": {
      "post": {
        "tags": [
          "registrar"
        ],
        "summary": "Open Reception",
        "description": "\u041e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u0440\u0438\u0435\u043c\u0430 \u0438\u0437 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 253: \u041a\u043d\u043e\u043f\u043a\u0430 \u00ab\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u0451\u043c \u0441\u0435\u0439\u0447\u0430\u0441\u00bb",
        "operationId": "open_reception_api_v1_registrar_open_reception_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0430\u0442\u0430",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/queues/today": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Today Queues",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 363: GET /api/queue/today?specialist_id",
        "operationId": "get_today_queues_api_v1_registrar_queues_today_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/calendar": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Registrar Calendar",
        "description": "\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 174-181: \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0441 \u0446\u0432\u0435\u0442\u043e\u0432\u044b\u043c\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043c\u0438",
        "operationId": "get_registrar_calendar_api_v1_registrar_calendar_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0432\u0440\u0430\u0447\u0443",
              "title": "Doctor Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0432\u0440\u0430\u0447\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/invoice/init-payment": {
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Init Invoice Payment",
        "description": "\u0418\u043d\u0438\u0446\u0438\u0430\u0446\u0438\u044f \u043e\u043f\u043b\u0430\u0442\u044b \u0434\u043b\u044f invoice \u0447\u0435\u0440\u0435\u0437 Click/PayMe",
        "operationId": "init_invoice_payment_api_v1_registrar_invoice_init_payment_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/invoice/{invoice_id}/status": {
      "get": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Check Invoice Status",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043e\u043f\u043b\u0430\u0442\u044b invoice",
        "operationId": "check_invoice_status_api_v1_registrar_invoice__invoice_id__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/cart": {
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Create Cart Appointments",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u0440\u0437\u0438\u043d\u044b \u0432\u0438\u0437\u0438\u0442\u043e\u0432 \u0441 \u0435\u0434\u0438\u043d\u044b\u043c \u043f\u043b\u0430\u0442\u0435\u0436\u043e\u043c\n\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442: \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0435/\u043b\u044c\u0433\u043e\u0442\u043d\u044b\u0435 \u0432\u0438\u0437\u0438\u0442\u044b, All Free, \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0446\u0435\u043d\u044b, \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043f\u043e queue_tag",
        "operationId": "create_cart_appointments_api_v1_registrar_cart_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/price-overrides": {
      "get": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0446\u0435\u043d \u0434\u043b\u044f \u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0446\u0435\u043d \u0434\u043b\u044f \u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u043e\u0439",
        "operationId": "get_pending_price_overrides_api_v1_registrar_price_overrides_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(pending|approved|rejected|all)$"
                },
                {
                  "type": "null"
                }
              ],
              "default": "pending",
              "title": "Status Filter"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceOverrideListResponse"
                  },
                  "title": "Response Get Pending Price Overrides Api V1 Registrar Price Overrides Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/price-override/approve": {
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "\u041e\u0434\u043e\u0431\u0440\u0438\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b",
        "description": "\u041e\u0434\u043e\u0431\u0440\u0438\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b \u0432\u0440\u0430\u0447\u043e\u043c",
        "operationId": "approve_price_override_api_v1_registrar_price_override_approve_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__endpoints__registrar_wizard__PriceOverrideApprovalRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Approve Price Override Api V1 Registrar Price Override Approve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/all-free-requests": {
      "get": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u044f\u0432\u043a\u0438 All Free \u0434\u043b\u044f \u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u044f\u0432\u043e\u043a All Free \u0434\u043b\u044f \u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
        "operationId": "get_all_free_requests_api_v1_admin_all_free_requests_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(pending|approved|rejected|all)$"
                },
                {
                  "type": "null"
                }
              ],
              "default": "pending",
              "title": "Status Filter"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AllFreeVisitResponse"
                  },
                  "title": "Response Get All Free Requests Api V1 Admin All Free Requests Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/all-free-approve": {
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "\u041e\u0434\u043e\u0431\u0440\u0438\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u0438\u0442\u044c \u0437\u0430\u044f\u0432\u043a\u0443 All Free",
        "description": "\u041e\u0434\u043e\u0431\u0440\u0438\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u0438\u0442\u044c \u0437\u0430\u044f\u0432\u043a\u0443 All Free \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
        "operationId": "approve_all_free_request_api_v1_admin_all_free_approve_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllFreeApprovalRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Approve All Free Request Api V1 Admin All Free Approve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/benefit-settings": {
      "get": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u044c\u0433\u043e\u0442",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u044c\u0433\u043e\u0442 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u0432\u0438\u0437\u0438\u0442\u043e\u0432",
        "operationId": "get_benefit_settings_api_v1_admin_benefit_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitSettingsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u044c\u0433\u043e\u0442",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u044c\u0433\u043e\u0442 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u0432\u0438\u0437\u0438\u0442\u043e\u0432",
        "operationId": "update_benefit_settings_api_v1_admin_benefit_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Benefit Settings Api V1 Admin Benefit Settings Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/wizard-settings": {
      "get": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u0430\u0441\u0442\u0435\u0440\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u0430\u0441\u0442\u0435\u0440\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438",
        "operationId": "get_wizard_settings_api_v1_admin_wizard_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u0430\u0441\u0442\u0435\u0440\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u0430\u0441\u0442\u0435\u0440\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438",
        "operationId": "update_wizard_settings_api_v1_admin_wizard_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WizardSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/visits": {
      "get": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Get Visits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446 visits (\u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0442\u0435\u0440) \u0438 appointments (\u0441\u0442\u0430\u0440\u044b\u0439 \u043c\u0430\u0441\u0442\u0435\u0440)",
        "operationId": "get_visits_api_v1_registrar_visits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
              "title": "Patient Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0440\u0430\u0447\u0430"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VisitResponse"
                  },
                  "title": "Response Get Visits Api V1 Registrar Visits Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/all-appointments": {
      "get": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Get All Appointments",
        "description": "\u041f\u0440\u043e\u0441\u0442\u043e\u0435 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 appointments + visits \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430",
        "operationId": "get_all_appointments_api_v1_registrar_all_appointments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0424\u0418\u041e, \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \u0438\u043b\u0438 \u0443\u0441\u043b\u0443\u0433\u0430\u043c",
              "title": "Search"
            },
            "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0424\u0418\u041e, \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \u0438\u043b\u0438 \u0443\u0441\u043b\u0443\u0433\u0430\u043c"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/visits/{visit_id}/mark-paid": {
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Mark Visit As Paid",
        "description": "\u041e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b visits \u043a\u0430\u043a \u043e\u043f\u043b\u0430\u0447\u0435\u043d\u043d\u0443\u044e",
        "operationId": "mark_visit_as_paid_api_v1_registrar_visits__visit_id__mark_paid_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/visits/{visit_id}/complete": {
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Complete Visit",
        "description": "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b visits",
        "operationId": "complete_visit_api_v1_registrar_visits__visit_id__complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/visits/{visit_id}/start-visit": {
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Start Visit",
        "description": "\u041d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u0438\u0435\u043c (\u0432 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435) \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b visits",
        "operationId": "start_visit_api_v1_registrar_visits__visit_id__start_visit_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/visits/{visit_id}/confirm": {
      "post": {
        "tags": [
          "registrar-wizard"
        ],
        "summary": "Confirm Visit By Registrar",
        "description": "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u0438\u0437\u0438\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c (\u043f\u043e \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443)\n\u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u0445 \u0435\u0441\u043b\u0438 \u0432\u0438\u0437\u0438\u0442 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f",
        "operationId": "confirm_visit_by_registrar_api_v1_registrar_visits__visit_id__confirm_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmVisitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmVisitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/{specialty}/queue/today": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Queue Today",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0432\u0440\u0430\u0447\u0430 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1419: GET /api/doctor/cardiology/queue/today",
        "operationId": "get_doctor_queue_today_api_v1_doctor__specialty__queue_today_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/queue/{entry_id}/call": {
      "post": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Call Patient",
        "description": "\u0412\u044b\u0437\u0432\u0430\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0432 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1425: POST /api/visits/:id/complete",
        "operationId": "call_patient_api_v1_doctor_queue__entry_id__call_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/queue/{entry_id}/start-visit": {
      "post": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Start Patient Visit",
        "description": "\u041d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u0438\u0435\u043c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 (\u0441\u0442\u0430\u0442\u0443\u0441 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435)",
        "operationId": "start_patient_visit_api_v1_doctor_queue__entry_id__start_visit_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/queue/{entry_id}/complete": {
      "post": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Complete Patient Visit",
        "description": "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u0438\u0435\u043c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1425: POST /api/visits/:id/complete",
        "operationId": "complete_patient_visit_api_v1_doctor_queue__entry_id__complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Visit Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/{specialty}/services": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Services",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0438 \u0434\u043b\u044f \u0432\u0440\u0430\u0447\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1254: \u0443\u0441\u043b\u0443\u0433\u0438 \u0432\u0438\u0437\u0438\u0442\u0430 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
        "operationId": "get_doctor_services_api_v1_doctor__specialty__services_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/my-info": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0432\u0440\u0430\u0447\u0435",
        "operationId": "get_doctor_info_api_v1_doctor_my_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/doctor/calendar": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Calendar",
        "description": "\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0432\u0440\u0430\u0447\u0430 \u0441 \u0431\u0443\u0434\u0443\u0449\u0438\u043c\u0438 \u0437\u0430\u043f\u0438\u0441\u044f\u043c\u0438\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1223: \u0431\u0443\u0434\u0443\u0449\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0441 \u0446\u0432\u0435\u0442\u0430\u043c\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u0432",
        "operationId": "get_doctor_calendar_api_v1_doctor_calendar_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/stats": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Stats",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0432\u0440\u0430\u0447\u0430",
        "operationId": "get_doctor_stats_api_v1_doctor_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 30,
              "minimum": 1,
              "description": "\u0414\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434",
              "default": 7,
              "title": "Days Back"
            },
            "description": "\u0414\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/visits/schedule-next": {
      "post": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Schedule Next Visit",
        "description": "\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0432\u0438\u0437\u0438\u0442\u0430 \u0432\u0440\u0430\u0447\u043e\u043c (\u0431\u0435\u0437 \u043d\u043e\u043c\u0435\u0440\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438)\n\u041d\u043e\u043c\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u043c",
        "operationId": "schedule_next_visit_api_v1_doctor_visits_schedule_next_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleNextVisitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleNextVisitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/doctor/visits/today": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Today Visits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0438\u0435 \u0432\u0438\u0437\u0438\u0442\u044b \u0432\u0440\u0430\u0447\u0430",
        "operationId": "get_today_visits_api_v1_doctor_visits_today_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/doctor/visits/{visit_id}": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Visit Details",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u0438 \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "get_visit_details_api_v1_doctor_visits__visit_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/visits/{visit_id}/add-service": {
      "put": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Add Service To Visit",
        "description": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443 \u043a \u0432\u0438\u0437\u0438\u0442\u0443",
        "operationId": "add_service_to_visit_api_v1_doctor_visits__visit_id__add_service_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Quantity"
            }
          },
          {
            "name": "custom_price",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Price"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/visits/{visit_id}/services/{visit_service_id}": {
      "delete": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Remove Service From Visit",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443 \u0438\u0437 \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "remove_service_from_visit_api_v1_doctor_visits__visit_id__services__visit_service_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "visit_service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/visits/statistics": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Visit Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0432\u0438\u0437\u0438\u0442\u043e\u0432 \u0432\u0440\u0430\u0447\u0430",
        "operationId": "get_visit_statistics_api_v1_doctor_visits_statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Print Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "get_print_templates_api_v1_print_templates_templates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Type"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Language"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrintTemplateOut"
                  },
                  "title": "Response Get Print Templates Api V1 Print Templates Templates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "print-templates"
        ],
        "summary": "Create Print Template",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "create_print_template_api_v1_print_templates_templates_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintTemplateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/{template_id}": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Print Template",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u0435\u0447\u0430\u0442\u0438 \u043f\u043e ID",
        "operationId": "get_print_template_api_v1_print_templates_templates__template_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "print-templates"
        ],
        "summary": "Update Print Template",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "update_print_template_api_v1_print_templates_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "print-templates"
        ],
        "summary": "Delete Print Template",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "delete_print_template_api_v1_print_templates_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/upload/{template_type}": {
      "post": {
        "tags": [
          "print-templates"
        ],
        "summary": "Upload Template File",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
        "operationId": "upload_template_file_api_v1_print_templates_templates_upload__template_type__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Type"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ru",
              "title": "Language"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_template_file_api_v1_print_templates_templates_upload__template_type__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/{template_id}/preview": {
      "post": {
        "tags": [
          "print-templates"
        ],
        "summary": "Preview Template",
        "description": "\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0441 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438",
        "operationId": "preview_template_api_v1_print_templates_templates__template_id__preview_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Preview Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/default/{template_type}": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Default Template",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u043e \u0442\u0438\u043f\u0443",
        "operationId": "get_default_template_api_v1_print_templates_templates_default__template_type__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Type"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ru",
              "title": "Language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/types": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Template Types",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432",
        "operationId": "get_template_types_api_v1_print_templates_templates_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/templates/jobs": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Print Jobs",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "get_print_jobs_api_v1_print_templates_jobs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Document Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrintJobOut"
                  },
                  "title": "Response Get Print Jobs Api V1 Print Templates Jobs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/ticket": {
      "post": {
        "tags": [
          "print",
          "print"
        ],
        "summary": "\u041f\u0435\u0447\u0430\u0442\u044c \u0442\u0430\u043b\u043e\u043d\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 (ESC/POS)",
        "operationId": "ticket_escpos_api_v1_print_ticket_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "title": "Department"
            }
          },
          {
            "name": "ticket_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Ticket Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/prescription": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Print Prescription",
        "description": "\u041f\u0435\u0447\u0430\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442\u0430",
        "operationId": "print_prescription_api_v1_print_prescription_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintPrescriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/certificate": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Print Medical Certificate",
        "description": "\u041f\u0435\u0447\u0430\u0442\u044c \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0441\u043f\u0440\u0430\u0432\u043a\u0438",
        "operationId": "print_medical_certificate_api_v1_print_certificate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintCertificateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/receipt": {
      "post": {
        "tags": [
          "print",
          "print"
        ],
        "summary": "\u041f\u0435\u0447\u0430\u0442\u044c \u0447\u0435\u043a\u0430 (ESC/POS)",
        "operationId": "receipt_escpos_api_v1_print_receipt_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Visit Id"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "exclusiveMinimum": 0.0,
              "title": "Amount"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 8,
              "default": "UZS",
              "title": "Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/lab-results": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Print Lab Results",
        "description": "\u041f\u0435\u0447\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "print_lab_results_api_v1_print_lab_results_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintLabResultsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/printers": {
      "get": {
        "tags": [
          "print-api"
        ],
        "summary": "Get Printers",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u0432",
        "operationId": "get_printers_api_v1_print_printers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/printers/{printer_name}/status": {
      "get": {
        "tags": [
          "print-api"
        ],
        "summary": "Get Printer Status",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430",
        "operationId": "get_printer_status_api_v1_print_printers__printer_name__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "printer_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Printer Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/printers/{printer_name}/test": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Test Printer",
        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c",
        "operationId": "test_printer_api_v1_print_printers__printer_name__test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "printer_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Printer Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/quick/queue-ticket": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Quick Print Ticket",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c \u0442\u0430\u043b\u043e\u043d\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "quick_print_ticket_api_v1_print_quick_queue_ticket_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickTicketRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/quick/payment-receipt": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Quick Print Receipt",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c \u0447\u0435\u043a\u0430 \u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u0435",
        "operationId": "quick_print_receipt_api_v1_print_quick_payment_receipt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickReceiptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-complaints": {
      "post": {
        "tags": [
          "ai-integration"
        ],
        "summary": "Analyze Patient Complaints",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0436\u0430\u043b\u043e\u0431 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e AI\n\u0418\u0437 passport.md \u0441\u0442\u0440. 3325: \u0436\u0430\u043b\u043e\u0431\u044b \u2192 \u043f\u043b\u0430\u043d \u043e\u0431\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "analyze_patient_complaints_api_v1_ai_analyze_complaints_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/suggest-icd10": {
      "post": {
        "tags": [
          "ai-integration"
        ],
        "summary": "Suggest Icd10 Codes",
        "description": "\u0410\u0432\u0442\u043e\u043f\u043e\u0434\u0431\u043e\u0440 \u043a\u043e\u0434\u043e\u0432 \u041c\u041a\u0411-10 \u043f\u043e \u0434\u0438\u0430\u0433\u043d\u043e\u0437\u0443\n\u0418\u0437 passport.md \u0441\u0442\u0440. 3456: \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u043e\u0434\u0431\u043e\u0440 \u041c\u041a\u0411-10",
        "operationId": "suggest_icd10_codes_api_v1_ai_suggest_icd10_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-document": {
      "post": {
        "tags": [
          "ai-integration"
        ],
        "summary": "Analyze Medical Document",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n\u0418\u0437 passport.md \u0441\u0442\u0440. 3678: \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "analyze_medical_document_api_v1_ai_analyze_document_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/interpret-lab-results": {
      "post": {
        "tags": [
          "ai-integration"
        ],
        "summary": "Interpret Lab Results",
        "description": "\u0418\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432\n\u0418\u0437 passport.md \u0441\u0442\u0440. 3567: AI \u0430\u043d\u0430\u043b\u0438\u0437 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "interpret_lab_results_api_v1_ai_interpret_lab_results_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/symptom-checker": {
      "post": {
        "tags": [
          "ai-integration"
        ],
        "summary": "Check Symptoms",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0438\u043c\u043f\u0442\u043e\u043c\u043e\u0432 \u0438 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438\n\u041f\u043e\u043c\u043e\u0449\u044c \u0434\u043b\u044f \u0442\u0440\u0438\u0430\u0436\u0430 \u0432 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u0435",
        "operationId": "check_symptoms_api_v1_ai_symptom_checker_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/usage-stats": {
      "get": {
        "tags": [
          "ai-integration"
        ],
        "summary": "Get Ai Usage Stats",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI",
        "operationId": "get_ai_usage_stats_api_v1_ai_usage_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days Back"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai/quick/diagnosis-help": {
      "post": {
        "tags": [
          "ai-integration"
        ],
        "summary": "Quick Diagnosis Help",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u043e\u043c\u043e\u0449\u044c \u0441 \u0434\u0438\u0430\u0433\u043d\u043e\u0437\u043e\u043c",
        "operationId": "quick_diagnosis_help_api_v1_ai_quick_diagnosis_help_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/providers": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "Get Available Providers",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "operationId": "get_available_providers_api_v1_ai_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Available Providers Api V1 Ai Providers Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/complaint-to-plan": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Complaint",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0436\u0430\u043b\u043e\u0431 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u043d\u0430 \u043e\u0431\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "analyze_complaint_api_v1_ai_complaint_to_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Analyze Complaint Api V1 Ai Complaint To Plan Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/icd-suggest": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Suggest Icd10 Codes",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u043a\u043e\u0434\u043e\u0432 \u041c\u041a\u0411-10",
        "operationId": "suggest_icd10_codes_api_v1_ai_icd_suggest_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICD10SuggestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Suggest Icd10 Codes Api V1 Ai Icd Suggest Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/lab-interpret": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Interpret Lab Results",
        "description": "\u0418\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "interpret_lab_results_api_v1_ai_lab_interpret_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabInterpretRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Interpret Lab Results Api V1 Ai Lab Interpret Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/skin-analyze": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Skin",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043a\u043e\u0436\u0438 \u043f\u043e \u0444\u043e\u0442\u043e",
        "operationId": "analyze_skin_api_v1_ai_skin_analyze_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_skin_api_v1_ai_skin_analyze_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Analyze Skin Api V1 Ai Skin Analyze Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/ecg-interpret": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Interpret Ecg",
        "description": "\u0418\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u042d\u041a\u0413",
        "operationId": "interpret_ecg_api_v1_ai_ecg_interpret_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECGInterpretRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Interpret Ecg Api V1 Ai Ecg Interpret Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/differential-diagnosis": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Differential Diagnosis",
        "description": "\u0414\u0438\u0444\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430",
        "operationId": "differential_diagnosis_api_v1_ai_differential_diagnosis_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DifferentialDiagnosisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/symptom-analysis": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Symptom Analysis",
        "description": "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0441\u0438\u043c\u043f\u0442\u043e\u043c\u043e\u0432",
        "operationId": "symptom_analysis_api_v1_ai_symptom_analysis_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SymptomAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/clinical-decision-support": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Clinical Decision Support",
        "description": "\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043a\u043b\u0438\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0435\u0448\u0435\u043d\u0438\u0439",
        "operationId": "clinical_decision_support_api_v1_ai_clinical_decision_support_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalDecisionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-xray": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Xray Image",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0440\u0435\u043d\u0442\u0433\u0435\u043d\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0441\u043d\u0438\u043c\u043a\u0430",
        "operationId": "analyze_xray_image_api_v1_ai_analyze_xray_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_xray_image_api_v1_ai_analyze_xray_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-ultrasound": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Ultrasound Image",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0423\u0417\u0418 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",
        "operationId": "analyze_ultrasound_image_api_v1_ai_analyze_ultrasound_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_ultrasound_image_api_v1_ai_analyze_ultrasound_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-dermatoscopy": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Dermatoscopy Image",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0435\u0440\u043c\u0430\u0442\u043e\u0441\u043a\u043e\u043f\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",
        "operationId": "analyze_dermatoscopy_image_api_v1_ai_analyze_dermatoscopy_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_dermatoscopy_image_api_v1_ai_analyze_dermatoscopy_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-medical-image": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Medical Image Generic",
        "description": "\u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f",
        "operationId": "analyze_medical_image_generic_api_v1_ai_analyze_medical_image_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_medical_image_generic_api_v1_ai_analyze_medical_image_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/generate-treatment-plan": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate Treatment Plan",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043b\u0430\u043d\u0430 \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "operationId": "generate_treatment_plan_api_v1_ai_generate_treatment_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TreatmentPlanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/optimize-medication": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Optimize Medication Regimen",
        "description": "\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u0435\u0434\u0438\u043a\u0430\u043c\u0435\u043d\u0442\u043e\u0437\u043d\u043e\u0439 \u0442\u0435\u0440\u0430\u043f\u0438\u0438",
        "operationId": "optimize_medication_regimen_api_v1_ai_optimize_medication_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicationOptimizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/assess-treatment-effectiveness": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Assess Treatment Effectiveness",
        "description": "\u041e\u0446\u0435\u043d\u043a\u0430 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "operationId": "assess_treatment_effectiveness_api_v1_ai_assess_treatment_effectiveness_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TreatmentEffectivenessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/suggest-lifestyle-modifications": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Suggest Lifestyle Modifications",
        "description": "\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044e \u043e\u0431\u0440\u0430\u0437\u0430 \u0436\u0438\u0437\u043d\u0438",
        "operationId": "suggest_lifestyle_modifications_api_v1_ai_suggest_lifestyle_modifications_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LifestyleModificationsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/check-drug-interactions": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Check Drug Interactions",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043b\u0435\u043a\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439",
        "operationId": "check_drug_interactions_api_v1_ai_check_drug_interactions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrugInteractionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-drug-safety": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Drug Safety",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u0430 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "analyze_drug_safety_api_v1_ai_analyze_drug_safety_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrugSafetyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/suggest-drug-alternatives": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Suggest Drug Alternatives",
        "description": "\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u043e\u0432",
        "operationId": "suggest_drug_alternatives_api_v1_ai_suggest_drug_alternatives_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrugAlternativesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/calculate-drug-dosage": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Calculate Drug Dosage",
        "description": "\u0420\u0430\u0441\u0447\u0435\u0442 \u0434\u043e\u0437\u0438\u0440\u043e\u0432\u043a\u0438 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u0430",
        "operationId": "calculate_drug_dosage_api_v1_ai_calculate_drug_dosage_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrugDosageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/assess-patient-risk": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Assess Patient Risk",
        "description": "\u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0430 \u0440\u0438\u0441\u043a\u043e\u0432 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "assess_patient_risk_api_v1_ai_assess_patient_risk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskAssessmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/predict-complications": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Predict Complications",
        "description": "\u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043e\u0441\u043b\u043e\u0436\u043d\u0435\u043d\u0438\u0439",
        "operationId": "predict_complications_api_v1_ai_predict_complications_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplicationPredictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/calculate-mortality-risk": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Calculate Mortality Risk",
        "description": "\u0420\u0430\u0441\u0447\u0435\u0442 \u0440\u0438\u0441\u043a\u0430 \u0441\u043c\u0435\u0440\u0442\u043d\u043e\u0441\u0442\u0438",
        "operationId": "calculate_mortality_risk_api_v1_ai_calculate_mortality_risk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MortalityRiskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/assess-surgical-risk": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Assess Surgical Risk",
        "description": "\u041e\u0446\u0435\u043d\u043a\u0430 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0438\u0441\u043a\u043e\u0432",
        "operationId": "assess_surgical_risk_api_v1_ai_assess_surgical_risk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurgicalRiskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/predict-readmission-risk": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Predict Readmission Risk",
        "description": "\u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0438\u0441\u043a\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0439 \u0433\u043e\u0441\u043f\u0438\u0442\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438",
        "operationId": "predict_readmission_risk_api_v1_ai_predict_readmission_risk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReadmissionRiskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/transcribe-audio": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Transcribe Audio",
        "description": "\u0422\u0440\u0430\u043d\u0441\u043a\u0440\u0438\u043f\u0446\u0438\u044f \u0430\u0443\u0434\u0438\u043e \u0432 \u0442\u0435\u043a\u0441\u0442 \u0441 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0442\u0435\u0440\u043c\u0438\u043d\u043e\u043b\u043e\u0433\u0438\u0435\u0439",
        "operationId": "transcribe_audio_api_v1_ai_transcribe_audio_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_transcribe_audio_api_v1_ai_transcribe_audio_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/structure-medical-text": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Structure Medical Text",
        "description": "\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044f",
        "operationId": "structure_medical_text_api_v1_ai_structure_medical_text_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextStructuringRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/extract-medical-entities": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Extract Medical Entities",
        "description": "\u0418\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0445 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u0430",
        "operationId": "extract_medical_entities_api_v1_ai_extract_medical_entities_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityExtractionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/generate-medical-summary": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate Medical Summary",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0440\u0435\u0437\u044e\u043c\u0435 \u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u0430 \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438",
        "operationId": "generate_medical_summary_api_v1_ai_generate_medical_summary_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalSummaryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/validate-medical-record": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Validate Medical Record",
        "description": "\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u043f\u043e\u043b\u043d\u043e\u0442\u0443 \u0438 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c",
        "operationId": "validate_medical_record_api_v1_ai_validate_medical_record_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordValidationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/optimize-doctor-schedule": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Optimize Doctor Schedule",
        "description": "\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432\u0440\u0430\u0447\u0430 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439 \u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u0439",
        "operationId": "optimize_doctor_schedule_api_v1_ai_optimize_doctor_schedule_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleOptimizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/predict-appointment-duration": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Predict Appointment Duration",
        "description": "\u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0438\u0435\u043c\u0430 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0438\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "predict_appointment_duration_api_v1_ai_predict_appointment_duration_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentDurationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/suggest-optimal-slots": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Suggest Optimal Slots",
        "description": "\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u043b\u043e\u0442\u043e\u0432 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "suggest_optimal_slots_api_v1_ai_suggest_optimal_slots_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptimalSlotsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-workload-distribution": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Workload Distribution",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043c\u0435\u0436\u0434\u0443 \u0432\u0440\u0430\u0447\u0430\u043c\u0438",
        "operationId": "analyze_workload_distribution_api_v1_ai_analyze_workload_distribution_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkloadAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/generate-shift-recommendations": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate Shift Recommendations",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0439 \u043f\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u0441\u043c\u0435\u043d \u0438 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432 \u0440\u0430\u0431\u043e\u0442\u044b",
        "operationId": "generate_shift_recommendations_api_v1_ai_generate_shift_recommendations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftRecommendationsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-documentation-quality": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Documentation Quality",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438",
        "operationId": "analyze_documentation_quality_api_v1_ai_analyze_documentation_quality_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentationQualityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/detect-documentation-gaps": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Detect Documentation Gaps",
        "description": "\u0412\u044b\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432 \u0432 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438",
        "operationId": "detect_documentation_gaps_api_v1_ai_detect_documentation_gaps_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentationGapsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/suggest-documentation-improvements": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Suggest Documentation Improvements",
        "description": "\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438",
        "operationId": "suggest_documentation_improvements_api_v1_ai_suggest_documentation_improvements_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentationImprovementsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/validate-clinical-consistency": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Validate Clinical Consistency",
        "description": "\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u043d\u043d\u043e\u0441\u0442\u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0437\u0430, \u0441\u0438\u043c\u043f\u0442\u043e\u043c\u043e\u0432 \u0438 \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "operationId": "validate_clinical_consistency_api_v1_ai_validate_clinical_consistency_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalConsistencyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/audit-prescription-safety": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Audit Prescription Safety",
        "description": "\u0410\u0443\u0434\u0438\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438 \u0440\u0435\u0446\u0435\u043f\u0442\u043e\u0432",
        "operationId": "audit_prescription_safety_api_v1_ai_audit_prescription_safety_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionSafetyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/analyze-medical-trends": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Analyze Medical Trends",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0445 \u0442\u0440\u0435\u043d\u0434\u043e\u0432 \u0438 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "analyze_medical_trends_api_v1_ai_analyze_medical_trends_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalTrendsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/detect-anomalies": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Detect Anomalies",
        "description": "\u0412\u044b\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u043d\u043e\u043c\u0430\u043b\u0438\u0439 \u0432 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "detect_anomalies_api_v1_ai_detect_anomalies_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnomalyDetectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/predict-outcomes": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Predict Outcomes",
        "description": "\u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0445 \u0438\u0441\u0445\u043e\u0434\u043e\u0432 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "predict_outcomes_api_v1_ai_predict_outcomes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutcomePredictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/generate-insights-report": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Generate Insights Report",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u0447\u0435\u0442\u0430 \u0441 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u0438\u043d\u0441\u0430\u0439\u0442\u0430\u043c\u0438",
        "operationId": "generate_insights_report_api_v1_ai_generate_insights_report_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsightsReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/identify-risk-patterns": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Identify Risk Patterns",
        "description": "\u0412\u044b\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432 \u0440\u0438\u0441\u043a\u043e\u0432 \u0432 \u043f\u043e\u043f\u0443\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "identify_risk_patterns_api_v1_ai_identify_risk_patterns_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskPatternsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/bot/webhook": {
      "post": {
        "tags": [
          "telegram-bot"
        ],
        "summary": "Telegram Webhook",
        "description": "Webhook \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u043e\u0442 Telegram",
        "operationId": "telegram_webhook_api_v1_telegram_bot_webhook_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "telegram-bot"
        ],
        "summary": "Remove Telegram Webhook",
        "description": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 webhook \u0434\u043b\u044f Telegram \u0431\u043e\u0442\u0430",
        "operationId": "remove_telegram_webhook_api_v1_telegram_bot_webhook_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/bot/set-webhook": {
      "post": {
        "tags": [
          "telegram-bot"
        ],
        "summary": "Set Telegram Webhook",
        "description": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 webhook URL \u0434\u043b\u044f Telegram \u0431\u043e\u0442\u0430",
        "operationId": "set_telegram_webhook_api_v1_telegram_bot_set_webhook_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object",
                "title": "Webhook Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/bot/info": {
      "get": {
        "tags": [
          "telegram-bot"
        ],
        "summary": "Get Bot Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0431\u043e\u0442\u0435",
        "operationId": "get_bot_info_api_v1_telegram_bot_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/bot/send-notification": {
      "post": {
        "tags": [
          "telegram-bot"
        ],
        "summary": "Send Telegram Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0447\u0435\u0440\u0435\u0437 Telegram \u0431\u043e\u0442\u0430",
        "operationId": "send_telegram_notification_api_v1_telegram_bot_send_notification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Notification Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/bot/send-appointment-reminder": {
      "post": {
        "tags": [
          "telegram-bot"
        ],
        "summary": "Send Appointment Reminder",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043e \u0432\u0438\u0437\u0438\u0442\u0435",
        "operationId": "send_appointment_reminder_api_v1_telegram_bot_send_appointment_reminder_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Reminder Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/bot/send-lab-notification": {
      "post": {
        "tags": [
          "telegram-bot"
        ],
        "summary": "Send Lab Results Notification",
        "description": "\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e \u0433\u043e\u0442\u043e\u0432\u043d\u043e\u0441\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "send_lab_results_notification_api_v1_telegram_bot_send_lab_notification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Lab Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/bot/stats": {
      "get": {
        "tags": [
          "telegram-bot"
        ],
        "summary": "Get Telegram Stats",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 Telegram \u0431\u043e\u0442\u0430",
        "operationId": "get_telegram_stats_api_v1_telegram_bot_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/send-notification": {
      "post": {
        "tags": [
          "telegram-integration"
        ],
        "summary": "Send Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0443",
        "operationId": "send_notification_api_v1_telegram_send_notification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/appointment-reminder": {
      "post": {
        "tags": [
          "telegram-integration"
        ],
        "summary": "Send Appointment Reminder",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "send_appointment_reminder_api_v1_telegram_appointment_reminder_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/lab-results-notification": {
      "post": {
        "tags": [
          "telegram-integration"
        ],
        "summary": "Send Lab Results Notification",
        "description": "\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e \u0433\u043e\u0442\u043e\u0432\u043d\u043e\u0441\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "send_lab_results_notification_api_v1_telegram_lab_results_notification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/send-qr-code": {
      "post": {
        "tags": [
          "telegram-integration"
        ],
        "summary": "Send Qr Code",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 QR \u043a\u043e\u0434\u0430 \u0434\u043b\u044f \u043e\u043d\u043b\u0430\u0439\u043d-\u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "send_qr_code_api_v1_telegram_send_qr_code_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/bot-status": {
      "get": {
        "tags": [
          "telegram-integration"
        ],
        "summary": "Get Bot Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 Telegram \u0431\u043e\u0442\u0430",
        "operationId": "get_bot_status_api_v1_telegram_bot_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram/users": {
      "get": {
        "tags": [
          "telegram-integration"
        ],
        "summary": "Get Telegram Users",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 Telegram",
        "operationId": "get_telegram_users_api_v1_telegram_users_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/quick/appointment-reminder": {
      "post": {
        "tags": [
          "telegram-integration"
        ],
        "summary": "Quick Appointment Reminder",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "quick_appointment_reminder_api_v1_telegram_quick_appointment_reminder_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_phone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Phone"
            }
          },
          {
            "name": "doctor_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doctor Name"
            }
          },
          {
            "name": "appointment_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appointment Date"
            }
          },
          {
            "name": "appointment_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appointment Time"
            }
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "\u0412\u0440\u0430\u0447",
              "title": "Specialty"
            }
          },
          {
            "name": "cabinet",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "\u0423\u0442\u043e\u0447\u043d\u0438\u0442\u0435 \u0432 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u0435",
              "title": "Cabinet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/quick/qr-notification": {
      "post": {
        "tags": [
          "telegram-integration"
        ],
        "summary": "Quick Qr Notification",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 QR \u043a\u043e\u0434\u0430",
        "operationId": "quick_qr_notification_api_v1_telegram_quick_qr_notification_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_phone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Phone"
            }
          },
          {
            "name": "doctor_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doctor Name"
            }
          },
          {
            "name": "specialty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Specialty"
            }
          },
          {
            "name": "qr_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Qr Token"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Date"
            }
          },
          {
            "name": "time_window",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "07:00-09:00",
              "title": "Time Window"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/display/call-patient": {
      "post": {
        "tags": [
          "display-websocket"
        ],
        "summary": "Call Patient To Board",
        "description": "\u0412\u044b\u0437\u043e\u0432 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0441 \u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0438\u0435\u0439 \u043d\u0430 \u0442\u0430\u0431\u043b\u043e",
        "operationId": "call_patient_to_board_api_v1_display_call_patient_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/display/announcement": {
      "post": {
        "tags": [
          "display-websocket"
        ],
        "summary": "Send Announcement To Board",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u0442\u0430\u0431\u043b\u043e",
        "operationId": "send_announcement_to_board_api_v1_display_announcement_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/display/boards/status": {
      "get": {
        "tags": [
          "display-websocket"
        ],
        "summary": "Get Boards Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0432\u0441\u0435\u0445 \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_boards_status_api_v1_display_boards_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/display/quick/call-next": {
      "post": {
        "tags": [
          "display-websocket"
        ],
        "summary": "Quick Call Next Patient",
        "description": "\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "quick_call_next_patient_api_v1_display_quick_call_next_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Specialty"
            }
          },
          {
            "name": "board_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Board Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/ticket.pdf": {
      "get": {
        "tags": [
          "print",
          "print"
        ],
        "summary": "\u041f\u0435\u0447\u0430\u0442\u044c \u0442\u0430\u043b\u043e\u043d\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 (PDF)",
        "operationId": "ticket_pdf_api_v1_print_ticket_pdf_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "title": "Department"
            }
          },
          {
            "name": "ticket_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Ticket Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/invoice.pdf": {
      "get": {
        "tags": [
          "print",
          "print"
        ],
        "summary": "\u0421\u0447\u0451\u0442/\u043a\u0432\u0438\u0442\u0430\u043d\u0446\u0438\u044f \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443 (PDF)",
        "operationId": "invoice_pdf_api_v1_print_invoice_pdf_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/board/state": {
      "get": {
        "tags": [
          "board",
          "board"
        ],
        "summary": "\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u043e",
        "operationId": "board_state_api_v1_board_state_get",
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "title": "Department"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "YYYY-MM-DD",
              "title": "Date"
            },
            "description": "YYYY-MM-DD"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Generate Patient Report",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u0442\u0447\u0435\u0442 \u043f\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430\u043c",
        "operationId": "generate_patient_report_api_v1_patient_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/appointments": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Generate Appointments Report",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u0442\u0447\u0435\u0442 \u043f\u043e \u0437\u0430\u043f\u0438\u0441\u044f\u043c",
        "operationId": "generate_appointments_report_api_v1_appointments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/financial": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Generate Financial Report",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u044b\u0439 \u043e\u0442\u0447\u0435\u0442",
        "operationId": "generate_financial_report_api_v1_financial_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/daily-summary": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Daily Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0435\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u0443\u044e \u0441\u0432\u043e\u0434\u043a\u0443",
        "operationId": "get_daily_summary_api_v1_daily_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u0434\u043b\u044f \u0441\u0432\u043e\u0434\u043a\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f)",
              "title": "Target Date"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0434\u043b\u044f \u0441\u0432\u043e\u0434\u043a\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0433\u043e\u0434\u043d\u044f)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/available-reports": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Available Reports",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u043e\u0442\u0447\u0435\u0442\u043e\u0432",
        "operationId": "get_available_reports_api_v1_available_reports_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/cleanup": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Cleanup Old Reports",
        "description": "\u041e\u0447\u0438\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0440\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u043e\u0442\u0447\u0435\u0442\u043e\u0432",
        "operationId": "cleanup_old_reports_api_v1_cleanup_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0435\u0442\u043e\u0432",
              "default": 30,
              "title": "Days"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0435\u0442\u043e\u0432"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "List Report Files",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u043e\u0442\u0447\u0435\u0442\u043e\u0432",
        "operationId": "list_report_files_api_v1_files_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/payment/payme": {
      "post": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Payme Webhook",
        "description": "\u0412\u0435\u0431\u0445\u0443\u043a \u043e\u0442 Payme \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "payme_webhook_api_v1_webhooks_payment_payme_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/click": {
      "post": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Click Webhook",
        "description": "\u0412\u0435\u0431\u0445\u0443\u043a \u043e\u0442 Click \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "click_webhook_api_v1_webhooks_payment_click_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/providers": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "List Providers",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "list_providers_api_v1_webhooks_payment_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderOut"
                  },
                  "type": "array",
                  "title": "Response List Providers Api V1 Webhooks Payment Providers Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Create Provider",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "create_provider_api_v1_webhooks_payment_providers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/payment/providers/{provider_id}": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Get Provider",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043e ID",
        "operationId": "get_provider_api_v1_webhooks_payment_providers__provider_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Update Provider",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "update_provider_api_v1_webhooks_payment_providers__provider_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Delete Provider",
        "description": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "delete_provider_api_v1_webhooks_payment_providers__provider_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "List Webhooks",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0435\u0431\u0445\u0443\u043a\u043e\u0432 \u043e\u043f\u043b\u0430\u0442",
        "operationId": "list_webhooks_api_v1_webhooks_payment_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443",
              "title": "Provider"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443",
              "title": "Status"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentWebhookOut"
                  },
                  "title": "Response List Webhooks Api V1 Webhooks Payment Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/transactions": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "List Transactions",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u043e\u043f\u043b\u0430\u0442",
        "operationId": "list_transactions_api_v1_webhooks_payment_transactions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443",
              "title": "Provider"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443",
              "title": "Status"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443"
          },
          {
            "name": "visit_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0438\u0437\u0438\u0442\u0430",
              "title": "Visit Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0438\u0437\u0438\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentTransactionOut"
                  },
                  "title": "Response List Transactions Api V1 Webhooks Payment Transactions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/summary": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Webhook Summary",
        "description": "\u0421\u0432\u043e\u0434\u043a\u0430 \u043f\u043e \u0432\u0435\u0431\u0445\u0443\u043a\u0430\u043c \u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c",
        "operationId": "webhook_summary_api_v1_webhooks_payment_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443",
              "title": "Provider"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Get Transaction",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043f\u043e ID",
        "operationId": "get_transaction_api_v1_webhooks_payment_transactions__transaction_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTransactionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/{webhook_id}": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Get Webhook",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0435\u0431\u0445\u0443\u043a\u0430 \u043f\u043e ID",
        "operationId": "get_webhook_api_v1_webhooks_payment__webhook_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentWebhookOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/providers": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Providers",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "operationId": "get_ai_providers_api_v1_admin_ai_providers_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AIProviderOut"
                  },
                  "title": "Response Get Ai Providers Api V1 Admin Ai Providers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Ai Provider",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "create_ai_provider_api_v1_admin_ai_providers_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIProviderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/providers/{provider_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Provider",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043e ID",
        "operationId": "get_ai_provider_api_v1_admin_ai_providers__provider_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Ai Provider",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "update_ai_provider_api_v1_admin_ai_providers__provider_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Ai Provider",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "delete_ai_provider_api_v1_admin_ai_providers__provider_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/providers/{provider_id}/test": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Test Ai Provider",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "test_ai_provider_api_v1_admin_ai_providers__provider_id__test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIProviderTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AITestResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/settings": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 AI \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "get_ai_settings_api_v1_admin_ai_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Ai Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 AI \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "update_ai_settings_api_v1_admin_ai_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AISystemSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/ai/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI",
        "operationId": "get_ai_stats_api_v1_admin_ai_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Days Back"
            }
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            }
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/usage-logs": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Usage Logs",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043b\u043e\u0433\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI",
        "operationId": "get_ai_usage_logs_api_v1_admin_ai_usage_logs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            }
          },
          {
            "name": "task_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Task Type"
            }
          },
          {
            "name": "success_only",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Success Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AIUsageLogOut"
                  },
                  "title": "Response Get Ai Usage Logs Api V1 Admin Ai Usage Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/clinic/settings": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Clinic Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043b\u0438\u043d\u0438\u043a\u0438 \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438",
        "operationId": "get_clinic_settings_api_v1_admin_clinic_settings_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "clinic",
              "title": "Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClinicSettingsOut"
                  },
                  "title": "Response Get Clinic Settings Api V1 Admin Clinic Settings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Clinic Settings Batch",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043a\u043b\u0438\u043d\u0438\u043a\u0438",
        "operationId": "update_clinic_settings_batch_api_v1_admin_clinic_settings_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicSettingsBatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClinicSettingsOut"
                  },
                  "title": "Response Update Clinic Settings Batch Api V1 Admin Clinic Settings Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Clinic Setting",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443",
        "operationId": "create_clinic_setting_api_v1_admin_clinic_settings_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicSettingsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSettingsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/clinic/settings/{key}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Clinic Setting",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u043f\u043e \u043a\u043b\u044e\u0447\u0443",
        "operationId": "get_clinic_setting_api_v1_admin_clinic_settings__key__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSettingsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Clinic Setting",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443",
        "operationId": "update_clinic_setting_api_v1_admin_clinic_settings__key__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicSettingsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSettingsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/clinic/logo": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Upload Clinic Logo",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043b\u043e\u0433\u043e\u0442\u0438\u043f \u043a\u043b\u0438\u043d\u0438\u043a\u0438",
        "operationId": "upload_clinic_logo_api_v1_admin_clinic_logo_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_clinic_logo_api_v1_admin_clinic_logo_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/queue/settings": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Queue Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "get_queue_settings_api_v1_admin_queue_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Queue Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "update_queue_settings_api_v1_admin_queue_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueSettingsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/queue/test": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Test Queue Generation",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 QR \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043b\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "test_queue_generation_api_v1_admin_queue_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/system/info": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get System Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0435",
        "operationId": "get_system_info_api_v1_admin_system_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/service-categories": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Service Categories",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "get_service_categories_api_v1_admin_service_categories_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Specialty"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__clinic__ServiceCategoryOut"
                  },
                  "title": "Response Get Service Categories Api V1 Admin Service Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/branches": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Create Branch",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0444\u0438\u043b\u0438\u0430\u043b",
        "operationId": "create_branch_api_v1_clinic_branches_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Branches",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0438\u043b\u0438\u0430\u043b\u043e\u0432",
        "operationId": "get_branches_api_v1_clinic_branches_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443",
              "title": "Status"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e, \u0430\u0434\u0440\u0435\u0441\u0443 \u0438\u043b\u0438 \u043a\u043e\u0434\u0443",
              "title": "Search"
            },
            "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e, \u0430\u0434\u0440\u0435\u0441\u0443 \u0438\u043b\u0438 \u043a\u043e\u0434\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchOut"
                  },
                  "title": "Response Get Branches Api V1 Clinic Branches Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/branches/{branch_id}": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Branch",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0444\u0438\u043b\u0438\u0430\u043b \u043f\u043e ID",
        "operationId": "get_branch_api_v1_clinic_branches__branch_id__get",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Update Branch",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0444\u0438\u043b\u0438\u0430\u043b",
        "operationId": "update_branch_api_v1_clinic_branches__branch_id__put",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Branch Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Delete Branch",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0444\u0438\u043b\u0438\u0430\u043b",
        "operationId": "delete_branch_api_v1_clinic_branches__branch_id__delete",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/branches/{branch_id}/stats": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Branch Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0444\u0438\u043b\u0438\u0430\u043b\u0430",
        "operationId": "get_branch_stats_api_v1_clinic_branches__branch_id__stats_get",
        "parameters": [
          {
            "name": "branch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Branch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchStatsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/equipment": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Create Equipment",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "operationId": "create_equipment_api_v1_clinic_equipment_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Equipment",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "get_equipment_api_v1_clinic_equipment_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0444\u0438\u043b\u0438\u0430\u043b\u0443",
              "title": "Branch Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0444\u0438\u043b\u0438\u0430\u043b\u0443"
          },
          {
            "name": "equipment_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0442\u0438\u043f\u0443",
              "title": "Equipment Type"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0442\u0438\u043f\u0443"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443",
              "title": "Status"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e, \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u043b\u0438 \u0441\u0435\u0440\u0438\u0439\u043d\u043e\u043c\u0443 \u043d\u043e\u043c\u0435\u0440\u0443",
              "title": "Search"
            },
            "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e, \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u043b\u0438 \u0441\u0435\u0440\u0438\u0439\u043d\u043e\u043c\u0443 \u043d\u043e\u043c\u0435\u0440\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EquipmentOut"
                  },
                  "title": "Response Get Equipment Api V1 Clinic Equipment Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/equipment/{equipment_id}": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Equipment By Id",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e ID",
        "operationId": "get_equipment_by_id_api_v1_clinic_equipment__equipment_id__get",
        "parameters": [
          {
            "name": "equipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Equipment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Update Equipment",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "operationId": "update_equipment_api_v1_clinic_equipment__equipment_id__put",
        "parameters": [
          {
            "name": "equipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Equipment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Delete Equipment",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "operationId": "delete_equipment_api_v1_clinic_equipment__equipment_id__delete",
        "parameters": [
          {
            "name": "equipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Equipment Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/equipment/maintenance/due": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Maintenance Due",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435, \u0442\u0440\u0435\u0431\u0443\u044e\u0449\u0435\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u044f",
        "operationId": "get_maintenance_due_api_v1_clinic_equipment_maintenance_due_get",
        "parameters": [
          {
            "name": "days_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432\u043f\u0435\u0440\u0435\u0434 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438",
              "default": 30,
              "title": "Days Ahead"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432\u043f\u0435\u0440\u0435\u0434 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EquipmentOut"
                  },
                  "title": "Response Get Maintenance Due Api V1 Clinic Equipment Maintenance Due Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/equipment/{equipment_id}/maintenance": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Schedule Maintenance",
        "description": "\u0417\u0430\u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "schedule_maintenance_api_v1_clinic_equipment__equipment_id__maintenance_post",
        "parameters": [
          {
            "name": "equipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Equipment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentMaintenanceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentMaintenanceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Maintenance History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "get_maintenance_history_api_v1_clinic_equipment__equipment_id__maintenance_get",
        "parameters": [
          {
            "name": "equipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Equipment Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EquipmentMaintenanceOut"
                  },
                  "title": "Response Get Maintenance History Api V1 Clinic Equipment  Equipment Id  Maintenance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/licenses": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Create License",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e",
        "operationId": "create_license_api_v1_clinic_licenses_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Licenses",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0439",
        "operationId": "get_licenses_api_v1_clinic_licenses_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "license_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0442\u0438\u043f\u0443 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438",
              "title": "License Type"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0442\u0438\u043f\u0443 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443",
              "title": "Status"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e, \u043a\u043b\u044e\u0447\u0443 \u0438\u043b\u0438 \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044e",
              "title": "Search"
            },
            "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e, \u043a\u043b\u044e\u0447\u0443 \u0438\u043b\u0438 \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044e"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LicenseOut"
                  },
                  "title": "Response Get Licenses Api V1 Clinic Licenses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/licenses/{license_id}": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get License",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e \u043f\u043e ID",
        "operationId": "get_license_api_v1_clinic_licenses__license_id__get",
        "parameters": [
          {
            "name": "license_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "License Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Update License",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e",
        "operationId": "update_license_api_v1_clinic_licenses__license_id__put",
        "parameters": [
          {
            "name": "license_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "License Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Delete License",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e",
        "operationId": "delete_license_api_v1_clinic_licenses__license_id__delete",
        "parameters": [
          {
            "name": "license_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "License Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/licenses/expiring": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Expiring Licenses",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438, \u0438\u0441\u0442\u0435\u043a\u0430\u044e\u0449\u0438\u0435 \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0435 \u0432\u0440\u0435\u043c\u044f",
        "operationId": "get_expiring_licenses_api_v1_clinic_licenses_expiring_get",
        "parameters": [
          {
            "name": "days_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432\u043f\u0435\u0440\u0435\u0434 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438",
              "default": 30,
              "title": "Days Ahead"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0432\u043f\u0435\u0440\u0435\u0434 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LicenseOut"
                  },
                  "title": "Response Get Expiring Licenses Api V1 Clinic Licenses Expiring Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/licenses/{license_id}/activate": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Activate License",
        "description": "\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e",
        "operationId": "activate_license_api_v1_clinic_licenses__license_id__activate_post",
        "parameters": [
          {
            "name": "license_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "License Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseActivationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseActivationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/licenses/{license_id}/activations": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get License Activations",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438",
        "operationId": "get_license_activations_api_v1_clinic_licenses__license_id__activations_get",
        "parameters": [
          {
            "name": "license_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "License Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LicenseActivationOut"
                  },
                  "title": "Response Get License Activations Api V1 Clinic Licenses  License Id  Activations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/backups": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Create Backup",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0433\u043e \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "create_backup_api_v1_clinic_backups_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Backups",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u044b\u0445 \u043a\u043e\u043f\u0438\u0439",
        "operationId": "get_backups_api_v1_clinic_backups_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443",
              "title": "Status"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443"
          },
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0442\u0438\u043f\u0443",
              "title": "Backup Type"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0442\u0438\u043f\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BackupOut"
                  },
                  "title": "Response Get Backups Api V1 Clinic Backups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/backups/{backup_id}": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Backup",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0443\u044e \u043a\u043e\u043f\u0438\u044e \u043f\u043e ID",
        "operationId": "get_backup_api_v1_clinic_backups__backup_id__get",
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Update Backup",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0443\u044e \u043a\u043e\u043f\u0438\u044e",
        "operationId": "update_backup_api_v1_clinic_backups__backup_id__put",
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Delete Backup",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0443\u044e \u043a\u043e\u043f\u0438\u044e",
        "operationId": "delete_backup_api_v1_clinic_backups__backup_id__delete",
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Backup Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/backups/cleanup": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Cleanup Expired Backups",
        "description": "\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0438\u0441\u0442\u0435\u043a\u0448\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u044b\u0435 \u043a\u043e\u043f\u0438\u0438",
        "operationId": "cleanup_expired_backups_api_v1_clinic_backups_cleanup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Cleanup Expired Backups Api V1 Clinic Backups Cleanup Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/backups/full": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Create Full Backup",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u0443\u044e \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0443\u044e \u043a\u043e\u043f\u0438\u044e",
        "operationId": "create_full_backup_api_v1_clinic_backups_full_post",
        "parameters": [
          {
            "name": "backup_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438",
              "title": "Backup Name"
            },
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/backups/incremental": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Create Incremental Backup",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u0443\u044e \u043a\u043e\u043f\u0438\u044e",
        "operationId": "create_incremental_backup_api_v1_clinic_backups_incremental_post",
        "parameters": [
          {
            "name": "backup_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438",
              "title": "Backup Name"
            },
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/system/info/{key}": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get System Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u043a\u043b\u044e\u0447\u0443",
        "operationId": "get_system_info_api_v1_clinic_system_info__key__get",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Set System Info",
        "description": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e",
        "operationId": "set_system_info_api_v1_clinic_system_info__key__put",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/system/info": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get All System Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e",
        "operationId": "get_all_system_info_api_v1_clinic_system_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get All System Info Api V1 Clinic System Info Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/stats": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get Clinic Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043a\u043b\u0438\u043d\u0438\u043a\u0438",
        "operationId": "get_clinic_stats_api_v1_clinic_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicStatsOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/health": {
      "get": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Get System Health",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "get_system_health_api_v1_clinic_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get System Health Api V1 Clinic Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clinic/initialize": {
      "post": {
        "tags": [
          "clinic-management"
        ],
        "summary": "Initialize Clinic Data",
        "description": "\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043b\u0438\u043d\u0438\u043a\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e",
        "operationId": "initialize_clinic_data_api_v1_clinic_initialize_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Initialize Clinic Data Api V1 Clinic Initialize Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/payment-provider-settings": {
      "get": {
        "tags": [
          "payment-settings"
        ],
        "summary": "Get Payment Provider Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "operationId": "get_payment_provider_settings_api_v1_admin_payment_provider_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderSettings"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "payment-settings"
        ],
        "summary": "Update Payment Provider Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "operationId": "update_payment_provider_settings_api_v1_admin_payment_provider_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/test-payment-provider": {
      "post": {
        "tags": [
          "payment-settings"
        ],
        "summary": "Test Payment Provider",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "test_payment_provider_api_v1_admin_test_payment_provider_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestProviderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestProviderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/payment-providers-info": {
      "get": {
        "tags": [
          "payment-settings"
        ],
        "summary": "Get Payment Providers Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430\u0445",
        "operationId": "get_payment_providers_info_api_v1_admin_payment_providers_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/display/boards": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Boards",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_boards_api_v1_admin_display_boards_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/boards/{board_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Board",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_board_api_v1_admin_display_boards__board_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Display Board",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0442\u0430\u0431\u043b\u043e",
        "operationId": "update_display_board_api_v1_admin_display_boards__board_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Board Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/boards/{board_id}/banners": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Banners",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u0430\u043d\u043d\u0435\u0440\u044b \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_banners_api_v1_admin_display_boards__board_id__banners_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Display Banner",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0431\u0430\u043d\u043d\u0435\u0440 \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u043e",
        "operationId": "create_display_banner_api_v1_admin_display_boards__board_id__banners_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Banner Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/upload-banner": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Upload Banner Image",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0431\u0430\u043d\u043d\u0435\u0440\u0430",
        "operationId": "upload_banner_image_api_v1_admin_display_upload_banner_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_banner_image_api_v1_admin_display_upload_banner_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/display/themes": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Themes",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043c\u044b \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_themes_api_v1_admin_display_themes_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/boards/{board_id}/test": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Test Display Board",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u043e",
        "operationId": "test_display_board_api_v1_admin_display_boards__board_id__test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Test Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_stats_api_v1_admin_display_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days Back"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/doctors": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Doctors",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0440\u0430\u0447\u0435\u0439",
        "operationId": "get_doctors_api_v1_admin_doctors_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__clinic__DoctorOut"
                  },
                  "title": "Response Get Doctors Api V1 Admin Doctors Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Doctor",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u0440\u0430\u0447\u0430",
        "operationId": "create_doctor_api_v1_admin_doctors_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__clinic__DoctorOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/doctors/{doctor_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Doctor",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0430 \u043f\u043e ID",
        "operationId": "get_doctor_api_v1_admin_doctors__doctor_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__clinic__DoctorOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Doctor",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0430",
        "operationId": "update_doctor_api_v1_admin_doctors__doctor_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__clinic__DoctorOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Doctor",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0430 (\u043c\u044f\u0433\u043a\u043e\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435)",
        "operationId": "delete_doctor_api_v1_admin_doctors__doctor_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/doctors/{doctor_id}/schedule": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Doctor Schedule",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0440\u0430\u0447\u0430",
        "operationId": "get_doctor_schedule_api_v1_admin_doctors__doctor_id__schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleOut"
                  },
                  "title": "Response Get Doctor Schedule Api V1 Admin Doctors  Doctor Id  Schedule Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Doctor Schedule",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0440\u0430\u0447\u0430",
        "operationId": "update_doctor_schedule_api_v1_admin_doctors__doctor_id__schedule_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeeklyScheduleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleOut"
                  },
                  "title": "Response Update Doctor Schedule Api V1 Admin Doctors  Doctor Id  Schedule Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Schedule",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u0440\u0430\u0447\u0430",
        "operationId": "create_schedule_api_v1_admin_doctors__doctor_id__schedule_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/specialties": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Specialties",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439",
        "operationId": "get_specialties_api_v1_admin_specialties_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/doctors/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Doctors Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u043e \u0432\u0440\u0430\u0447\u0430\u043c",
        "operationId": "get_doctors_stats_api_v1_admin_doctors_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/providers": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432 \u043e\u043f\u043b\u0430\u0442\u044b (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "list_providers_api_v1_admin_providers_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderOut"
                  },
                  "title": "Response List Providers Api V1 Admin Providers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043e\u043f\u043b\u0430\u0442\u044b (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "create_new_provider_api_v1_admin_providers_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/providers/{provider_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "get_provider_api_v1_admin_providers__provider_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "update_existing_provider_api_v1_admin_providers__provider_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "description": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "delete_existing_provider_api_v1_admin_providers__provider_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/providers/{provider_id}/test": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0422\u0435\u0441\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "test_provider_connection_api_v1_admin_providers__provider_id__test_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/providers/{provider_id}/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "get_provider_stats_api_v1_admin_providers__provider_id__stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/providers/bulk-update": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "bulk_update_providers_api_v1_admin_providers_bulk_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "object"
                },
                "type": "array",
                "title": "Updates"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/telegram/settings": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 Telegram",
        "operationId": "get_telegram_settings_api_v1_admin_telegram_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Telegram Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 Telegram",
        "operationId": "update_telegram_settings_api_v1_admin_telegram_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Settings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/telegram/test-bot": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Test Telegram Bot",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a Telegram \u0431\u043e\u0442\u0443",
        "operationId": "test_telegram_bot_api_v1_admin_telegram_test_bot_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/telegram/set-webhook": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Set Telegram Webhook",
        "description": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c webhook \u0434\u043b\u044f Telegram \u0431\u043e\u0442\u0430",
        "operationId": "set_telegram_webhook_api_v1_admin_telegram_set_webhook_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/webhook-info": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Webhook Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e webhook",
        "operationId": "get_telegram_webhook_info_api_v1_admin_telegram_webhook_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/telegram/templates": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439",
        "operationId": "get_telegram_templates_api_v1_admin_telegram_templates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ru",
              "title": "Language"
            }
          },
          {
            "name": "template_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/send-test-message": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Send Test Message",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
        "operationId": "send_test_message_api_v1_admin_telegram_send_test_message_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Chat Id"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 Telegram",
        "operationId": "get_telegram_stats_api_v1_admin_telegram_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days Back"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Users",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 Telegram",
        "operationId": "get_telegram_users_api_v1_admin_telegram_users_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/broadcast": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Send Broadcast Message",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0448\u0438\u0440\u043e\u043a\u043e\u0432\u0435\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
        "operationId": "send_broadcast_message_api_v1_admin_telegram_broadcast_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ru",
              "title": "Language"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Target Groups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u041e\u0431\u0449\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438",
        "description": "\u0410\u0433\u0440\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438.",
        "operationId": "get_admin_stats_api_v1_admin_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Admin Stats Api V1 Admin Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/quick-stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043b\u044f \u0434\u0430\u0448\u0431\u043e\u0440\u0434\u0430",
        "operationId": "get_quick_stats_api_v1_admin_quick_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Quick Stats Api V1 Admin Quick Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Users",
        "operationId": "list_users_api_v1_admin_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/mobile/auth/login": {
      "post": {
        "tags": [
          "mobile"
        ],
        "summary": "Mobile Login",
        "description": "\u041c\u043e\u0431\u0438\u043b\u044c\u043d\u0430\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f\n\n\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442:\n- \u0412\u0445\u043e\u0434 \u043f\u043e \u043d\u043e\u043c\u0435\u0440\u0443 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0438 \u043f\u0430\u0440\u043e\u043b\u044e\n- \u0412\u0445\u043e\u0434 \u0447\u0435\u0440\u0435\u0437 Telegram ID\n- \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "mobile_login_api_v1_mobile_mobile_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MobileLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mobile/patients/me": {
      "get": {
        "tags": [
          "mobile"
        ],
        "summary": "Get Mobile Patient Profile",
        "description": "\u041f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
        "operationId": "get_mobile_patient_profile_api_v1_mobile_patients_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientProfileOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/appointments/upcoming": {
      "get": {
        "tags": [
          "mobile"
        ],
        "summary": "Get Upcoming Appointments",
        "description": "\u041f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_upcoming_appointments_api_v1_mobile_appointments_upcoming_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentUpcomingOut"
                  },
                  "title": "Response Get Upcoming Appointments Api V1 Mobile Appointments Upcoming Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mobile/appointments/{appointment_id}": {
      "get": {
        "tags": [
          "mobile"
        ],
        "summary": "Get Appointment Detail",
        "description": "\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "get_appointment_detail_api_v1_mobile_appointments__appointment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileAppointmentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mobile/appointments/book": {
      "post": {
        "tags": [
          "mobile"
        ],
        "summary": "Book Mobile Appointment",
        "description": "\u0417\u0430\u043f\u0438\u0441\u044c \u043a \u0432\u0440\u0430\u0447\u0443 \u0447\u0435\u0440\u0435\u0437 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435",
        "operationId": "book_mobile_appointment_api_v1_mobile_appointments_book_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookAppointmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentUpcomingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/lab/results": {
      "get": {
        "tags": [
          "mobile"
        ],
        "summary": "Get Lab Results",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_lab_results_api_v1_mobile_lab_results_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabResultOut"
                  },
                  "title": "Response Get Lab Results Api V1 Mobile Lab Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mobile/stats": {
      "get": {
        "tags": [
          "mobile"
        ],
        "summary": "Get Mobile Quick Stats",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
        "operationId": "get_mobile_quick_stats_api_v1_mobile_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileQuickStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/notifications": {
      "get": {
        "tags": [
          "mobile"
        ],
        "summary": "Get Mobile Notifications",
        "description": "\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
        "operationId": "get_mobile_notifications_api_v1_mobile_notifications_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Mobile Notifications Api V1 Mobile Notifications Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mobile/notifications/{notification_id}/read": {
      "post": {
        "tags": [
          "mobile"
        ],
        "summary": "Mark Notification Read",
        "description": "\u041e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u043a \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u043e\u0435",
        "operationId": "mark_notification_read_api_v1_mobile_notifications__notification_id__read_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mobile/health": {
      "get": {
        "tags": [
          "mobile"
        ],
        "summary": "Mobile Health Check",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e API",
        "operationId": "mobile_health_check_api_v1_mobile_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/mobile/notifications/test-push": {
      "post": {
        "tags": [
          "mobile"
        ],
        "summary": "Test Push Notification",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 push-\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "test_push_notification_api_v1_mobile_notifications_test_push_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/doctors/search": {
      "post": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Search Doctors",
        "description": "\u041f\u043e\u0438\u0441\u043a \u0432\u0440\u0430\u0447\u0435\u0439 \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u043c\u0438",
        "operationId": "search_doctors_api_v1_mobile_doctors_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/doctors/{doctor_id}/schedule": {
      "get": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Get Doctor Schedule",
        "description": "\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0440\u0430\u0447\u0430 \u043d\u0430 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "get_doctor_schedule_api_v1_mobile_doctors__doctor_id__schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mobile/services/search": {
      "post": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Search Services",
        "description": "\u041f\u043e\u0438\u0441\u043a \u0443\u0441\u043b\u0443\u0433 \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u043c\u0438",
        "operationId": "search_services_api_v1_mobile_services_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/services/categories": {
      "get": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Get Service Categories",
        "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "get_service_categories_api_v1_mobile_services_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/queues/status": {
      "get": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Get Queues Status",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441 \u0432\u0441\u0435\u0445 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f",
        "operationId": "get_queues_status_api_v1_mobile_queues_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/queues/my-position": {
      "get": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Get My Queue Position",
        "description": "\u041c\u043e\u044f \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u0445",
        "operationId": "get_my_queue_position_api_v1_mobile_queues_my_position_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/appointments/cancel": {
      "post": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Cancel Appointment",
        "description": "\u041e\u0442\u043c\u0435\u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "cancel_appointment_api_v1_mobile_appointments_cancel_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCancelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/appointments/reschedule": {
      "post": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Reschedule Appointment",
        "description": "\u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "reschedule_appointment_api_v1_mobile_appointments_reschedule_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentRescheduleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/feedback": {
      "post": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Submit Feedback",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438",
        "operationId": "submit_feedback_api_v1_mobile_feedback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/emergency/contact": {
      "post": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Emergency Contact",
        "description": "\u042d\u043a\u0441\u0442\u0440\u0435\u043d\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c",
        "operationId": "emergency_contact_api_v1_mobile_emergency_contact_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/profile": {
      "put": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Update Profile",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "update_profile_api_v1_mobile_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/profile/avatar": {
      "post": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Upload Avatar",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0430\u0432\u0430\u0442\u0430\u0440\u0430 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "upload_avatar_api_v1_mobile_profile_avatar_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_avatar_api_v1_mobile_profile_avatar_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/settings/notifications": {
      "get": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Get Notification Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_settings_api_v1_mobile_settings_notifications_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Update Notification Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "update_notification_settings_api_v1_mobile_settings_notifications_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/clinic/info": {
      "get": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Get Clinic Info",
        "description": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043b\u0438\u043d\u0438\u043a\u0435",
        "operationId": "get_clinic_info_api_v1_mobile_clinic_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/mobile/version": {
      "get": {
        "tags": [
          "mobile-extended"
        ],
        "summary": "Get Api Version",
        "description": "\u0412\u0435\u0440\u0441\u0438\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e API",
        "operationId": "get_api_version_api_v1_mobile_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/templates": {
      "get": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Get Emr Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 EMR",
        "operationId": "get_emr_templates_api_v1_emr_templates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438"
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b",
              "title": "Is Public"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EMRTemplateOut"
                  },
                  "title": "Response Get Emr Templates Api V1 Emr Templates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Create Emr Template",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d EMR",
        "operationId": "create_emr_template_api_v1_emr_templates_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EMRTemplateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMRTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/templates/user": {
      "get": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Get User Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_templates_api_v1_emr_templates_user_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EMRTemplateOut"
                  },
                  "title": "Response Get User Templates Api V1 Emr Templates User Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/templates/from-structure": {
      "post": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Create Template From Structure",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d \u0438\u0437 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b",
        "operationId": "create_template_from_structure_api_v1_emr_templates_from_structure_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EMRTemplateStructure"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMRTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/emr/templates/{template_id}": {
      "get": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Get Emr Template",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d EMR \u043f\u043e ID",
        "operationId": "get_emr_template_api_v1_emr_templates__template_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMRTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Update Emr Template",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d EMR",
        "operationId": "update_emr_template_api_v1_emr_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EMRTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMRTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Delete Emr Template",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d EMR",
        "operationId": "delete_emr_template_api_v1_emr_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/templates/{template_id}/clone": {
      "post": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Clone Emr Template",
        "description": "\u041a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d EMR",
        "operationId": "clone_emr_template_api_v1_emr_templates__template_id__clone_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          },
          {
            "name": "new_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "New Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMRTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/templates/default/load": {
      "get": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Load Default Templates",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b",
        "operationId": "load_default_templates_api_v1_emr_templates_default_load_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/emr/emr/{emr_id}/versions": {
      "get": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Get Emr Versions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0438 EMR",
        "operationId": "get_emr_versions_api_v1_emr_emr__emr_id__versions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EMRVersionOut"
                  },
                  "title": "Response Get Emr Versions Api V1 Emr Emr  Emr Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/emr/{emr_id}/versions/{version_id}/restore": {
      "post": {
        "tags": [
          "emr-templates"
        ],
        "summary": "Restore Emr Version",
        "description": "\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044e EMR",
        "operationId": "restore_emr_version_api_v1_emr_emr__emr_id__versions__version_id__restore_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai/suggestions/diagnosis": {
      "post": {
        "tags": [
          "emr-ai"
        ],
        "summary": "Get Diagnosis Suggestions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0437\u043e\u0432 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u0438\u043c\u043f\u0442\u043e\u043c\u043e\u0432",
        "operationId": "get_diagnosis_suggestions_api_v1_emr_ai_suggestions_diagnosis_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "default": "general",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Symptoms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai/suggestions/treatment": {
      "post": {
        "tags": [
          "emr-ai"
        ],
        "summary": "Get Treatment Suggestions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043b\u0435\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0437\u0430",
        "operationId": "get_treatment_suggestions_api_v1_emr_ai_suggestions_treatment_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "diagnosis",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Diagnosis"
            }
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "default": "general",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai/suggestions/icd10": {
      "post": {
        "tags": [
          "emr-ai"
        ],
        "summary": "Get Icd10 Suggestions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043a\u043e\u0434\u043e\u0432 \u041c\u041a\u0411-10",
        "operationId": "get_icd10_suggestions_api_v1_emr_ai_suggestions_icd10_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "diagnosis_text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Diagnosis Text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai/auto-fill": {
      "post": {
        "tags": [
          "emr-ai"
        ],
        "summary": "Auto Fill Emr Fields",
        "description": "\u0410\u0432\u0442\u043e\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0435\u0439 EMR \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "auto_fill_emr_fields_api_v1_emr_ai_auto_fill_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "default": "general",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_auto_fill_emr_fields_api_v1_emr_ai_auto_fill_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai/validate": {
      "post": {
        "tags": [
          "emr-ai"
        ],
        "summary": "Validate Emr Data",
        "description": "\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 EMR",
        "operationId": "validate_emr_data_api_v1_emr_ai_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_validate_emr_data_api_v1_emr_ai_validate_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/emr/ai/suggestions/ai": {
      "post": {
        "tags": [
          "emr-ai"
        ],
        "summary": "Get Ai Suggestions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u0449\u0438\u0435 AI \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f EMR",
        "operationId": "get_ai_suggestions_api_v1_emr_ai_suggestions_ai_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "default": "general",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Emr Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai/suggestions/health": {
      "get": {
        "tags": [
          "emr-ai"
        ],
        "summary": "Ai Health Check",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f AI \u0441\u0435\u0440\u0432\u0438\u0441\u0430",
        "operationId": "ai_health_check_api_v1_emr_ai_suggestions_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai-enhanced/generate-smart-template": {
      "post": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Generate Smart Template",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0443\u043c\u043d\u043e\u0433\u043e \u0448\u0430\u0431\u043b\u043e\u043d\u0430 EMR \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "generate_smart_template_api_v1_emr_ai_enhanced_generate_smart_template_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_generate_smart_template_api_v1_emr_ai_enhanced_generate_smart_template_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Generate Smart Template Api V1 Emr Ai Enhanced Generate Smart Template Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai-enhanced/smart-suggestions": {
      "post": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Get Smart Suggestions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u043c\u043d\u044b\u0435 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u044f EMR",
        "operationId": "get_smart_suggestions_api_v1_emr_ai_enhanced_smart_suggestions_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "field_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044f",
              "title": "Field Name"
            },
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044f"
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "default": "general",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Current Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Smart Suggestions Api V1 Emr Ai Enhanced Smart Suggestions Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai-enhanced/auto-fill": {
      "post": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Auto Fill Emr Fields",
        "description": "\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0435\u0439 EMR",
        "operationId": "auto_fill_emr_fields_api_v1_emr_ai_enhanced_auto_fill_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "default": "general",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_auto_fill_emr_fields_api_v1_emr_ai_enhanced_auto_fill_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Auto Fill Emr Fields Api V1 Emr Ai Enhanced Auto Fill Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai-enhanced/validate": {
      "post": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Validate Emr Data",
        "description": "\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 EMR \u0441 AI \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430\u043c\u0438",
        "operationId": "validate_emr_data_api_v1_emr_ai_enhanced_validate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "default": "general",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Emr Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Validate Emr Data Api V1 Emr Ai Enhanced Validate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai-enhanced/icd10-suggestions": {
      "post": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Get Icd10 Suggestions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f ICD-10 \u043a\u043e\u0434\u043e\u0432",
        "operationId": "get_icd10_suggestions_api_v1_emr_ai_enhanced_icd10_suggestions_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "diagnosis_text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u0435\u043a\u0441\u0442 \u0434\u0438\u0430\u0433\u043d\u043e\u0437\u0430",
              "title": "Diagnosis Text"
            },
            "description": "\u0422\u0435\u043a\u0441\u0442 \u0434\u0438\u0430\u0433\u043d\u043e\u0437\u0430"
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430",
              "default": "general",
              "title": "Specialty"
            },
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Icd10 Suggestions Api V1 Emr Ai Enhanced Icd10 Suggestions Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai-enhanced/analyze-patient": {
      "post": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Analyze Patient Data",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 EMR",
        "operationId": "analyze_patient_data_api_v1_emr_ai_enhanced_analyze_patient_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Patient Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Analyze Patient Data Api V1 Emr Ai Enhanced Analyze Patient Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/emr/ai-enhanced/templates/specialty/{specialty}": {
      "get": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Get Specialty Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438",
        "operationId": "get_specialty_templates_api_v1_emr_ai_enhanced_templates_specialty__specialty__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Specialty Templates Api V1 Emr Ai Enhanced Templates Specialty  Specialty  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai-enhanced/emr/{emr_id}/ai-enhance": {
      "post": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Enhance Emr With Ai",
        "description": "\u0423\u043b\u0443\u0447\u0448\u0438\u0442\u044c EMR \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e AI",
        "operationId": "enhance_emr_with_ai_api_v1_emr_ai_enhanced_emr__emr_id__ai_enhance_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "enhancement_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f: suggestions, validation, auto_fill",
              "title": "Enhancement Type"
            },
            "description": "\u0422\u0438\u043f \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f: suggestions, validation, auto_fill"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Enhance Emr With Ai Api V1 Emr Ai Enhanced Emr  Emr Id  Ai Enhance Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/ai-enhanced/analytics/quality": {
      "get": {
        "tags": [
          "emr-ai-enhanced"
        ],
        "summary": "Get Emr Quality Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 EMR \u0437\u0430\u043f\u0438\u0441\u0435\u0439",
        "operationId": "get_emr_quality_analytics_api_v1_emr_ai_enhanced_analytics_quality_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Emr Quality Analytics Api V1 Emr Ai Enhanced Analytics Quality Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/versions/{emr_id}/versions/timeline": {
      "get": {
        "tags": [
          "emr-versioning"
        ],
        "summary": "Get Version Timeline",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043b\u0438\u043d\u0438\u044e \u0432\u0435\u0440\u0441\u0438\u0439 EMR",
        "operationId": "get_version_timeline_api_v1_emr_versions__emr_id__versions_timeline_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0440\u0441\u0438\u0439",
              "default": 50,
              "title": "Limit"
            },
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0440\u0441\u0438\u0439"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Version Timeline Api V1 Emr Versions  Emr Id  Versions Timeline Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/versions/{emr_id}/versions/compare": {
      "get": {
        "tags": [
          "emr-versioning"
        ],
        "summary": "Compare Versions",
        "description": "\u0421\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0434\u0432\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 EMR",
        "operationId": "compare_versions_api_v1_emr_versions__emr_id__versions_compare_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "version1_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u043f\u0435\u0440\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438",
              "title": "Version1 Id"
            },
            "description": "ID \u043f\u0435\u0440\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438"
          },
          {
            "name": "version2_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0432\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438",
              "title": "Version2 Id"
            },
            "description": "ID \u0432\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Compare Versions Api V1 Emr Versions  Emr Id  Versions Compare Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/versions/{emr_id}/versions/{version_id}/restore": {
      "post": {
        "tags": [
          "emr-versioning"
        ],
        "summary": "Restore Version With Backup",
        "description": "\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044e EMR \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438",
        "operationId": "restore_version_with_backup_api_v1_emr_versions__emr_id__versions__version_id__restore_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041f\u0440\u0438\u0447\u0438\u043d\u0430 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f",
              "title": "Reason"
            },
            "description": "\u041f\u0440\u0438\u0447\u0438\u043d\u0430 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Restore Version With Backup Api V1 Emr Versions  Emr Id  Versions  Version Id  Restore Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/versions/{emr_id}/versions/statistics": {
      "get": {
        "tags": [
          "emr-versioning"
        ],
        "summary": "Get Version Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0432\u0435\u0440\u0441\u0438\u0439 EMR",
        "operationId": "get_version_statistics_api_v1_emr_versions__emr_id__versions_statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Version Statistics Api V1 Emr Versions  Emr Id  Versions Statistics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/versions/{emr_id}/versions/create": {
      "post": {
        "tags": [
          "emr-versioning"
        ],
        "summary": "Create Version With Analysis",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044e EMR \u0441 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u043c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439",
        "operationId": "create_version_with_analysis_api_v1_emr_versions__emr_id__versions_create_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "change_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f",
              "title": "Change Type"
            },
            "description": "\u0422\u0438\u043f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f"
          },
          {
            "name": "change_description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f",
              "title": "Change Description"
            },
            "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Version Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Create Version With Analysis Api V1 Emr Versions  Emr Id  Versions Create Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/versions/{emr_id}/versions/{version_id}/details": {
      "get": {
        "tags": [
          "emr-versioning"
        ],
        "summary": "Get Version Details",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u0438 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 EMR",
        "operationId": "get_version_details_api_v1_emr_versions__emr_id__versions__version_id__details_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Version Details Api V1 Emr Versions  Emr Id  Versions  Version Id  Details Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/versions/{emr_id}/versions/{version_id}": {
      "delete": {
        "tags": [
          "emr-versioning"
        ],
        "summary": "Delete Version",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044e EMR (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432)",
        "operationId": "delete_version_api_v1_emr_versions__emr_id__versions__version_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Delete Version Api V1 Emr Versions  Emr Id  Versions  Version Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/versions/{emr_id}/versions/export": {
      "get": {
        "tags": [
          "emr-versioning"
        ],
        "summary": "Export Versions",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0438 EMR",
        "operationId": "export_versions_api_v1_emr_versions__emr_id__versions_export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u043e\u0440\u043c\u0430\u0442 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430: json, csv",
              "default": "json",
              "title": "Format"
            },
            "description": "\u0424\u043e\u0440\u043c\u0430\u0442 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430: json, csv"
          },
          {
            "name": "include_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432\u0435\u0440\u0441\u0438\u0439",
              "default": true,
              "title": "Include Data"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432\u0435\u0440\u0441\u0438\u0439"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Export Versions Api V1 Emr Versions  Emr Id  Versions Export Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/lab/patients/{patient_id}/lab-results": {
      "get": {
        "tags": [
          "emr-lab-integration"
        ],
        "summary": "Get Patient Lab Results",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_patient_lab_results_api_v1_emr_lab_patients__patient_id__lab_results_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)"
          },
          {
            "name": "test_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0422\u0438\u043f\u044b \u0442\u0435\u0441\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e",
              "title": "Test Types"
            },
            "description": "\u0422\u0438\u043f\u044b \u0442\u0435\u0441\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Patient Lab Results Api V1 Emr Lab Patients  Patient Id  Lab Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/lab/emr/{emr_id}/integrate-lab-results": {
      "post": {
        "tags": [
          "emr-lab-integration"
        ],
        "summary": "Integrate Lab Results With Emr",
        "description": "\u0418\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0441 EMR",
        "operationId": "integrate_lab_results_with_emr_api_v1_emr_lab_emr__emr_id__integrate_lab_results_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "title": "Lab Result Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Integrate Lab Results With Emr Api V1 Emr Lab Emr  Emr Id  Integrate Lab Results Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/lab/patients/{patient_id}/abnormal-lab-results": {
      "get": {
        "tags": [
          "emr-lab-integration"
        ],
        "summary": "Get Abnormal Lab Results",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u043e\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_abnormal_lab_results_api_v1_emr_lab_patients__patient_id__abnormal_lab_results_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430",
              "default": 30,
              "title": "Days"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Abnormal Lab Results Api V1 Emr Lab Patients  Patient Id  Abnormal Lab Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/lab/emr/{emr_id}/lab-summary": {
      "get": {
        "tags": [
          "emr-lab-integration"
        ],
        "summary": "Get Lab Summary For Emr",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u0434\u043a\u0443 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f EMR",
        "operationId": "get_lab_summary_for_emr_api_v1_emr_lab_emr__emr_id__lab_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "emr_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Emr Id"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Lab Summary For Emr Api V1 Emr Lab Emr  Emr Id  Lab Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/lab/lab-results/{result_id}/notify-doctor": {
      "post": {
        "tags": [
          "emr-lab-integration"
        ],
        "summary": "Notify Doctor About Lab Result",
        "description": "\u0423\u0432\u0435\u0434\u043e\u043c\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0430 \u043e \u0433\u043e\u0442\u043e\u0432\u043d\u043e\u0441\u0442\u0438 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430",
        "operationId": "notify_doctor_about_lab_result_api_v1_emr_lab_lab_results__result_id__notify_doctor_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Result Id"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Notify Doctor About Lab Result Api V1 Emr Lab Lab Results  Result Id  Notify Doctor Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/lab/lab-results/statistics": {
      "get": {
        "tags": [
          "emr-lab-integration"
        ],
        "summary": "Get Lab Results Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432",
        "operationId": "get_lab_results_statistics_api_v1_emr_lab_lab_results_statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)"
          },
          {
            "name": "test_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0422\u0438\u043f \u0442\u0435\u0441\u0442\u0430",
              "title": "Test Type"
            },
            "description": "\u0422\u0438\u043f \u0442\u0435\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Lab Results Statistics Api V1 Emr Lab Lab Results Statistics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/lab/lab-results/trends": {
      "get": {
        "tags": [
          "emr-lab-integration"
        ],
        "summary": "Get Lab Results Trends",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0440\u0435\u043d\u0434\u044b \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_lab_results_trends_api_v1_emr_lab_lab_results_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "test_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u0442\u0435\u0441\u0442\u0430",
              "title": "Test Type"
            },
            "description": "\u0422\u0438\u043f \u0442\u0435\u0441\u0442\u0430"
          },
          {
            "name": "period_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 7,
              "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0432 \u0434\u043d\u044f\u0445",
              "default": 90,
              "title": "Period Days"
            },
            "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0432 \u0434\u043d\u044f\u0445"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Lab Results Trends Api V1 Emr Lab Lab Results Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/formats": {
      "get": {
        "tags": [
          "emr-export"
        ],
        "summary": "Get Export Formats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
        "operationId": "get_export_formats_api_v1_emr_export_formats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/emr/export/formats/import": {
      "get": {
        "tags": [
          "emr-export"
        ],
        "summary": "Get Import Formats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432 \u0438\u043c\u043f\u043e\u0440\u0442\u0430",
        "operationId": "get_import_formats_api_v1_emr_export_formats_import_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/emr/export/export/json": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Export Emr To Json",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 EMR \u0432 JSON \u0444\u043e\u0440\u043c\u0430\u0442",
        "operationId": "export_emr_to_json_api_v1_emr_export_export_json_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_versions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0438 EMR",
              "default": false,
              "title": "Include Versions"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0438 EMR"
          },
          {
            "name": "include_templates",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b",
              "default": false,
              "title": "Include Templates"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b"
          },
          {
            "name": "include_attachments",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
              "default": false,
              "title": "Include Attachments"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u044f"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Emr Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/export/xml": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Export Emr To Xml",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 EMR \u0432 XML \u0444\u043e\u0440\u043c\u0430\u0442",
        "operationId": "export_emr_to_xml_api_v1_emr_export_export_xml_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_versions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0438 EMR",
              "default": false,
              "title": "Include Versions"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0438 EMR"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Emr Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/export/csv": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Export Emr To Csv",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 EMR \u0432 CSV \u0444\u043e\u0440\u043c\u0430\u0442",
        "operationId": "export_emr_to_csv_api_v1_emr_export_export_csv_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041f\u043e\u043b\u044f \u0434\u043b\u044f \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
              "title": "Fields"
            },
            "description": "\u041f\u043e\u043b\u044f \u0434\u043b\u044f \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Emr Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/export/zip": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Export Emr To Zip",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 EMR \u0432 ZIP \u0430\u0440\u0445\u0438\u0432",
        "operationId": "export_emr_to_zip_api_v1_emr_export_export_zip_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_attachments",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
              "default": true,
              "title": "Include Attachments"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u0438\u044f"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Emr Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/import/json": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Import Emr From Json",
        "description": "\u0418\u043c\u043f\u043e\u0440\u0442 EMR \u0438\u0437 JSON \u0444\u043e\u0440\u043c\u0430\u0442\u0430",
        "operationId": "import_emr_from_json_api_v1_emr_export_import_json_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Json Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/emr/export/import/xml": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Import Emr From Xml",
        "description": "\u0418\u043c\u043f\u043e\u0440\u0442 EMR \u0438\u0437 XML \u0444\u043e\u0440\u043c\u0430\u0442\u0430",
        "operationId": "import_emr_from_xml_api_v1_emr_export_import_xml_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "xml_data",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Xml Data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/import/zip": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Import Emr From Zip",
        "description": "\u0418\u043c\u043f\u043e\u0440\u0442 EMR \u0438\u0437 ZIP \u0430\u0440\u0445\u0438\u0432\u0430",
        "operationId": "import_emr_from_zip_api_v1_emr_export_import_zip_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "zip_data",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary",
              "title": "Zip Data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/validate": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Validate Import Data",
        "description": "\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "validate_import_data_api_v1_emr_export_validate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0434\u0430\u043d\u043d\u044b\u0445",
              "default": "json",
              "title": "Format Type"
            },
            "description": "\u0422\u0438\u043f \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0434\u0430\u043d\u043d\u044b\u0445"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/estimate-size": {
      "post": {
        "tags": [
          "emr-export"
        ],
        "summary": "Estimate Export Size",
        "description": "\u041e\u0446\u0435\u043d\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "estimate_export_size_api_v1_emr_export_estimate_size_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
              "default": "json",
              "title": "Format Type"
            },
            "description": "\u0422\u0438\u043f \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Emr Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emr/export/templates/export": {
      "get": {
        "tags": [
          "emr-export"
        ],
        "summary": "Get Export Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0434\u043b\u044f \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430 EMR",
        "operationId": "get_export_templates_api_v1_emr_export_templates_export_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/emr/export/statistics": {
      "get": {
        "tags": [
          "emr-export"
        ],
        "summary": "Get Export Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430/\u0438\u043c\u043f\u043e\u0440\u0442\u0430",
        "operationId": "get_export_statistics_api_v1_emr_export_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/advanced/kpi": {
      "get": {
        "tags": [
          "advanced-analytics"
        ],
        "summary": "Get Kpi Metrics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 (KPI)",
        "operationId": "get_kpi_metrics_api_v1_analytics_advanced_kpi_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/advanced/doctors/performance": {
      "get": {
        "tags": [
          "advanced-analytics"
        ],
        "summary": "Get Doctor Performance",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0432\u0440\u0430\u0447\u0435\u0439",
        "operationId": "get_doctor_performance_api_v1_analytics_advanced_doctors_performance_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/advanced/patients/advanced": {
      "get": {
        "tags": [
          "advanced-analytics"
        ],
        "summary": "Get Advanced Patient Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432",
        "operationId": "get_advanced_patient_analytics_api_v1_analytics_advanced_patients_advanced_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/advanced/revenue/advanced": {
      "get": {
        "tags": [
          "advanced-analytics"
        ],
        "summary": "Get Advanced Revenue Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0434\u043e\u0445\u043e\u0434\u043e\u0432",
        "operationId": "get_advanced_revenue_analytics_api_v1_analytics_advanced_revenue_advanced_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/advanced/predictive": {
      "get": {
        "tags": [
          "advanced-analytics"
        ],
        "summary": "Get Predictive Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0438 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u044b",
        "operationId": "get_predictive_analytics_api_v1_analytics_advanced_predictive_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430",
              "default": 30,
              "title": "Days Ahead"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/advanced/comprehensive/advanced": {
      "get": {
        "tags": [
          "advanced-analytics"
        ],
        "summary": "Get Advanced Comprehensive Report",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u044b\u0439 \u043e\u0442\u0447\u0435\u0442",
        "operationId": "get_advanced_comprehensive_report_api_v1_analytics_advanced_comprehensive_advanced_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "include_predictive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443",
              "default": true,
              "title": "Include Predictive"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/advanced/health": {
      "get": {
        "tags": [
          "advanced-analytics"
        ],
        "summary": "Analytics Health Check",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438",
        "operationId": "analytics_health_check_api_v1_analytics_advanced_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/export/formats": {
      "get": {
        "tags": [
          "analytics-export"
        ],
        "summary": "Get Export Formats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
        "operationId": "get_export_formats_api_v1_analytics_export_formats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/export/kpi/export/{format}": {
      "get": {
        "tags": [
          "analytics-export"
        ],
        "summary": "Export Kpi Report",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043e\u0442\u0447\u0435\u0442\u0430 KPI \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435",
        "operationId": "export_kpi_report_api_v1_analytics_export_kpi_export__format__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Format"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/export/comprehensive/export/{format}": {
      "get": {
        "tags": [
          "analytics-export"
        ],
        "summary": "Export Comprehensive Report",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u043e\u0433\u043e \u043e\u0442\u0447\u0435\u0442\u0430 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435",
        "operationId": "export_comprehensive_report_api_v1_analytics_export_comprehensive_export__format__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Format"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "include_predictive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443",
              "default": true,
              "title": "Include Predictive"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/export/doctors/performance/export/{format}": {
      "get": {
        "tags": [
          "analytics-export"
        ],
        "summary": "Export Doctor Performance Report",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043e\u0442\u0447\u0435\u0442\u0430 \u043f\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0432\u0440\u0430\u0447\u0435\u0439 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435",
        "operationId": "export_doctor_performance_report_api_v1_analytics_export_doctors_performance_export__format__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Format"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/export/revenue/export/{format}": {
      "get": {
        "tags": [
          "analytics-export"
        ],
        "summary": "Export Revenue Report",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043e\u0442\u0447\u0435\u0442\u0430 \u043f\u043e \u0434\u043e\u0445\u043e\u0434\u0430\u043c \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435",
        "operationId": "export_revenue_report_api_v1_analytics_export_revenue_export__format__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Format"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/export/health": {
      "get": {
        "tags": [
          "analytics-export"
        ],
        "summary": "Export Health Check",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
        "operationId": "export_health_check_api_v1_analytics_export_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/visualization/dashboard": {
      "get": {
        "tags": [
          "analytics-visualization"
        ],
        "summary": "Get Dashboard Visualization",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0434\u0430\u0448\u0431\u043e\u0440\u0434\u0430",
        "operationId": "get_dashboard_visualization_api_v1_analytics_visualization_dashboard_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/visualization/kpi": {
      "get": {
        "tags": [
          "analytics-visualization"
        ],
        "summary": "Get Kpi Visualization",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e KPI \u043c\u0435\u0442\u0440\u0438\u043a",
        "operationId": "get_kpi_visualization_api_v1_analytics_visualization_kpi_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/visualization/doctors/performance": {
      "get": {
        "tags": [
          "analytics-visualization"
        ],
        "summary": "Get Doctor Performance Visualization",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0432\u0440\u0430\u0447\u0435\u0439",
        "operationId": "get_doctor_performance_visualization_api_v1_analytics_visualization_doctors_performance_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/visualization/patients": {
      "get": {
        "tags": [
          "analytics-visualization"
        ],
        "summary": "Get Patient Analytics Visualization",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432",
        "operationId": "get_patient_analytics_visualization_api_v1_analytics_visualization_patients_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/visualization/revenue": {
      "get": {
        "tags": [
          "analytics-visualization"
        ],
        "summary": "Get Revenue Analytics Visualization",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438 \u0434\u043e\u0445\u043e\u0434\u043e\u0432",
        "operationId": "get_revenue_analytics_visualization_api_v1_analytics_visualization_revenue_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/visualization/comprehensive": {
      "get": {
        "tags": [
          "analytics-visualization"
        ],
        "summary": "Get Comprehensive Visualization",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u043d\u0443\u044e \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u043e\u0433\u043e \u043e\u0442\u0447\u0435\u0442\u0430",
        "operationId": "get_comprehensive_visualization_api_v1_analytics_visualization_comprehensive_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "include_predictive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443",
              "default": true,
              "title": "Include Predictive"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/visualization/chart-types": {
      "get": {
        "tags": [
          "analytics-visualization"
        ],
        "summary": "Get Supported Chart Types",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432",
        "operationId": "get_supported_chart_types_api_v1_analytics_visualization_chart_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/visualization/health": {
      "get": {
        "tags": [
          "analytics-visualization"
        ],
        "summary": "Visualization Health Check",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438",
        "operationId": "visualization_health_check_api_v1_analytics_visualization_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/status": {
      "get": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Get Two Factor Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 2FA \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_two_factor_status_api_v1_2fa_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/setup": {
      "post": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Setup Two Factor Auth",
        "description": "\u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c 2FA \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "setup_two_factor_auth_api_v1_2fa_setup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorSetupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorSetupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/verify-setup": {
      "post": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Verify Totp Setup",
        "description": "\u0412\u0435\u0440\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 TOTP",
        "operationId": "verify_totp_setup_api_v1_2fa_verify_setup_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "totp_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Totp Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorVerifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/verify": {
      "post": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Verify Two Factor",
        "description": "\u0412\u0435\u0440\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c 2FA \u043a\u043e\u0434",
        "operationId": "verify_two_factor_api_v1_2fa_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorVerifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/disable": {
      "post": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Disable Two Factor Auth",
        "description": "\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c 2FA \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "disable_two_factor_auth_api_v1_2fa_disable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorDisableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorSuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/recovery/request": {
      "post": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Request Two Factor Recovery",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 2FA",
        "operationId": "request_two_factor_recovery_api_v1_2fa_recovery_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRecoveryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorRecoveryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/recovery/verify": {
      "post": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Verify Two Factor Recovery",
        "description": "\u0412\u0435\u0440\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 2FA",
        "operationId": "verify_two_factor_recovery_api_v1_2fa_recovery_verify_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recovery_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recovery Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorVerifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/backup-codes": {
      "get": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Get Backup Codes",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c backup \u043a\u043e\u0434\u044b \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_backup_codes_api_v1_2fa_backup_codes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorBackupCodesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/backup-codes/regenerate": {
      "post": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Regenerate Backup Codes",
        "description": "\u041f\u0435\u0440\u0435\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c backup \u043a\u043e\u0434\u044b",
        "operationId": "regenerate_backup_codes_api_v1_2fa_backup_codes_regenerate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorBackupCodesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/devices": {
      "get": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Get Trusted Devices",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432",
        "operationId": "get_trusted_devices_api_v1_2fa_devices_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeviceInfo"
                  },
                  "type": "array",
                  "title": "Response Get Trusted Devices Api V1 2Fa Devices Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Add Trusted Device",
        "description": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e",
        "operationId": "add_trusted_device_api_v1_2fa_devices_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/devices/{device_id}": {
      "delete": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Revoke Device",
        "description": "\u041e\u0442\u043e\u0437\u0432\u0430\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u0434\u043b\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "revoke_device_api_v1_2fa_devices__device_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/health": {
      "get": {
        "tags": [
          "two-factor-auth"
        ],
        "summary": "Two Factor Health Check",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 2FA",
        "operationId": "two_factor_health_check_api_v1_2fa_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/send-code": {
      "post": {
        "tags": [
          "two-factor-sms-email"
        ],
        "summary": "Send Verification Code",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u0434 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e SMS \u0438\u043b\u0438 Email",
        "operationId": "send_verification_code_api_v1_2fa_send_code_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041c\u0435\u0442\u043e\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438: sms \u0438\u043b\u0438 email",
              "title": "Method"
            },
            "description": "\u041c\u0435\u0442\u043e\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438: sms \u0438\u043b\u0438 email"
          },
          {
            "name": "phone_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043b\u044f SMS",
              "title": "Phone Number"
            },
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043b\u044f SMS"
          },
          {
            "name": "email_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Email \u0430\u0434\u0440\u0435\u0441",
              "title": "Email Address"
            },
            "description": "Email \u0430\u0434\u0440\u0435\u0441"
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "SMS \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440: eskiz, playmobile, mock",
              "title": "Provider"
            },
            "description": "SMS \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440: eskiz, playmobile, mock"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/verify-code": {
      "post": {
        "tags": [
          "two-factor-sms-email"
        ],
        "summary": "Verify Verification Code",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043a\u043e\u0434 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f",
        "operationId": "verify_verification_code_api_v1_2fa_verify_code_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041c\u0435\u0442\u043e\u0434 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438: sms \u0438\u043b\u0438 email",
              "title": "Method"
            },
            "description": "\u041c\u0435\u0442\u043e\u0434 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438: sms \u0438\u043b\u0438 email"
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u0434 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f",
              "title": "Code"
            },
            "description": "\u041a\u043e\u0434 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f"
          },
          {
            "name": "phone_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043b\u044f SMS",
              "title": "Phone Number"
            },
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043b\u044f SMS"
          },
          {
            "name": "email_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Email \u0430\u0434\u0440\u0435\u0441",
              "title": "Email Address"
            },
            "description": "Email \u0430\u0434\u0440\u0435\u0441"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/verification-status": {
      "get": {
        "tags": [
          "two-factor-sms-email"
        ],
        "summary": "Get Verification Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043c\u0435\u0442\u043e\u0434\u0430",
        "operationId": "get_verification_status_api_v1_2fa_verification_status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041c\u0435\u0442\u043e\u0434: sms \u0438\u043b\u0438 email",
              "title": "Method"
            },
            "description": "\u041c\u0435\u0442\u043e\u0434: sms \u0438\u043b\u0438 email"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/resend-code": {
      "post": {
        "tags": [
          "two-factor-sms-email"
        ],
        "summary": "Resend Verification Code",
        "description": "\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u0434 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f",
        "operationId": "resend_verification_code_api_v1_2fa_resend_code_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041c\u0435\u0442\u043e\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438: sms \u0438\u043b\u0438 email",
              "title": "Method"
            },
            "description": "\u041c\u0435\u0442\u043e\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438: sms \u0438\u043b\u0438 email"
          },
          {
            "name": "phone_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043b\u044f SMS",
              "title": "Phone Number"
            },
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043b\u044f SMS"
          },
          {
            "name": "email_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Email \u0430\u0434\u0440\u0435\u0441",
              "title": "Email Address"
            },
            "description": "Email \u0430\u0434\u0440\u0435\u0441"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/supported-methods": {
      "get": {
        "tags": [
          "two-factor-sms-email"
        ],
        "summary": "Get Supported Methods",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 2FA",
        "operationId": "get_supported_methods_api_v1_2fa_supported_methods_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/security-logs": {
      "get": {
        "tags": [
          "two-factor-sms-email"
        ],
        "summary": "Get Security Logs",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0436\u0443\u0440\u043d\u0430\u043b \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 2FA",
        "operationId": "get_security_logs_api_v1_2fa_security_logs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439",
              "default": 50,
              "title": "Limit"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0421\u043c\u0435\u0449\u0435\u043d\u0438\u0435",
              "default": 0,
              "title": "Offset"
            },
            "description": "\u0421\u043c\u0435\u0449\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/recovery-methods": {
      "get": {
        "tags": [
          "two-factor-sms-email"
        ],
        "summary": "Get Recovery Methods",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0435\u0442\u043e\u0434\u044b \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_recovery_methods_api_v1_2fa_recovery_methods_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/devices/{device_id}/name": {
      "put": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Update Device Name",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "update_device_name_api_v1_2fa_devices__device_id__name_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/devices/{device_id}/sessions": {
      "get": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Get Device Sessions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0435\u0441\u0441\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "get_device_sessions_api_v1_2fa_devices__device_id__sessions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439",
              "default": 50,
              "title": "Limit"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0421\u043c\u0435\u0449\u0435\u043d\u0438\u0435",
              "default": 0,
              "title": "Offset"
            },
            "description": "\u0421\u043c\u0435\u0449\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/devices/revoke-all": {
      "post": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Revoke All Devices",
        "description": "\u041e\u0442\u043e\u0437\u0432\u0430\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432",
        "operationId": "revoke_all_devices_api_v1_2fa_devices_revoke_all_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/devices/statistics": {
      "get": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Get Device Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432",
        "operationId": "get_device_statistics_api_v1_2fa_devices_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/2fa/devices/{device_id}/trust": {
      "post": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Trust Device",
        "description": "\u0414\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0443 \u0434\u043e\u0441\u0442\u0443\u043f \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "trust_device_api_v1_2fa_devices__device_id__trust_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "trust_duration_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0414\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u0432\u0435\u0440\u0438\u044f \u0432 \u0434\u043d\u044f\u0445",
              "default": 30,
              "title": "Trust Duration Days"
            },
            "description": "\u0414\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u0432\u0435\u0440\u0438\u044f \u0432 \u0434\u043d\u044f\u0445"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/2fa/devices/{device_id}/security-check": {
      "get": {
        "tags": [
          "two-factor-devices"
        ],
        "summary": "Check Device Security",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "check_device_security_api_v1_2fa_devices__device_id__security_check_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sms/providers": {
      "get": {
        "tags": [
          "sms-providers"
        ],
        "summary": "Get Sms Providers",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 SMS \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "operationId": "get_sms_providers_api_v1_sms_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SMSProviderInfo"
                  },
                  "type": "array",
                  "title": "Response Get Sms Providers Api V1 Sms Providers Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/sms/balance/{provider}": {
      "get": {
        "tags": [
          "sms-providers"
        ],
        "summary": "Get Provider Balance",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u0430\u043b\u0430\u043d\u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "get_provider_balance_api_v1_sms_balance__provider__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sms/test": {
      "post": {
        "tags": [
          "sms-providers"
        ],
        "summary": "Test Sms Sending",
        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 SMS",
        "operationId": "test_sms_sending_api_v1_sms_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMSTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/sms/send-2fa-code": {
      "post": {
        "tags": [
          "sms-providers"
        ],
        "summary": "Send 2Fa Code",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u0434 2FA (\u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432)",
        "operationId": "send_2fa_code_api_v1_sms_send_2fa_code_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Phone"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sms/status/{message_id}": {
      "get": {
        "tags": [
          "sms-providers"
        ],
        "summary": "Get Message Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f",
        "operationId": "get_message_status_api_v1_sms_status__message_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/webhook": {
      "get": {
        "tags": [
          "telegram-webhook"
        ],
        "summary": "Verify Webhook",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 webhook (\u0434\u043b\u044f \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438)",
        "operationId": "verify_webhook_api_v1_telegram_webhook_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "telegram-webhook"
        ],
        "summary": "Telegram Webhook",
        "description": "Webhook endpoint \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u043e\u0442 Telegram",
        "operationId": "telegram_webhook_api_v1_telegram_webhook_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/send-message": {
      "post": {
        "tags": [
          "telegram-webhook"
        ],
        "summary": "Send Message To User",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0447\u0435\u0440\u0435\u0437 \u0431\u043e\u0442\u0430",
        "operationId": "send_message_to_user_api_v1_telegram_send_message_post",
        "parameters": [
          {
            "name": "chat_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Chat Id"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          },
          {
            "name": "parse_mode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "HTML",
              "title": "Parse Mode"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Reply Markup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/bot-info": {
      "get": {
        "tags": [
          "telegram-webhook"
        ],
        "summary": "Get Bot Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u043e\u0442\u0435",
        "operationId": "get_bot_info_api_v1_telegram_bot_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/webhook/enhanced": {
      "post": {
        "tags": [
          "telegram-webhook-enhanced"
        ],
        "summary": "Telegram Webhook Enhanced",
        "description": "\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 webhook \u043e\u0442 Telegram \u0434\u043b\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0433\u043e \u0431\u043e\u0442\u0430",
        "operationId": "telegram_webhook_enhanced_api_v1_telegram_webhook_enhanced_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/webhook/info": {
      "get": {
        "tags": [
          "telegram-webhook-enhanced"
        ],
        "summary": "Webhook Info",
        "description": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e webhook",
        "operationId": "webhook_info_api_v1_telegram_webhook_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/webhook/test": {
      "post": {
        "tags": [
          "telegram-webhook-enhanced"
        ],
        "summary": "Test Webhook",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 webhook \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438",
        "operationId": "test_webhook_api_v1_telegram_webhook_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Test Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/send-appointment-reminder": {
      "post": {
        "tags": [
          "telegram-notifications"
        ],
        "summary": "Send Appointment Reminder",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u043e \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u043f\u0440\u0438\u0435\u043c",
        "operationId": "send_appointment_reminder_api_v1_telegram_send_appointment_reminder_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          },
          {
            "name": "reminder_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f: 24h, 2h, 30m",
              "default": "24h",
              "title": "Reminder Type"
            },
            "description": "\u0422\u0438\u043f \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f: 24h, 2h, 30m"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/send-lab-results": {
      "post": {
        "tags": [
          "telegram-notifications"
        ],
        "summary": "Send Lab Results",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0443",
        "operationId": "send_lab_results_api_v1_telegram_send_lab_results_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "title": "Lab Result Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/send-payment-confirmation": {
      "post": {
        "tags": [
          "telegram-notifications"
        ],
        "summary": "Send Payment Confirmation",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u0442\u0435\u0436\u0430",
        "operationId": "send_payment_confirmation_api_v1_telegram_send_payment_confirmation_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payment Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/broadcast-message": {
      "post": {
        "tags": [
          "telegram-notifications"
        ],
        "summary": "Send Broadcast Message",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0448\u0438\u0440\u043e\u043a\u043e\u0432\u0435\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
        "operationId": "send_broadcast_message_api_v1_telegram_broadcast_message_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          },
          {
            "name": "target_groups",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "\u0413\u0440\u0443\u043f\u043f\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439: patients, doctors, admins",
              "title": "Target Groups"
            },
            "description": "\u0413\u0440\u0443\u043f\u043f\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439: patients, doctors, admins"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u042f\u0437\u044b\u043a \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f",
              "default": "ru",
              "title": "Language"
            },
            "description": "\u042f\u0437\u044b\u043a \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/notification-stats": {
      "get": {
        "tags": [
          "telegram-notifications"
        ],
        "summary": "Get Notification Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_stats_api_v1_telegram_notification_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434",
              "default": 7,
              "title": "Days Back"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram/schedule-reminder": {
      "post": {
        "tags": [
          "telegram-notifications"
        ],
        "summary": "Schedule Reminder",
        "description": "\u0417\u0430\u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "schedule_reminder_api_v1_telegram_schedule_reminder_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          },
          {
            "name": "reminder_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Reminder Time"
            }
          },
          {
            "name": "reminder_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f",
              "default": "24h",
              "title": "Reminder Type"
            },
            "description": "\u0422\u0438\u043f \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram-bot/stats": {
      "get": {
        "tags": [
          "telegram-bot-management"
        ],
        "summary": "Get Telegram Bot Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 Telegram \u0431\u043e\u0442\u0430",
        "operationId": "get_telegram_bot_stats_api_v1_telegram_bot_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelegramBotStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram-bot/send-notification": {
      "post": {
        "tags": [
          "telegram-bot-management"
        ],
        "summary": "Send Telegram Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 Telegram \u0431\u043e\u0442\u0430",
        "operationId": "send_telegram_notification_api_v1_telegram_bot_send_notification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TelegramNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram-bot/send-admin-alert": {
      "post": {
        "tags": [
          "telegram-bot-management"
        ],
        "summary": "Send Admin Alert",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u0440\u043e\u0447\u043d\u043e\u0435 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c",
        "operationId": "send_admin_alert_api_v1_telegram_bot_send_admin_alert_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram-bot/users-with-telegram": {
      "get": {
        "tags": [
          "telegram-bot-management"
        ],
        "summary": "Get Users With Telegram",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u043c Telegram",
        "operationId": "get_users_with_telegram_api_v1_telegram_bot_users_with_telegram_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram-bot/test-bot": {
      "post": {
        "tags": [
          "telegram-bot-management"
        ],
        "summary": "Test Telegram Bot",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 Telegram \u0431\u043e\u0442\u0430",
        "operationId": "test_telegram_bot_api_v1_telegram_bot_test_bot_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/telegram-bot/broadcast-system-message": {
      "post": {
        "tags": [
          "telegram-bot-management"
        ],
        "summary": "Broadcast System Message",
        "description": "\u0421\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f SuperAdmin)",
        "operationId": "broadcast_system_message_api_v1_telegram_bot_broadcast_system_message_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          },
          {
            "name": "message_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "info",
              "title": "Message Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/telegram-bot/bot-commands": {
      "get": {
        "tags": [
          "telegram-bot-management"
        ],
        "summary": "Get Bot Commands",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434 \u0431\u043e\u0442\u0430",
        "operationId": "get_bot_commands_api_v1_telegram_bot_bot_commands_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/register-token": {
      "post": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Register Fcm Token",
        "description": "\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f FCM \u0442\u043e\u043a\u0435\u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "register_fcm_token_api_v1_fcm_register_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FCMTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/unregister-token": {
      "delete": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Unregister Fcm Token",
        "description": "\u041e\u0442\u043c\u0435\u043d\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 FCM \u0442\u043e\u043a\u0435\u043d\u0430",
        "operationId": "unregister_fcm_token_api_v1_fcm_unregister_token_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/send-notification": {
      "post": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Send Fcm Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 FCM \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432)",
        "operationId": "send_fcm_notification_api_v1_fcm_send_notification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FCMNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/send-test-notification": {
      "post": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Send Test Fcm Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e FCM \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e",
        "operationId": "send_test_fcm_notification_api_v1_fcm_send_test_notification_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/subscribe-topic": {
      "post": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Subscribe To Topic",
        "description": "\u041f\u043e\u0434\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u043d\u0430 \u0442\u043e\u043f\u0438\u043a",
        "operationId": "subscribe_to_topic_api_v1_fcm_subscribe_topic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FCMTopicRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/unsubscribe-topic": {
      "post": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Unsubscribe From Topic",
        "description": "\u041e\u0442\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u043e\u0442 \u0442\u043e\u043f\u0438\u043a\u0430",
        "operationId": "unsubscribe_from_topic_api_v1_fcm_unsubscribe_topic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FCMTopicRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/send-topic-notification": {
      "post": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Send Topic Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043f\u043e \u0442\u043e\u043f\u0438\u043a\u0443",
        "operationId": "send_topic_notification_api_v1_fcm_send_topic_notification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FCMTopicNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/status": {
      "get": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Get Fcm Status",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441 FCM \u0441\u0435\u0440\u0432\u0438\u0441\u0430",
        "operationId": "get_fcm_status_api_v1_fcm_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/fcm/user-tokens": {
      "get": {
        "tags": [
          "fcm-notifications"
        ],
        "summary": "Get User Fcm Tokens",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 FCM \u0442\u043e\u043a\u0435\u043d\u0430\u043c\u0438",
        "operationId": "get_user_fcm_tokens_api_v1_fcm_user_tokens_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/phone-verification/send-code": {
      "post": {
        "tags": [
          "phone-verification"
        ],
        "summary": "Send Verification Code",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043a\u043e\u0434\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "send_verification_code_api_v1_phone_verification_send_code_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/phone-verification/verify-code": {
      "post": {
        "tags": [
          "phone-verification"
        ],
        "summary": "Verify Code",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u043e\u0434\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "verify_code_api_v1_phone_verification_verify_code_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/phone-verification/status": {
      "get": {
        "tags": [
          "phone-verification"
        ],
        "summary": "Get Verification Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "get_verification_status_api_v1_phone_verification_status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 +998XXXXXXXXX",
              "title": "Phone"
            },
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 +998XXXXXXXXX"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0426\u0435\u043b\u044c \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
              "default": "verification",
              "title": "Purpose"
            },
            "description": "\u0426\u0435\u043b\u044c \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phone-verification/cancel": {
      "delete": {
        "tags": [
          "phone-verification"
        ],
        "summary": "Cancel Verification",
        "description": "\u041e\u0442\u043c\u0435\u043d\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "cancel_verification_api_v1_phone_verification_cancel_delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 +998XXXXXXXXX",
              "title": "Phone"
            },
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 +998XXXXXXXXX"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0426\u0435\u043b\u044c \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
              "default": "verification",
              "title": "Purpose"
            },
            "description": "\u0426\u0435\u043b\u044c \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phone-verification/update-phone": {
      "put": {
        "tags": [
          "phone-verification"
        ],
        "summary": "Update User Phone",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "update_user_phone_api_v1_phone_verification_update_phone_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhoneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/phone-verification/statistics": {
      "get": {
        "tags": [
          "phone-verification"
        ],
        "summary": "Get Verification Statistics",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0439 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432)",
        "operationId": "get_verification_statistics_api_v1_phone_verification_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/phone-verification/admin/send-code": {
      "post": {
        "tags": [
          "phone-verification"
        ],
        "summary": "Admin Send Verification Code",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043a\u043e\u0434\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
        "operationId": "admin_send_verification_code_api_v1_phone_verification_admin_send_code_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 +998XXXXXXXXX",
              "title": "Phone"
            },
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 +998XXXXXXXXX"
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0426\u0435\u043b\u044c \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
              "default": "verification",
              "title": "Purpose"
            },
            "description": "\u0426\u0435\u043b\u044c \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "SMS \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
              "title": "Provider"
            },
            "description": "SMS \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441 {code}",
              "title": "Message"
            },
            "description": "\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441 {code}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-reset/initiate": {
      "post": {
        "tags": [
          "password-reset"
        ],
        "summary": "Initiate Password Reset",
        "description": "\u0418\u043d\u0438\u0446\u0438\u0430\u0446\u0438\u044f \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
        "operationId": "initiate_password_reset_api_v1_password_reset_initiate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetInitiateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-reset/verify-phone": {
      "post": {
        "tags": [
          "password-reset"
        ],
        "summary": "Verify Phone For Reset",
        "description": "\u0412\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
        "operationId": "verify_phone_for_reset_api_v1_password_reset_verify_phone_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneVerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-reset/confirm": {
      "post": {
        "tags": [
          "password-reset"
        ],
        "summary": "Confirm Password Reset",
        "description": "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
        "operationId": "confirm_password_reset_api_v1_password_reset_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__endpoints__password_reset__PasswordResetConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-reset/validate-token": {
      "get": {
        "tags": [
          "password-reset"
        ],
        "summary": "Validate Reset Token",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0441\u0442\u0438 \u0442\u043e\u043a\u0435\u043d\u0430 \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
        "operationId": "validate_reset_token_api_v1_password_reset_validate_token_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u043e\u043a\u0435\u043d \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
              "title": "Token"
            },
            "description": "\u0422\u043e\u043a\u0435\u043d \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-reset/statistics": {
      "get": {
        "tags": [
          "password-reset"
        ],
        "summary": "Get Password Reset Statistics",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u0435\u0439 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432)",
        "operationId": "get_password_reset_statistics_api_v1_password_reset_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/queue/reorder": {
      "put": {
        "tags": [
          "queue-reorder"
        ],
        "summary": "Reorder Queue",
        "description": "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0440\u044f\u0434\u043a\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0438 \u0432\u0440\u0430\u0447\u0430\u043c",
        "operationId": "reorder_queue_api_v1_queue_reorder_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueReorderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueReorderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/queue/move-entry": {
      "put": {
        "tags": [
          "queue-reorder"
        ],
        "summary": "Move Queue Entry",
        "description": "\u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043d\u0430 \u043d\u043e\u0432\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e\n\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u0434\u0432\u0438\u0433\u0430\u0435\u0442 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "move_queue_entry_api_v1_queue_move_entry_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueEntryMoveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueReorderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/queue/status/by-specialist/": {
      "get": {
        "tags": [
          "queue-reorder"
        ],
        "summary": "Get Queue Status By Specialist",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0443 \u0438 \u0434\u043d\u044e",
        "operationId": "get_queue_status_by_specialist_api_v1_queue_status_by_specialist__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Specialist Id"
            }
          },
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Day"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/status/{queue_id}": {
      "get": {
        "tags": [
          "queue-reorder"
        ],
        "summary": "Get Queue Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043f\u043e ID",
        "operationId": "get_queue_status_api_v1_queue_status__queue_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/send-appointment-reminder-enhanced": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Send Appointment Reminder Enhanced",
        "description": "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0435 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "send_appointment_reminder_enhanced_api_v1_email_sms_send_appointment_reminder_enhanced_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          },
          {
            "name": "channels",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
              "default": [
                "email",
                "sms"
              ],
              "title": "Channels"
            },
            "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Template Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/send-lab-results-enhanced": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Send Lab Results Enhanced",
        "description": "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "send_lab_results_enhanced_api_v1_email_sms_send_lab_results_enhanced_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "lab_results_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Lab Results Id"
            }
          },
          {
            "name": "channels",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
              "default": [
                "email",
                "sms"
              ],
              "title": "Channels"
            },
            "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Template Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/send-payment-confirmation-enhanced": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Send Payment Confirmation Enhanced",
        "description": "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u0442\u0435\u0436\u0430",
        "operationId": "send_payment_confirmation_enhanced_api_v1_email_sms_send_payment_confirmation_enhanced_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "channels",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
              "default": [
                "email",
                "sms"
              ],
              "title": "Channels"
            },
            "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_send_payment_confirmation_enhanced_api_v1_email_sms_send_payment_confirmation_enhanced_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/send-bulk-email": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Send Bulk Email",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 email",
        "operationId": "send_bulk_email_api_v1_email_sms_send_bulk_email_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subject"
            }
          },
          {
            "name": "template_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Name"
            }
          },
          {
            "name": "html_content",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Html Content"
            }
          },
          {
            "name": "text_content",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Text Content"
            }
          },
          {
            "name": "batch_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0431\u0430\u0442\u0447\u0430",
              "default": 50,
              "title": "Batch Size"
            },
            "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0431\u0430\u0442\u0447\u0430"
          },
          {
            "name": "delay_between_batches",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "\u0417\u0430\u0434\u0435\u0440\u0436\u043a\u0430 \u043c\u0435\u0436\u0434\u0443 \u0431\u0430\u0442\u0447\u0430\u043c\u0438 (\u0441\u0435\u043a)",
              "default": 1.0,
              "title": "Delay Between Batches"
            },
            "description": "\u0417\u0430\u0434\u0435\u0440\u0436\u043a\u0430 \u043c\u0435\u0436\u0434\u0443 \u0431\u0430\u0442\u0447\u0430\u043c\u0438 (\u0441\u0435\u043a)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_send_bulk_email_api_v1_email_sms_send_bulk_email_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/send-bulk-sms": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Send Bulk Sms",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 SMS",
        "operationId": "send_bulk_sms_api_v1_email_sms_send_bulk_sms_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Message"
            }
          },
          {
            "name": "template_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Name"
            }
          },
          {
            "name": "batch_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0431\u0430\u0442\u0447\u0430",
              "default": 100,
              "title": "Batch Size"
            },
            "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0431\u0430\u0442\u0447\u0430"
          },
          {
            "name": "delay_between_batches",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "\u0417\u0430\u0434\u0435\u0440\u0436\u043a\u0430 \u043c\u0435\u0436\u0434\u0443 \u0431\u0430\u0442\u0447\u0430\u043c\u0438 (\u0441\u0435\u043a)",
              "default": 0.5,
              "title": "Delay Between Batches"
            },
            "description": "\u0417\u0430\u0434\u0435\u0440\u0436\u043a\u0430 \u043c\u0435\u0436\u0434\u0443 \u0431\u0430\u0442\u0447\u0430\u043c\u0438 (\u0441\u0435\u043a)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_send_bulk_sms_api_v1_email_sms_send_bulk_sms_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/send-custom-email": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Send Custom Email",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e email",
        "operationId": "send_custom_email_api_v1_email_sms_send_custom_email_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "to_email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "To Email"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subject"
            }
          },
          {
            "name": "template_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Name"
            }
          },
          {
            "name": "html_content",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Html Content"
            }
          },
          {
            "name": "text_content",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Text Content"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442: normal, high",
              "default": "normal",
              "title": "Priority"
            },
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442: normal, high"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_send_custom_email_api_v1_email_sms_send_custom_email_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/send-custom-sms": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Send Custom Sms",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e SMS",
        "operationId": "send_custom_sms_api_v1_email_sms_send_custom_sms_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Phone"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Message"
            }
          },
          {
            "name": "template_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Name"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sender"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442: normal, high",
              "default": "normal",
              "title": "Priority"
            },
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442: normal, high"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Template Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/statistics": {
      "get": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Get Email Sms Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 Email/SMS \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
        "operationId": "get_email_sms_statistics_api_v1_email_sms_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/email-sms/reset-statistics": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Reset Email Sms Statistics",
        "description": "\u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 Email/SMS \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
        "operationId": "reset_email_sms_statistics_api_v1_email_sms_reset_statistics_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/email-sms/templates": {
      "get": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Get Available Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432",
        "operationId": "get_available_templates_api_v1_email_sms_templates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u0448\u0430\u0431\u043b\u043e\u043d\u0430: email, sms, all",
              "default": "all",
              "title": "Template Type"
            },
            "description": "\u0422\u0438\u043f \u0448\u0430\u0431\u043b\u043e\u043d\u0430: email, sms, all"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/test-email": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Test Email Sending",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 email",
        "operationId": "test_email_sending_api_v1_email_sms_test_email_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "to_email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "To Email"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "\u0422\u0435\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e",
              "title": "Subject"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "\u042d\u0442\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u043e\u0442 Programma Clinic",
              "title": "Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-sms/test-sms": {
      "post": {
        "tags": [
          "email-sms-enhanced"
        ],
        "summary": "Test Sms Sending",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 SMS",
        "operationId": "test_sms_sending_api_v1_email_sms_test_sms_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Phone"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "\u0422\u0435\u0441\u0442\u043e\u0432\u043e\u0435 SMS \u043e\u0442 Programma Clinic",
              "title": "Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/upload": {
      "post": {
        "tags": [
          "file-system"
        ],
        "summary": "Upload File",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b",
        "operationId": "upload_file_api_v1_files_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_api_v1_files_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/statistics": {
      "get": {
        "tags": [
          "file-system"
        ],
        "summary": "Get File Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0444\u0430\u0439\u043b\u043e\u0432",
        "operationId": "get_file_statistics_api_v1_files_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/{file_id}": {
      "get": {
        "tags": [
          "file-system"
        ],
        "summary": "Get File",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0444\u0430\u0439\u043b\u0435",
        "operationId": "get_file_api_v1_files__file_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "file-system"
        ],
        "summary": "Update File",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0444\u0430\u0439\u043b",
        "operationId": "update_file_api_v1_files__file_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_update_file_api_v1_files__file_id__put"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "file-system"
        ],
        "summary": "Delete File",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0444\u0430\u0439\u043b",
        "operationId": "delete_file_api_v1_files__file_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}/download": {
      "get": {
        "tags": [
          "file-system"
        ],
        "summary": "Download File",
        "description": "\u0421\u043a\u0430\u0447\u0430\u0442\u044c \u0444\u0430\u0439\u043b",
        "operationId": "download_file_api_v1_files__file_id__download_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}/preview": {
      "get": {
        "tags": [
          "file-system"
        ],
        "summary": "Preview File",
        "description": "\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0444\u0430\u0439\u043b\u0430",
        "operationId": "preview_file_api_v1_files__file_id__preview_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/search": {
      "post": {
        "tags": [
          "file-system"
        ],
        "summary": "Search Files",
        "description": "\u041f\u043e\u0438\u0441\u043a \u0444\u0430\u0439\u043b\u043e\u0432",
        "operationId": "search_files_api_v1_files_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/": {
      "get": {
        "tags": [
          "file-system"
        ],
        "summary": "Get Files",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432",
        "operationId": "get_files_api_v1_files__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0422\u0438\u043f \u0444\u0430\u0439\u043b\u0430",
              "title": "File Type"
            },
            "description": "\u0422\u0438\u043f \u0444\u0430\u0439\u043b\u0430"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
              "title": "Patient Id"
            },
            "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          {
            "name": "appointment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0437\u0430\u043f\u0438\u0441\u0438",
              "title": "Appointment Id"
            },
            "description": "ID \u0437\u0430\u043f\u0438\u0441\u0438"
          },
          {
            "name": "emr_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u043c\u0435\u0434\u043a\u0430\u0440\u0442\u044b",
              "title": "Emr Id"
            },
            "description": "ID \u043c\u0435\u0434\u043a\u0430\u0440\u0442\u044b"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u043f\u0430\u043f\u043a\u0438",
              "title": "Folder Id"
            },
            "description": "ID \u043f\u0430\u043f\u043a\u0438"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "\u041d\u043e\u043c\u0435\u0440 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b",
              "default": 1,
              "title": "Page"
            },
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b",
              "default": 20,
              "title": "Size"
            },
            "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}/share": {
      "post": {
        "tags": [
          "file-system"
        ],
        "summary": "Create File Share",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430",
        "operationId": "create_file_share_api_v1_files__file_id__share_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileShareCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileShareOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}/shares": {
      "get": {
        "tags": [
          "file-system"
        ],
        "summary": "Get File Shares",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u044b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430",
        "operationId": "get_file_shares_api_v1_files__file_id__shares_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileShareOut"
                  },
                  "title": "Response Get File Shares Api V1 Files  File Id  Shares Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/export": {
      "post": {
        "tags": [
          "file-system"
        ],
        "summary": "Export Files",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0432 \u0430\u0440\u0445\u0438\u0432",
        "operationId": "export_files_api_v1_files_export_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/import": {
      "post": {
        "tags": [
          "file-system"
        ],
        "summary": "Import Files",
        "description": "\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0438\u0437 \u0430\u0440\u0445\u0438\u0432\u0430",
        "operationId": "import_files_api_v1_files_import_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_files_api_v1_files_import_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/cleanup": {
      "post": {
        "tags": [
          "file-system"
        ],
        "summary": "Cleanup Files",
        "description": "\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0438\u0441\u0442\u0435\u043a\u0448\u0438\u0435 \u0444\u0430\u0439\u043b\u044b",
        "operationId": "cleanup_files_api_v1_files_cleanup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/upload-simple": {
      "post": {
        "tags": [
          "file-upload-simple"
        ],
        "summary": "Upload File Simple",
        "description": "\u0423\u043f\u0440\u043e\u0449\u0435\u043d\u043d\u0430\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0444\u0430\u0439\u043b\u0430",
        "operationId": "upload_file_simple_api_v1_files_upload_simple_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_simple_api_v1_files_upload_simple_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/upload-json": {
      "post": {
        "tags": [
          "file-upload-json"
        ],
        "summary": "Upload File Json",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0444\u0430\u0439\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 JSON (base64)",
        "operationId": "upload_file_json_api_v1_files_upload_json_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileUploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/test": {
      "get": {
        "tags": [
          "file-test"
        ],
        "summary": "Test Files",
        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 endpoint \u0434\u043b\u044f \u0444\u0430\u0439\u043b\u043e\u0432",
        "operationId": "test_files_api_v1_files_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/files/test-upload": {
      "post": {
        "tags": [
          "file-test"
        ],
        "summary": "Test Upload",
        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 endpoint \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438",
        "operationId": "test_upload_api_v1_files_test_upload_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/schedule": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0439",
        "operationId": "list_templates_api_v1_schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 64
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department"
            }
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doctor Id"
            }
          },
          {
            "name": "weekday",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 6,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Weekday"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleRowOut"
                  },
                  "title": "Response List Templates Api V1 Schedule Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
        "operationId": "create_template_api_v1_schedule_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCreateIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRowOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/{id}": {
      "delete": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
        "operationId": "delete_template_api_v1_schedule__id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/weekly": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 \u043d\u0435\u0434\u0435\u043b\u044e",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 \u043d\u0435\u0434\u0435\u043b\u044e \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u0438\u043b\u0438 \u0432\u0440\u0430\u0447\u0443",
        "operationId": "get_weekly_schedule_api_v1_schedule_weekly_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "ID \u0432\u0440\u0430\u0447\u0430"
          },
          {
            "name": "week_start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041d\u0430\u0447\u0430\u043b\u043e \u043d\u0435\u0434\u0435\u043b\u0438 (YYYY-MM-DD)",
              "title": "Week Start"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u043e \u043d\u0435\u0434\u0435\u043b\u0438 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/daily": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 \u0434\u0435\u043d\u044c",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
        "operationId": "get_daily_schedule_api_v1_schedule_daily_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "ID \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/available-slots": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0441\u043b\u043e\u0442\u044b \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0441\u043b\u043e\u0442\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "get_available_slots_api_v1_schedule_available_slots_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "ID \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/doctors": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0440\u0430\u0447\u0435\u0439 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u043c",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0440\u0430\u0447\u0435\u0439, \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u043c",
        "operationId": "get_doctors_by_department_api_v1_schedule_doctors_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/departments": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439 \u0441 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c",
        "operationId": "get_departments_api_v1_schedule_departments_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/queue/qrcode": {
      "post": {
        "tags": [
          "queue"
        ],
        "summary": "Generate Qr Token",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f QR \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043b\u044f \u043e\u043d\u043b\u0430\u0439\u043d-\u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0438 \u0430\u0434\u043c\u0438\u043d\u0430\u043c",
        "operationId": "generate_qr_token_api_v1_queue_qrcode_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0435\u043d\u044c \u0434\u043b\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438 (YYYY-MM-DD)",
              "title": "Day"
            },
            "description": "\u0414\u0435\u043d\u044c \u0434\u043b\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438 (YYYY-MM-DD)"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/join": {
      "post": {
        "tags": [
          "queue"
        ],
        "summary": "Join Queue",
        "description": "\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u043e\u043d\u043b\u0430\u0439\u043d-\u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0443\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0432\u0441\u0435\u043c (\u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 endpoint)",
        "operationId": "join_queue_api_v1_queue_join_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__endpoints__queue__QueueJoinRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__v1__endpoints__queue__QueueJoinResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/statistics/{specialist_id}": {
      "get": {
        "tags": [
          "queue"
        ],
        "summary": "Get Queue Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0434\u043b\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
        "operationId": "get_queue_statistics_api_v1_queue_statistics__specialist_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Specialist Id"
            }
          },
          {
            "name": "day",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0435\u043d\u044c \u0434\u043b\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438",
              "title": "Day"
            },
            "description": "\u0414\u0435\u043d\u044c \u0434\u043b\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/open": {
      "post": {
        "tags": [
          "queue"
        ],
        "summary": "Open Queue",
        "description": "\u041e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u0440\u0438\u0435\u043c\u0430 (\u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u043d\u043b\u0430\u0439\u043d-\u0437\u0430\u043f\u0438\u0441\u044c)\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u0438 \u0430\u0434\u043c\u0438\u043d\u0430\u043c",
        "operationId": "open_queue_api_v1_queue_open_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0435\u043d\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
              "title": "Day"
            },
            "description": "\u0414\u0435\u043d\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/today": {
      "get": {
        "tags": [
          "queue"
        ],
        "summary": "Get Today Queue",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f",
        "operationId": "get_today_queue_api_v1_queue_today_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__v1__endpoints__queue__QueueStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/call/{entry_id}": {
      "post": {
        "tags": [
          "queue"
        ],
        "summary": "Call Patient",
        "description": "\u0412\u044b\u0437\u043e\u0432 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 (\u0434\u043b\u044f \u0442\u0430\u0431\u043b\u043e)",
        "operationId": "call_patient_api_v1_queue_call__entry_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/join-simple": {
      "post": {
        "tags": [
          "queue-simple"
        ],
        "summary": "Join Queue Simple",
        "description": "\u0423\u043f\u0440\u043e\u0449\u0435\u043d\u043d\u043e\u0435 \u0432\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c (\u0431\u0435\u0437 \u0411\u0414)",
        "operationId": "join_queue_simple_api_v1_queue_join_simple_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__endpoints__queue_simple__QueueJoinRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__v1__endpoints__queue_simple__QueueJoinResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/test": {
      "get": {
        "tags": [
          "queue-simple"
        ],
        "summary": "Test Queue",
        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 endpoint",
        "operationId": "test_queue_api_v1_queue_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/cardio/ecg": {
      "get": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u042d\u041a\u0413 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u042d\u041a\u0413 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439",
        "operationId": "get_ecg_results_api_v1_cardio_ecg_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Ecg Results Api V1 Cardio Ecg Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u042d\u041a\u0413 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u042d\u041a\u0413 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "operationId": "create_ecg_api_v1_cardio_ecg_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Ecg Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Ecg Api V1 Cardio Ecg Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cardio/blood-tests": {
      "get": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u0410\u043d\u0430\u043b\u0438\u0437\u044b \u043a\u0440\u043e\u0432\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432 \u043a\u0440\u043e\u0432\u0438",
        "operationId": "get_blood_tests_api_v1_cardio_blood_tests_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Blood Tests Api V1 Cardio Blood Tests Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0437 \u043a\u0440\u043e\u0432\u0438",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u043a\u0440\u043e\u0432\u0438",
        "operationId": "create_blood_test_api_v1_cardio_blood_tests_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Blood Test Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Blood Test Api V1 Cardio Blood Tests Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cardio/risk-assessment": {
      "get": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u041e\u0446\u0435\u043d\u043a\u0430 \u0440\u0438\u0441\u043a\u043e\u0432",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u043a\u0430\u0440\u0434\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0438\u0441\u043a\u043e\u0432",
        "operationId": "get_risk_assessment_api_v1_cardio_risk_assessment_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Risk Assessment Api V1 Cardio Risk Assessment Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/derma/examinations": {
      "get": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u041e\u0441\u043c\u043e\u0442\u0440\u044b \u043a\u043e\u0436\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432 \u043a\u043e\u0436\u0438",
        "operationId": "get_skin_examinations_api_v1_derma_examinations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Skin Examinations Api V1 Derma Examinations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u0436\u0438",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u0436\u0438",
        "operationId": "create_skin_examination_api_v1_derma_examinations_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Examination Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Skin Examination Api V1 Derma Examinations Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/derma/procedures": {
      "get": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u041a\u043e\u0441\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0441\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440",
        "operationId": "get_cosmetic_procedures_api_v1_derma_procedures_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Cosmetic Procedures Api V1 Derma Procedures Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u0441\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0443",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u0441\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0443",
        "operationId": "create_cosmetic_procedure_api_v1_derma_procedures_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Procedure Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Cosmetic Procedure Api V1 Derma Procedures Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/derma/price-override": {
      "post": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0446\u0435\u043d\u0443 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b",
        "description": "\u0414\u0435\u0440\u043c\u0430\u0442\u043e\u043b\u043e\u0433 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0446\u0435\u043d\u0443 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u0438\u0447\u0438\u043d\u044b",
        "operationId": "create_price_override_api_v1_derma_price_override_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceOverrideRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceOverrideResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/derma/price-overrides": {
      "get": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0446\u0435\u043d",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0446\u0435\u043d \u0434\u0435\u0440\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0430",
        "operationId": "get_price_overrides_api_v1_derma_price_overrides_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430",
              "title": "Visit Id"
            },
            "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0421\u0442\u0430\u0442\u0443\u0441 (pending, approved, rejected)",
              "title": "Status"
            },
            "description": "\u0421\u0442\u0430\u0442\u0443\u0441 (pending, approved, rejected)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceOverrideResponse"
                  },
                  "title": "Response Get Price Overrides Api V1 Derma Price Overrides Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/derma/photo-gallery": {
      "get": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u0424\u043e\u0442\u043e\u0433\u0430\u043b\u0435\u0440\u0435\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0444\u043e\u0442\u043e\u0433\u0430\u043b\u0435\u0440\u0435\u044e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_photo_gallery_api_v1_derma_photo_gallery_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Photo Gallery Api V1 Derma Photo Gallery Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/examinations": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0421\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0441\u043c\u043e\u0442\u0440\u044b",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432",
        "operationId": "get_dental_examinations_api_v1_dental_examinations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Dental Examinations Api V1 Dental Examinations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043e\u0441\u043c\u043e\u0442\u0440",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043e\u0441\u043c\u043e\u0442\u0440",
        "operationId": "create_dental_examination_api_v1_dental_examinations_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Examination Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Dental Examination Api V1 Dental Examinations Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/treatments": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u041f\u043b\u0430\u043d\u044b \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u043e\u0432 \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "operationId": "get_treatment_plans_api_v1_dental_treatments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Treatment Plans Api V1 Dental Treatments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043b\u0430\u043d \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u043b\u0430\u043d \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "operationId": "create_treatment_plan_api_v1_dental_treatments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Treatment Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Treatment Plan Api V1 Dental Treatments Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/prosthetics": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u041f\u0440\u043e\u0442\u0435\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0442\u0435\u0437\u043e\u0432",
        "operationId": "get_prosthetics_api_v1_dental_prosthetics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Prosthetics Api V1 Dental Prosthetics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0442\u0435\u0437",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u0442\u0435\u0437",
        "operationId": "create_prosthetic_api_v1_dental_prosthetics_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Prosthetic Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Prosthetic Api V1 Dental Prosthetics Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/xray": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0420\u0435\u043d\u0442\u0433\u0435\u043d\u043e\u0432\u0441\u043a\u0438\u0435 \u0441\u043d\u0438\u043c\u043a\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u043d\u0442\u0433\u0435\u043d\u043e\u0432\u0441\u043a\u0438\u0435 \u0441\u043d\u0438\u043c\u043a\u0438 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_xray_images_api_v1_dental_xray_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Xray Images Api V1 Dental Xray Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/price-override": {
      "post": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0423\u043a\u0430\u0437\u0430\u0442\u044c \u0446\u0435\u043d\u0443 \u043f\u043e\u0441\u043b\u0435 \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "description": "\u0421\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0446\u0435\u043d\u0443 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "operationId": "create_dental_price_override_api_v1_dental_price_override_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DentalPriceOverrideRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DentalPriceOverrideResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/dental/price-overrides": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0446\u0435\u043d \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0430",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0446\u0435\u043d \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0430",
        "operationId": "get_dental_price_overrides_api_v1_dental_price_overrides_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430",
              "title": "Visit Id"
            },
            "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0421\u0442\u0430\u0442\u0443\u0441 (pending, approved, rejected)",
              "title": "Status"
            },
            "description": "\u0421\u0442\u0430\u0442\u0443\u0441 (pending, approved, rejected)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DentalPriceOverrideResponse"
                  },
                  "title": "Response Get Dental Price Overrides Api V1 Dental Price Overrides Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/price-override/{override_id}/approve": {
      "put": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u041e\u0434\u043e\u0431\u0440\u0438\u0442\u044c/\u043e\u0442\u043a\u043b\u043e\u043d\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b",
        "description": "\u041e\u0434\u043e\u0431\u0440\u0438\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u043e\u043c\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432 \u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432",
        "operationId": "approve_price_override_api_v1_dental_price_override__override_id__approve_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "override_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Override Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__endpoints__dental__PriceOverrideApprovalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/price-overrides/pending": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0435 \u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0446\u0435\u043d",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0446\u0435\u043d, \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f\n\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432 \u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432",
        "operationId": "get_pending_price_overrides_api_v1_dental_price_overrides_pending_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lab/tests": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439",
        "operationId": "get_lab_tests_api_v1_lab_tests_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Lab Tests Api V1 Lab Tests Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "operationId": "create_lab_test_api_v1_lab_tests_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Test Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Lab Test Api V1 Lab Tests Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lab/results": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "get_lab_results_api_v1_lab_results_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Lab Results Api V1 Lab Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
        "operationId": "create_lab_result_api_v1_lab_results_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Result Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Lab Result Api V1 Lab Results Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lab/reports": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u043e\u0442\u0447\u0435\u0442\u044b",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u043e\u0442\u0447\u0435\u0442\u044b \u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "get_lab_reports_api_v1_lab_reports_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Lab Reports Api V1 Lab Reports Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lab/reference-ranges": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u0420\u0435\u0444\u0435\u0440\u0435\u043d\u0441\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u0444\u0435\u0440\u0435\u043d\u0441\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "get_reference_ranges_api_v1_lab_reference_ranges_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Reference Ranges Api V1 Lab Reference Ranges Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/lab/equipment": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "get_lab_equipment_api_v1_lab_equipment_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Lab Equipment Api V1 Lab Equipment Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/appointments/{appointment_id}/start-visit": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Start Visit",
        "description": "\u041d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u0438\u0435\u043c (\u043f\u0435\u0440\u0435\u0445\u043e\u0434 paid -> in_visit)",
        "operationId": "start_visit_api_v1_appointments__appointment_id__start_visit_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/emr": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Create Or Update Emr",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c EMR",
        "operationId": "create_or_update_emr_api_v1_appointments__appointment_id__emr_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EMRCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMR"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Get Emr",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c EMR \u043f\u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "get_emr_api_v1_appointments__appointment_id__emr_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EMR"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Emr Api V1 Appointments  Appointment Id  Emr Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/emr/save": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Save Emr",
        "description": "\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c EMR (\u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0438\u0437 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430)",
        "operationId": "save_emr_api_v1_appointments__appointment_id__emr_save_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMR"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/prescription": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Create Or Update Prescription",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442",
        "operationId": "create_or_update_prescription_api_v1_appointments__appointment_id__prescription_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Get Prescription",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442 \u043f\u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "get_prescription_api_v1_appointments__appointment_id__prescription_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Prescription"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Prescription Api V1 Appointments  Appointment Id  Prescription Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/prescription/save": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Save Prescription",
        "description": "\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442 (\u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0438\u0437 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430)",
        "operationId": "save_prescription_api_v1_appointments__appointment_id__prescription_save_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/complete": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Complete Visit",
        "description": "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u0438\u0435\u043c (\u043f\u0435\u0440\u0435\u0445\u043e\u0434 in_visit -> completed)",
        "operationId": "complete_visit_api_v1_appointments__appointment_id__complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/mark-paid": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Mark Appointment Paid",
        "description": "\u041e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u043a\u0430\u043a \u043e\u043f\u043b\u0430\u0447\u0435\u043d\u043d\u0443\u044e (\u043f\u0435\u0440\u0435\u0445\u043e\u0434 pending -> paid)",
        "operationId": "mark_appointment_paid_api_v1_appointments__appointment_id__mark_paid_post",
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/status": {
      "get": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Get Appointment Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "get_appointment_status_api_v1_appointments__appointment_id__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Appointment Status Api V1 Appointments  Appointment Id  Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/quick-stats": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Quick Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438",
        "operationId": "get_quick_stats_api_v1_analytics_quick_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/dashboard": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Dashboard Data",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0434\u0430\u0448\u0431\u043e\u0440\u0434\u0430",
        "operationId": "get_dashboard_data_api_v1_analytics_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/trends": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Trends Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0440\u0435\u043d\u0434\u043e\u0432 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 N \u0434\u043d\u0435\u0439",
        "operationId": "get_trends_analytics_api_v1_analytics_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
              "default": 30,
              "title": "Days"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/kpi-metrics": {
      "get": {
        "tags": [
          "analytics-kpi"
        ],
        "summary": "Get Kpi Metrics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c KPI \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438",
        "operationId": "get_kpi_metrics_api_v1_analytics_kpi_metrics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/kpi-trends": {
      "get": {
        "tags": [
          "analytics-kpi"
        ],
        "summary": "Get Kpi Trends",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0440\u0435\u043d\u0434\u044b KPI \u043c\u0435\u0442\u0440\u0438\u043a",
        "operationId": "get_kpi_trends_api_v1_analytics_kpi_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0430\u044f \u043c\u0435\u0442\u0440\u0438\u043a\u0430",
              "title": "Metric"
            },
            "description": "\u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0430\u044f \u043c\u0435\u0442\u0440\u0438\u043a\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/kpi-comparison": {
      "get": {
        "tags": [
          "analytics-kpi"
        ],
        "summary": "Get Kpi Comparison",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 KPI \u0441 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c\u0438 \u043f\u0435\u0440\u0438\u043e\u0434\u0430\u043c\u0438",
        "operationId": "get_kpi_comparison_api_v1_analytics_kpi_comparison_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "comparison_period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f",
              "default": "previous",
              "title": "Comparison Period"
            },
            "description": "\u041f\u0435\u0440\u0438\u043e\u0434 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/predictive": {
      "get": {
        "tags": [
          "analytics-predictive"
        ],
        "summary": "Get Predictive Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0438 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u044b",
        "operationId": "get_predictive_analytics_api_v1_analytics_predictive_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "forecast_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0414\u043d\u0438 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430",
              "default": 30,
              "title": "Forecast Days"
            },
            "description": "\u0414\u043d\u0438 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/predictive/accuracy": {
      "get": {
        "tags": [
          "analytics-predictive"
        ],
        "summary": "Get Prediction Accuracy",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u043e\u0432",
        "operationId": "get_prediction_accuracy_api_v1_analytics_predictive_accuracy_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/predictive/scenarios": {
      "get": {
        "tags": [
          "analytics-predictive"
        ],
        "summary": "Get Scenario Analysis",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0437 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044f",
        "operationId": "get_scenario_analysis_api_v1_analytics_predictive_scenarios_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "scenario",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439: optimistic, realistic, pessimistic",
              "default": "optimistic",
              "title": "Scenario"
            },
            "description": "\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439: optimistic, realistic, pessimistic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/predictive/insights": {
      "get": {
        "tags": [
          "analytics-predictive"
        ],
        "summary": "Get Predictive Insights",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0441\u0430\u0439\u0442\u044b \u0438 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b \u0438\u0437 \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438",
        "operationId": "get_predictive_insights_api_v1_analytics_predictive_insights_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "insight_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u0438\u043d\u0441\u0430\u0439\u0442\u043e\u0432: all, revenue, patients, efficiency",
              "default": "all",
              "title": "Insight Type"
            },
            "description": "\u0422\u0438\u043f \u0438\u043d\u0441\u0430\u0439\u0442\u043e\u0432: all, revenue, patients, efficiency"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-appointment-reminder": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Appointment Reminder",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "send_appointment_reminder_api_v1_notifications_send_appointment_reminder_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "appointment_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Appointment Date"
            }
          },
          {
            "name": "doctor_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doctor Name"
            }
          },
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-visit-confirmation": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Visit Confirmation",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "send_visit_confirmation_api_v1_notifications_send_visit_confirmation_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "queue_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Queue Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-payment-notification": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Payment Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u0435",
        "operationId": "send_payment_notification_api_v1_notifications_send_payment_notification_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Amount"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-queue-update": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Queue Update",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "send_queue_update_api_v1_notifications_send_queue_update_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "current_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Current Number"
            }
          },
          {
            "name": "estimated_wait",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Estimated Wait"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-system-alert": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send System Alert",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "send_system_alert_api_v1_notifications_send_system_alert_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "alert_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Type"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/test-notifications": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Test Notifications",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0442\u0438\u043f\u043e\u0432 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "test_notifications_api_v1_notifications_test_notifications_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/notification-status": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_status_api_v1_notifications_notification_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/templates": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_templates_api_v1_notifications_templates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationTemplate"
                  },
                  "type": "array",
                  "title": "Response Get Notification Templates Api V1 Notifications Templates Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Create Notification Template",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
        "operationId": "create_notification_template_api_v1_notifications_templates_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/templates/{template_id}": {
      "put": {
        "tags": [
          "notifications"
        ],
        "summary": "Update Notification Template",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
        "operationId": "update_notification_template_api_v1_notifications_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notifications"
        ],
        "summary": "Delete Notification Template",
        "description": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
        "operationId": "delete_notification_template_api_v1_notifications_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/history": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_history_api_v1_notifications_history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "recipient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Recipient Id"
            }
          },
          {
            "name": "recipient_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Recipient Type"
            }
          },
          {
            "name": "notification_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notification Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHistory"
                  },
                  "title": "Response Get Notification History Api V1 Notifications History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/history/stats": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_stats_api_v1_notifications_history_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "default": 7,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__notification__NotificationStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/settings/{user_id}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get User Notification Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_notification_settings_api_v1_notifications_settings__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "user_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: patient, doctor, admin",
              "title": "User Type"
            },
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: patient, doctor, admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notifications"
        ],
        "summary": "Update User Notification Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "update_user_notification_settings_api_v1_notifications_settings__user_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "user_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
              "title": "User Type"
            },
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettingsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
        "operationId": "send_notification_api_v1_notifications_send_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationHistory"
                  },
                  "type": "array",
                  "title": "Response Send Notification Api V1 Notifications Send Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/send-bulk": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Bulk Notification",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "send_bulk_notification_api_v1_notifications_send_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Send Bulk Notification Api V1 Notifications Send Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/docs/api-docs": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Get Api Docs",
        "description": "\u041f\u043e\u043b\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API \u0441 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c\u0438",
        "operationId": "get_api_docs_api_v1_docs_api_docs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/docs/api-schema": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Get Api Schema",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c JSON \u0441\u0445\u0435\u043c\u0443 API",
        "operationId": "get_api_schema_api_v1_docs_api_schema_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/docs/endpoints-summary": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Get Endpoints Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432",
        "operationId": "get_endpoints_summary_api_v1_docs_endpoints_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/documentation/documentation/endpoints": {
      "get": {
        "tags": [
          "api-docs"
        ],
        "summary": "Get Detailed Endpoints Documentation",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u043e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430\u043c",
        "operationId": "get_detailed_endpoints_documentation_api_v1_documentation_documentation_endpoints_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432",
              "title": "Category"
            },
            "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documentation/documentation/examples": {
      "get": {
        "tags": [
          "api-docs"
        ],
        "summary": "Get Api Examples",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f API",
        "operationId": "get_api_examples_api_v1_documentation_documentation_examples_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442",
              "title": "Endpoint"
            },
            "description": "\u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documentation/documentation/status-codes": {
      "get": {
        "tags": [
          "api-docs"
        ],
        "summary": "Get Status Codes Documentation",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u043e \u043a\u043e\u0434\u0430\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u0432",
        "operationId": "get_status_codes_documentation_api_v1_documentation_documentation_status_codes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/documentation/documentation/authentication": {
      "get": {
        "tags": [
          "api-docs"
        ],
        "summary": "Get Authentication Documentation",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u043e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "get_authentication_documentation_api_v1_documentation_documentation_authentication_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/cardiology/patients": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Cardiology Patients",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432 \u043a\u0430\u0440\u0434\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_cardiology_patients_api_v1_specialized_cardiology_patients_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/cardiology/visits": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Cardiology Visits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0438\u0442\u044b \u043a\u0430\u0440\u0434\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_cardiology_visits_api_v1_specialized_cardiology_visits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/cardiology/analytics": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Cardiology Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043a\u0430\u0440\u0434\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_cardiology_analytics_api_v1_specialized_cardiology_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/dentistry/patients": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Dentistry Patients",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432 \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_dentistry_patients_api_v1_specialized_dentistry_patients_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/dentistry/visits": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Dentistry Visits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0438\u0442\u044b \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_dentistry_visits_api_v1_specialized_dentistry_visits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/dentistry/analytics": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Dentistry Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_dentistry_analytics_api_v1_specialized_dentistry_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/specialized/services": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Specialized Services",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_specialized_services_api_v1_specialized_specialized_services_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435: cardiology, dentistry",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435: cardiology, dentistry"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/specialized/patient-history/{patient_id}": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Specialized Patient History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0432 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0438",
        "operationId": "get_specialized_patient_history_api_v1_specialized_specialized_patient_history__patient_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435: cardiology, dentistry",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435: cardiology, dentistry"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/specialized/statistics": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Specialized Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u0449\u0443\u044e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u043c",
        "operationId": "get_specialized_statistics_api_v1_specialized_specialized_statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "\u041f\u0440\u043e\u0441\u0442\u043e\u0439 healthcheck + \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0411\u0414",
        "operationId": "get_health_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/status": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "\u041a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
        "operationId": "get_status_api_v1_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/activation/issue": {
      "post": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u0412\u044b\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043a\u043b\u044e\u0447 (Admin)",
        "operationId": "activation_issue_api_v1_activation_issue_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationIssueIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationIssueOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/activation/activate": {
      "post": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u044e\u0447 \u043d\u0430 \u044d\u0442\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435",
        "operationId": "activation_activate_api_v1_activation_activate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationActivateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationActivateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activation/status": {
      "get": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u0421\u0442\u0430\u0442\u0443\u0441 \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
        "operationId": "activation_status_api_v1_activation_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationStatusOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activation/list": {
      "get": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u044b\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 (Admin)",
        "operationId": "activation_list_api_v1_activation_list_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "issued|trial|active|expired|revoked",
              "title": "Status"
            },
            "description": "issued|trial|active|expired|revoked"
          },
          {
            "name": "key_like",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \u043a\u043b\u044e\u0447\u0430",
              "title": "Key Like"
            },
            "description": "\u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \u043a\u043b\u044e\u0447\u0430"
          },
          {
            "name": "machine_hash",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Machine Hash"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationListOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activation/revoke": {
      "post": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u041e\u0442\u043e\u0437\u0432\u0430\u0442\u044c \u043a\u043b\u044e\u0447 (Admin)",
        "operationId": "activation_revoke_api_v1_activation_revoke_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationRevokeIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/activation/extend": {
      "post": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u041f\u0440\u043e\u0434\u043b\u0438\u0442\u044c \u043a\u043b\u044e\u0447 (Admin)",
        "operationId": "activation_extend_api_v1_activation_extend_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationExtendIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/authentication/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login",
        "description": "\u0412\u0445\u043e\u0434 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443",
        "operationId": "login_api_v1_authentication_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Refresh Access Token",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 access \u0442\u043e\u043a\u0435\u043d\u0430",
        "operationId": "refresh_access_token_api_v1_authentication_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout",
        "description": "\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "logout_api_v1_authentication_logout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/authentication/password-reset": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Request Password Reset",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
        "operationId": "request_password_reset_api_v1_authentication_password_reset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/password-reset/confirm": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Confirm Password Reset",
        "description": "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
        "operationId": "confirm_password_reset_api_v1_authentication_password_reset_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__authentication__PasswordResetConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/password-change": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Change Password",
        "description": "\u0421\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
        "operationId": "change_password_api_v1_authentication_password_change_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/authentication/email-verification": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Request Email Verification",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 email",
        "operationId": "request_email_verification_api_v1_authentication_email_verification_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/authentication/email-verification/confirm": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Confirm Email Verification",
        "description": "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 email",
        "operationId": "confirm_email_verification_api_v1_authentication_email_verification_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/profile": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get User Profile",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_profile_api_v1_authentication_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__authentication__UserProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "authentication"
        ],
        "summary": "Update User Profile",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "update_user_profile_api_v1_authentication_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__authentication__UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/authentication/sessions": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get User Sessions",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_sessions_api_v1_authentication_sessions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u0435\u0441\u0441\u0438\u0438",
              "default": true,
              "title": "Active Only"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u0435\u0441\u0441\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/sessions/{session_id}": {
      "delete": {
        "tags": [
          "authentication"
        ],
        "summary": "Revoke Session",
        "description": "\u041e\u0442\u043e\u0437\u0432\u0430\u0442\u044c \u0441\u0435\u0441\u0441\u0438\u044e",
        "operationId": "revoke_session_api_v1_authentication_sessions__session_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRevokeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Session Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0435\u0441\u0441\u0438\u0438",
        "operationId": "get_session_info_api_v1_authentication_sessions__session_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/activity": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get User Activity",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_activity_api_v1_authentication_activity_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivityResponse"
                  },
                  "title": "Response Get User Activity Api V1 Authentication Activity Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/status": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Auth Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "get_auth_status_api_v1_authentication_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/authentication/health": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Auth Health Check",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "auth_health_check_api_v1_authentication_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/sessions/current": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Current Session",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_current_session_api_v1_authentication_sessions_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/authentication/sessions/{session_id}/revoke": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Revoke Session",
        "description": "\u041e\u0442\u043e\u0437\u0432\u0430\u0442\u044c \u0441\u0435\u0441\u0441\u0438\u044e",
        "operationId": "revoke_session_api_v1_authentication_sessions__session_id__revoke_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u041f\u0440\u0438\u0447\u0438\u043d\u0430 \u043e\u0442\u0437\u044b\u0432\u0430 \u0441\u0435\u0441\u0441\u0438\u0438",
              "default": "manual",
              "title": "Reason"
            },
            "description": "\u041f\u0440\u0438\u0447\u0438\u043d\u0430 \u043e\u0442\u0437\u044b\u0432\u0430 \u0441\u0435\u0441\u0441\u0438\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/sessions/revoke-all": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Revoke All Sessions",
        "description": "\u041e\u0442\u043e\u0437\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "revoke_all_sessions_api_v1_authentication_sessions_revoke_all_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "except_current",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0418\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e",
              "default": true,
              "title": "Except Current"
            },
            "description": "\u0418\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e"
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u041f\u0440\u0438\u0447\u0438\u043d\u0430 \u043e\u0442\u0437\u044b\u0432\u0430 \u0441\u0435\u0441\u0441\u0438\u0439",
              "default": "logout_all",
              "title": "Reason"
            },
            "description": "\u041f\u0440\u0438\u0447\u0438\u043d\u0430 \u043e\u0442\u0437\u044b\u0432\u0430 \u0441\u0435\u0441\u0441\u0438\u0439"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/sessions/cleanup": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Cleanup Expired Sessions",
        "description": "\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0438\u0441\u0442\u0435\u043a\u0448\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432)",
        "operationId": "cleanup_expired_sessions_api_v1_authentication_sessions_cleanup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/users": {
      "post": {
        "tags": [
          "user-management"
        ],
        "summary": "Create User",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "create_user_api_v1_users_users_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get Users",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439",
        "operationId": "get_users_api_v1_users_users_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Per Page"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(Admin|Doctor|Nurse|Receptionist|Patient)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(active|inactive|suspended|pending|locked)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 100
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/{user_id}": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get User",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID",
        "operationId": "get_user_api_v1_users_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-management"
        ],
        "summary": "Update User",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "update_user_api_v1_users_users__user_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-management"
        ],
        "summary": "Delete User",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "delete_user_api_v1_users_users__user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "transfer_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445",
              "title": "Transfer To"
            },
            "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/{user_id}/profile": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get User Profile",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_profile_api_v1_users_users__user_id__profile_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user_management__UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-management"
        ],
        "summary": "Update User Profile",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "update_user_profile_api_v1_users_users__user_id__profile_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user_management__UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/{user_id}/preferences": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get User Preferences",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_preferences_api_v1_users_users__user_id__preferences_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-management"
        ],
        "summary": "Update User Preferences",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "update_user_preferences_api_v1_users_users__user_id__preferences_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/{user_id}/notifications": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get User Notification Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_notification_settings_api_v1_users_users__user_id__notifications_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotificationSettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-management"
        ],
        "summary": "Update User Notification Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "update_user_notification_settings_api_v1_users_users__user_id__notifications_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotificationSettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/{user_id}/activity": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get User Activity",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_activity_api_v1_users_users__user_id__activity_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAuditLogResponse"
                  },
                  "title": "Response Get User Activity Api V1 Users Users  User Id  Activity Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/stats": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get User Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439",
        "operationId": "get_user_stats_api_v1_users_users_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/bulk-action": {
      "post": {
        "tags": [
          "user-management"
        ],
        "summary": "Bulk Action Users",
        "description": "\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043c\u0430\u0441\u0441\u043e\u0432\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438",
        "operationId": "bulk_action_users_api_v1_users_users_bulk_action_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBulkActionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBulkActionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/users/export": {
      "post": {
        "tags": [
          "user-management"
        ],
        "summary": "Export Users",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439",
        "operationId": "export_users_api_v1_users_users_export_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/users/export/files": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "List Export Files",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
        "operationId": "list_export_files_api_v1_users_users_export_files_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/users/export/download/{filename}": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Download Export File",
        "description": "\u0421\u043a\u0430\u0447\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
        "operationId": "download_export_file_api_v1_users_users_export_download__filename__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filename"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/export/files/{filename}": {
      "delete": {
        "tags": [
          "user-management"
        ],
        "summary": "Delete Export File",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0444\u0430\u0439\u043b \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
        "operationId": "delete_export_file_api_v1_users_users_export_files__filename__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filename"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/health": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "User Management Health Check",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438",
        "operationId": "user_management_health_check_api_v1_users_users_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/qrcode": {
      "post": {
        "tags": [
          "online-queue-legacy"
        ],
        "summary": "Generate Qr Code Legacy",
        "description": "Legacy endpoint \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 QR \u043a\u043e\u0434\u0430\n\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439: POST /api/online-queue/qrcode?day=YYYY-MM-DD&specialist_id=...",
        "operationId": "generate_qr_code_legacy_api_v1_online_queue_qrcode_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "default": "general",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "expires_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0421\u0440\u043e\u043a \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432 \u0447\u0430\u0441\u0430\u0445",
              "default": 24,
              "title": "Expires Hours"
            },
            "description": "\u0421\u0440\u043e\u043a \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432 \u0447\u0430\u0441\u0430\u0445"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/status": {
      "get": {
        "tags": [
          "online-queue-legacy"
        ],
        "summary": "Get Queue Status Legacy",
        "description": "Legacy endpoint \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "get_queue_status_legacy_api_v1_online_queue_status_get",
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/join": {
      "post": {
        "tags": [
          "online-queue-legacy"
        ],
        "summary": "Join Queue Legacy",
        "description": "Legacy endpoint \u0434\u043b\u044f \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043a \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439: PWA/Telegram \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 { token, phone?, telegram_id? }",
        "operationId": "join_queue_legacy_api_v1_online_queue_join_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Phone"
            }
          },
          {
            "name": "telegram_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Telegram Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queue-auto-close/check-and-close": {
      "post": {
        "tags": [
          "queue-auto-close"
        ],
        "summary": "Check And Close Expired Queues",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0441 \u0438\u0441\u0442\u0435\u043a\u0448\u0438\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "check_and_close_expired_queues_api_v1_admin_queue_auto_close_check_and_close_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Check And Close Expired Queues Api V1 Admin Queue Auto Close Check And Close Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/queue-auto-close/pending-close": {
      "get": {
        "tags": [
          "queue-auto-close"
        ],
        "summary": "Get Queues Pending Close",
        "description": "\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043a\u043e\u0440\u043e \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043a\u0440\u044b\u0442\u044b",
        "operationId": "get_queues_pending_close_api_v1_admin_queue_auto_close_pending_close_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Queues Pending Close Api V1 Admin Queue Auto Close Pending Close Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/queue-auto-close/force-close/{queue_id}": {
      "post": {
        "tags": [
          "queue-auto-close"
        ],
        "summary": "Force Close Queue",
        "description": "\u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u043e\u0447\u0435\u0440\u0435\u0434\u044c",
        "operationId": "force_close_queue_api_v1_admin_queue_auto_close_force_close__queue_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Force Close Queue Api V1 Admin Queue Auto Close Force Close  Queue Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/queue-auto-close/auto-close-status": {
      "get": {
        "tags": [
          "queue-auto-close"
        ],
        "summary": "Get Auto Close Status",
        "description": "\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0430\u0432\u0442\u043e\u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f",
        "operationId": "get_auto_close_status_api_v1_admin_queue_auto_close_auto_close_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Auto Close Status Api V1 Admin Queue Auto Close Auto Close Status Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/cloud-printing/printers": {
      "get": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Get All Printers",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u0432",
        "operationId": "get_all_printers_api_v1_cloud_printing_printers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/cloud-printing/printers/{provider_name}": {
      "get": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Get Printers By Provider",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "get_printers_by_provider_api_v1_cloud_printing_printers__provider_name__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cloud-printing/printers/{provider_name}/{printer_id}": {
      "get": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Get Printer Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0435",
        "operationId": "get_printer_info_api_v1_cloud_printing_printers__provider_name___printer_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Name"
            }
          },
          {
            "name": "printer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Printer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cloud-printing/print": {
      "post": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Print Document",
        "description": "\u041f\u0435\u0447\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430",
        "operationId": "print_document_api_v1_cloud_printing_print_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintJobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/cloud-printing/print/medical": {
      "post": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Print Medical Document",
        "description": "\u041f\u0435\u0447\u0430\u0442\u044c \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430",
        "operationId": "print_medical_document_api_v1_cloud_printing_print_medical_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalDocumentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintJobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/cloud-printing/jobs/{provider_name}/{job_id}/status": {
      "get": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Get Job Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "get_job_status_api_v1_cloud_printing_jobs__provider_name___job_id__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Name"
            }
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cloud-printing/jobs/{provider_name}/{job_id}/cancel": {
      "post": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Cancel Job",
        "description": "\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "cancel_job_api_v1_cloud_printing_jobs__provider_name___job_id__cancel_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Name"
            }
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cloud-printing/quick-print/prescription": {
      "post": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Quick Print Prescription",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442\u0430",
        "operationId": "quick_print_prescription_api_v1_cloud_printing_quick_print_prescription_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Name"
            }
          },
          {
            "name": "printer_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Printer Id"
            }
          },
          {
            "name": "patient_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Name"
            }
          },
          {
            "name": "diagnosis",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Diagnosis"
            }
          },
          {
            "name": "prescription_text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Prescription Text"
            }
          },
          {
            "name": "doctor_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doctor Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cloud-printing/quick-print/ticket": {
      "post": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Quick Print Ticket",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c \u0442\u0430\u043b\u043e\u043d\u0430",
        "operationId": "quick_print_ticket_api_v1_cloud_printing_quick_print_ticket_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Name"
            }
          },
          {
            "name": "printer_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Printer Id"
            }
          },
          {
            "name": "patient_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Name"
            }
          },
          {
            "name": "queue_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Queue Number"
            }
          },
          {
            "name": "doctor_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doctor Name"
            }
          },
          {
            "name": "cabinet",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Cabinet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cloud-printing/test/{provider_name}/{printer_id}": {
      "post": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Test Printer",
        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c",
        "operationId": "test_printer_api_v1_cloud_printing_test__provider_name___printer_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Name"
            }
          },
          {
            "name": "printer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Printer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cloud-printing/statistics": {
      "get": {
        "tags": [
          "cloud-printing"
        ],
        "summary": "Get Printing Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "get_printing_statistics_api_v1_cloud_printing_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/medical-equipment/devices": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get All Devices",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0445 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432",
        "operationId": "get_all_devices_api_v1_medical_equipment_devices_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/medical-equipment/devices/{device_id}": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get Device",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435",
        "operationId": "get_device_api_v1_medical_equipment_devices__device_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/devices/type/{device_type}": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get Devices By Type",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u043e \u0442\u0438\u043f\u0443",
        "operationId": "get_devices_by_type_api_v1_medical_equipment_devices_type__device_type__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/devices/{device_id}/connect": {
      "post": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Connect Device",
        "description": "\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0443",
        "operationId": "connect_device_api_v1_medical_equipment_devices__device_id__connect_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/devices/{device_id}/disconnect": {
      "post": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Disconnect Device",
        "description": "\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "disconnect_device_api_v1_medical_equipment_devices__device_id__disconnect_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/devices/{device_id}/status": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get Device Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "get_device_status_api_v1_medical_equipment_devices__device_id__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/measurements": {
      "post": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Take Measurement",
        "description": "\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0435",
        "operationId": "take_measurement_api_v1_medical_equipment_measurements_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeasurementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get Measurements",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439",
        "operationId": "get_measurements_api_v1_medical_equipment_measurements_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
              "title": "Device Id"
            },
            "description": "ID \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
              "title": "Patient Id"
            },
            "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0422\u0438\u043f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
              "title": "Device Type"
            },
            "description": "\u0422\u0438\u043f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439",
              "default": 100,
              "title": "Limit"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/devices/{device_id}/calibrate": {
      "post": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Calibrate Device",
        "description": "\u041a\u0430\u043b\u0438\u0431\u0440\u043e\u0432\u0430\u0442\u044c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e",
        "operationId": "calibrate_device_api_v1_medical_equipment_devices__device_id__calibrate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/devices/{device_id}/diagnostics": {
      "post": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Run Device Diagnostics",
        "description": "\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "run_device_diagnostics_api_v1_medical_equipment_devices__device_id__diagnostics_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnosticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/devices/{device_id}/config": {
      "put": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Update Device Config",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "update_device_config_api_v1_medical_equipment_devices__device_id__config_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/devices/{device_id}/statistics": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get Device Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
        "operationId": "get_device_statistics_api_v1_medical_equipment_devices__device_id__statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/statistics/overview": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get Equipment Overview",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u0449\u0443\u044e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "get_equipment_overview_api_v1_medical_equipment_statistics_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/medical-equipment/measurements/export": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Export Measurements",
        "description": "\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439",
        "operationId": "export_measurements_api_v1_medical_equipment_measurements_export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv)$",
              "description": "\u0424\u043e\u0440\u043c\u0430\u0442 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430",
              "default": "json",
              "title": "Format"
            },
            "description": "\u0424\u043e\u0440\u043c\u0430\u0442 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430"
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430",
              "title": "Device Id"
            },
            "description": "ID \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/quick-measurement/{device_type}": {
      "post": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Quick Measurement",
        "description": "\u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0435 \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430",
        "operationId": "quick_measurement_api_v1_medical_equipment_quick_measurement__device_type__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
              "title": "Patient Id"
            },
            "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-equipment/device-types": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get Device Types",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432",
        "operationId": "get_device_types_api_v1_medical_equipment_device_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/medical-equipment/connection-types": {
      "get": {
        "tags": [
          "medical-equipment"
        ],
        "summary": "Get Connection Types",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f",
        "operationId": "get_connection_types_api_v1_medical_equipment_connection_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/dynamic-pricing/pricing-rules": {
      "post": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Create Pricing Rule",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0446\u0435\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "create_pricing_rule_api_v1_dynamic_pricing_pricing_rules_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingRuleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Get Pricing Rules",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0430\u0432\u0438\u043b \u0446\u0435\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "get_pricing_rules_api_v1_dynamic_pricing_pricing_rules_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "rule_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PricingRuleType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rule Type"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PricingRuleResponse"
                  },
                  "title": "Response Get Pricing Rules Api V1 Dynamic Pricing Pricing Rules Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dynamic-pricing/pricing-rules/{rule_id}": {
      "get": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Get Pricing Rule",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0446\u0435\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e ID",
        "operationId": "get_pricing_rule_api_v1_dynamic_pricing_pricing_rules__rule_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Update Pricing Rule",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0446\u0435\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "update_pricing_rule_api_v1_dynamic_pricing_pricing_rules__rule_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingRuleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Delete Pricing Rule",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0446\u0435\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "delete_pricing_rule_api_v1_dynamic_pricing_pricing_rules__rule_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dynamic-pricing/calculate-price": {
      "post": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Calculate Price",
        "description": "\u0420\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0446\u0435\u043d\u0443 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u0440\u0430\u0432\u0438\u043b \u0446\u0435\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "calculate_price_api_v1_dynamic_pricing_calculate_price_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceCalculationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/dynamic-pricing/service-packages": {
      "post": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Create Service Package",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0430\u043a\u0435\u0442 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "create_service_package_api_v1_dynamic_pricing_service_packages_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicePackageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePackageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Get Service Packages",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0430\u043a\u0435\u0442\u043e\u0432 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "get_service_packages_api_v1_dynamic_pricing_service_packages_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServicePackageResponse"
                  },
                  "title": "Response Get Service Packages Api V1 Dynamic Pricing Service Packages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dynamic-pricing/service-packages/{package_id}": {
      "get": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Get Service Package",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0430\u043a\u0435\u0442 \u0443\u0441\u043b\u0443\u0433 \u043f\u043e ID",
        "operationId": "get_service_package_api_v1_dynamic_pricing_service_packages__package_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Package Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePackageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Update Service Package",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0430\u043a\u0435\u0442 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "update_service_package_api_v1_dynamic_pricing_service_packages__package_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Package Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicePackageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePackageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Delete Service Package",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0430\u043a\u0435\u0442 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "delete_service_package_api_v1_dynamic_pricing_service_packages__package_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Package Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dynamic-pricing/purchase-package": {
      "post": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Purchase Package",
        "description": "\u041a\u0443\u043f\u0438\u0442\u044c \u043f\u0430\u043a\u0435\u0442 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "purchase_package_api_v1_dynamic_pricing_purchase_package_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackagePurchaseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/dynamic-pricing/update-dynamic-prices": {
      "post": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Update Dynamic Prices",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0446\u0435\u043d\u044b",
        "operationId": "update_dynamic_prices_api_v1_dynamic_pricing_update_dynamic_prices_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/dynamic-pricing/pricing-analytics": {
      "get": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Get Pricing Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043f\u043e \u0446\u0435\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044e",
        "operationId": "get_pricing_analytics_api_v1_dynamic_pricing_pricing_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dynamic-pricing/price-history/{service_id}": {
      "get": {
        "tags": [
          "dynamic-pricing"
        ],
        "summary": "Get Price History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0446\u0435\u043d \u0434\u043b\u044f \u0443\u0441\u043b\u0443\u0433\u0438",
        "operationId": "get_price_history_api_v1_dynamic_pricing_price_history__service_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/invoices": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Create Invoice",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0447\u0435\u0442",
        "operationId": "create_invoice_api_v1_billing_invoices_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "Get Invoices",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0447\u0435\u0442\u043e\u0432",
        "operationId": "get_invoices_api_v1_billing_invoices_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/InvoiceStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "invoice_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/InvoiceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Invoice Type"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceResponse"
                  },
                  "title": "Response Get Invoices Api V1 Billing Invoices Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "Get Invoice",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0447\u0435\u0442 \u043f\u043e ID",
        "operationId": "get_invoice_api_v1_billing_invoices__invoice_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "billing"
        ],
        "summary": "Update Invoice",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0447\u0435\u0442",
        "operationId": "update_invoice_api_v1_billing_invoices__invoice_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "billing"
        ],
        "summary": "Delete Invoice",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0447\u0435\u0442",
        "operationId": "delete_invoice_api_v1_billing_invoices__invoice_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/invoices/{invoice_id}/html": {
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "Get Invoice Html",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c HTML \u0441\u0447\u0435\u0442\u0430",
        "operationId": "get_invoice_html_api_v1_billing_invoices__invoice_id__html_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/invoices/{invoice_id}/send": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Send Invoice",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u0447\u0435\u0442 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0443",
        "operationId": "send_invoice_api_v1_billing_invoices__invoice_id__send_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/payments": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Record Payment",
        "description": "\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u043b\u0430\u0442\u0435\u0436",
        "operationId": "record_payment_api_v1_billing_payments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "Get Payments",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "get_payments_api_v1_billing_payments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "invoice_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Invoice Id"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "payment_method",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PaymentMethod"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Payment Method"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentResponse"
                  },
                  "title": "Response Get Payments Api V1 Billing Payments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/auto-generate/visit/{visit_id}": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Auto Generate Invoice For Visit",
        "description": "\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0447\u0435\u0442 \u0434\u043b\u044f \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "auto_generate_invoice_for_visit_api_v1_billing_auto_generate_visit__visit_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/auto-generate/appointment/{appointment_id}": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Auto Generate Invoice For Appointment",
        "description": "\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0447\u0435\u0442 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "auto_generate_invoice_for_appointment_api_v1_billing_auto_generate_appointment__appointment_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/process-recurring": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Process Recurring Invoices",
        "description": "\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u0447\u0435\u0442\u0430",
        "operationId": "process_recurring_invoices_api_v1_billing_process_recurring_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/billing/send-reminders": {
      "post": {
        "tags": [
          "billing"
        ],
        "summary": "Send Payment Reminders",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u0435",
        "operationId": "send_payment_reminders_api_v1_billing_send_reminders_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/billing/settings": {
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "Get Billing Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u0430",
        "operationId": "get_billing_settings_api_v1_billing_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "billing"
        ],
        "summary": "Update Billing Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u0430",
        "operationId": "update_billing_settings_api_v1_billing_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingSettingsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/billing/analytics": {
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "Get Billing Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043f\u043e \u0441\u0447\u0435\u0442\u0430\u043c",
        "operationId": "get_billing_analytics_api_v1_billing_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/discounts": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Create Discount",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u043a\u0438\u0434\u043a\u0443",
        "operationId": "create_discount_api_v1_discount_benefits_discounts_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Get Discounts",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043a\u0438\u0434\u043e\u043a",
        "operationId": "get_discounts_api_v1_discount_benefits_discounts_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          },
          {
            "name": "service_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Service Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/discounts/{discount_id}": {
      "put": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Update Discount",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043a\u0438\u0434\u043a\u0443",
        "operationId": "update_discount_api_v1_discount_benefits_discounts__discount_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "discount_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Discount Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Delete Discount",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u043a\u0438\u0434\u043a\u0443",
        "operationId": "delete_discount_api_v1_discount_benefits_discounts__discount_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "discount_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Discount Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/discounts/apply": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Apply Discount",
        "description": "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u043a\u0438\u0434\u043a\u0443",
        "operationId": "apply_discount_api_v1_discount_benefits_discounts_apply_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyDiscountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/discount-benefits/benefits": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Create Benefit",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043b\u044c\u0433\u043e\u0442\u0443",
        "operationId": "create_benefit_api_v1_discount_benefits_benefits_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Get Benefits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043b\u044c\u0433\u043e\u0442",
        "operationId": "get_benefits_api_v1_discount_benefits_benefits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/benefits/assign": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Assign Benefit To Patient",
        "description": "\u041d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u043b\u044c\u0433\u043e\u0442\u0443 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0443",
        "operationId": "assign_benefit_to_patient_api_v1_discount_benefits_benefits_assign_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientBenefitCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/discount-benefits/benefits/verify/{patient_benefit_id}": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Verify Patient Benefit",
        "description": "\u0412\u0435\u0440\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u044c\u0433\u043e\u0442\u0443 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "verify_patient_benefit_api_v1_discount_benefits_benefits_verify__patient_benefit_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_benefit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Benefit Id"
            }
          },
          {
            "name": "notes",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/benefits/patient/{patient_id}": {
      "get": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Get Patient Benefits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043b\u044c\u0433\u043e\u0442\u044b \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_patient_benefits_api_v1_discount_benefits_benefits_patient__patient_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/benefits/apply": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Apply Benefit",
        "description": "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043b\u044c\u0433\u043e\u0442\u0443",
        "operationId": "apply_benefit_api_v1_discount_benefits_benefits_apply_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyBenefitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/discount-benefits/loyalty-programs": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Create Loyalty Program",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u043b\u043e\u044f\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
        "operationId": "create_loyalty_program_api_v1_discount_benefits_loyalty_programs_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyProgramCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Get Loyalty Programs",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043b\u043e\u044f\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
        "operationId": "get_loyalty_programs_api_v1_discount_benefits_loyalty_programs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/loyalty-programs/enroll": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Enroll Patient In Loyalty",
        "description": "\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u043b\u043e\u044f\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
        "operationId": "enroll_patient_in_loyalty_api_v1_discount_benefits_loyalty_programs_enroll_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "program_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Program Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/loyalty-programs/earn-points": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Earn Loyalty Points",
        "description": "\u041d\u0430\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0431\u0430\u043b\u043b\u044b \u043b\u043e\u044f\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
        "operationId": "earn_loyalty_points_api_v1_discount_benefits_loyalty_programs_earn_points_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EarnPointsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/discount-benefits/loyalty-programs/redeem-points": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Redeem Loyalty Points",
        "description": "\u0421\u043f\u0438\u0441\u0430\u0442\u044c \u0431\u0430\u043b\u043b\u044b \u043b\u043e\u044f\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
        "operationId": "redeem_loyalty_points_api_v1_discount_benefits_loyalty_programs_redeem_points_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemPointsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/discount-benefits/loyalty-programs/balance/{patient_id}/{program_id}": {
      "get": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Get Loyalty Balance",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u0430\u043b\u0430\u043d\u0441 \u0431\u0430\u043b\u043b\u043e\u0432 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_loyalty_balance_api_v1_discount_benefits_loyalty_programs_balance__patient_id___program_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "program_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Program Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/calculate-discount": {
      "post": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Calculate Total Discount",
        "description": "\u0420\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043e\u0431\u0449\u0443\u044e \u0441\u043a\u0438\u0434\u043a\u0443 \u0434\u043b\u044f \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "calculate_total_discount_api_v1_discount_benefits_calculate_discount_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCalculationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/discount-benefits/analytics/discounts": {
      "get": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Get Discount Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043f\u043e \u0441\u043a\u0438\u0434\u043a\u0430\u043c",
        "operationId": "get_discount_analytics_api_v1_discount_benefits_analytics_discounts_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/analytics/benefits": {
      "get": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Get Benefit Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043f\u043e \u043b\u044c\u0433\u043e\u0442\u0430\u043c",
        "operationId": "get_benefit_analytics_api_v1_discount_benefits_analytics_benefits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/discount-benefits/analytics/loyalty": {
      "get": {
        "tags": [
          "discount-benefits"
        ],
        "summary": "Get Loyalty Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043b\u043e\u044f\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
        "operationId": "get_loyalty_analytics_api_v1_discount_benefits_analytics_loyalty_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "program_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Program Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/graphql": {
      "get": {
        "summary": "Handle Http Get",
        "operationId": "handle_http_get_api_graphql_get",
        "responses": {
          "200": {
            "description": "The GraphiQL integrated development environment.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found if GraphiQL or query via GET are not enabled."
          }
        }
      },
      "post": {
        "summary": "Handle Http Post",
        "operationId": "handle_http_post_api_graphql_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/_routes": {
      "get": {
        "summary": " Routes",
        "operationId": "_routes__routes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AILearningInsightsResponse": {
        "properties": {
          "period": {
            "type": "object",
            "title": "Period"
          },
          "medical_patterns": {
            "type": "object",
            "title": "Medical Patterns"
          },
          "diagnostic_accuracy": {
            "type": "object",
            "title": "Diagnostic Accuracy"
          },
          "treatment_effectiveness": {
            "type": "object",
            "title": "Treatment Effectiveness"
          },
          "patient_outcomes": {
            "type": "object",
            "title": "Patient Outcomes"
          },
          "seasonal_trends": {
            "type": "object",
            "title": "Seasonal Trends"
          },
          "learning_recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Learning Recommendations"
          }
        },
        "type": "object",
        "required": [
          "period",
          "medical_patterns",
          "diagnostic_accuracy",
          "treatment_effectiveness",
          "patient_outcomes",
          "seasonal_trends",
          "learning_recommendations"
        ],
        "title": "AILearningInsightsResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0438\u043d\u0441\u0430\u0439\u0442\u0430\u043c\u0438 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f AI"
      },
      "AIOptimizationResponse": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "models_analyzed": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Models Analyzed"
          },
          "optimizations_applied": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Optimizations Applied"
          },
          "performance_improvements": {
            "type": "object",
            "title": "Performance Improvements"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "models_analyzed",
          "optimizations_applied",
          "performance_improvements",
          "recommendations"
        ],
        "title": "AIOptimizationResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 AI"
      },
      "AIProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "title": "Name",
            "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "display_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Display Name",
            "description": "\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0435 \u0438\u043c\u044f"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "API \u043a\u043b\u044e\u0447"
          },
          "api_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Url",
            "description": "\u0411\u0430\u0437\u043e\u0432\u044b\u0439 URL API"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "\u041c\u043e\u0434\u0435\u043b\u044c AI"
          },
          "temperature": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Temperature",
            "description": "\u0422\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438",
            "default": 0.2
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 8000.0,
            "minimum": 1.0,
            "title": "Max Tokens",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0442\u043e\u043a\u0435\u043d\u043e\u0432",
            "default": 1000
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
            "default": false
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e",
            "default": false
          },
          "capabilities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Capabilities",
            "description": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438: text, vision, ocr"
          },
          "limits": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limits",
            "description": "\u041b\u0438\u043c\u0438\u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f"
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name"
        ],
        "title": "AIProviderCreate"
      },
      "AIProviderOut": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "title": "Name",
            "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "display_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Display Name",
            "description": "\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0435 \u0438\u043c\u044f"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "\u0421\u043a\u0440\u044b\u0442 \u0438\u0437 \u0441\u043e\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438"
          },
          "api_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Url",
            "description": "\u0411\u0430\u0437\u043e\u0432\u044b\u0439 URL API"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "\u041c\u043e\u0434\u0435\u043b\u044c AI"
          },
          "temperature": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Temperature",
            "description": "\u0422\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438",
            "default": 0.2
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 8000.0,
            "minimum": 1.0,
            "title": "Max Tokens",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0442\u043e\u043a\u0435\u043d\u043e\u0432",
            "default": 1000
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
            "default": false
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e",
            "default": false
          },
          "capabilities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Capabilities",
            "description": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438: text, vision, ocr"
          },
          "limits": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limits",
            "description": "\u041b\u0438\u043c\u0438\u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name",
          "id"
        ],
        "title": "AIProviderOut"
      },
      "AIProviderTestRequest": {
        "properties": {
          "test_prompt": {
            "type": "string",
            "title": "Test Prompt",
            "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u043c\u043f\u0442",
            "default": "\u041f\u0440\u0438\u0432\u0435\u0442, \u043a\u0430\u043a \u0434\u0435\u043b\u0430?"
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "description": "\u0422\u0438\u043f \u0437\u0430\u0434\u0430\u0447\u0438: text, vision, ocr",
            "default": "text"
          }
        },
        "type": "object",
        "title": "AIProviderTestRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
      },
      "AIProviderType": {
        "type": "string",
        "enum": [
          "openai",
          "gemini",
          "deepseek",
          "mock"
        ],
        "title": "AIProviderType",
        "description": "\u0422\u0438\u043f\u044b AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432"
      },
      "AIProviderUpdate": {
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key"
          },
          "api_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Url"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 8000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          },
          "is_default": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Default"
          },
          "capabilities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Capabilities"
          },
          "limits": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limits"
          }
        },
        "type": "object",
        "title": "AIProviderUpdate"
      },
      "AIStatsResponse": {
        "properties": {
          "total_requests": {
            "type": "integer",
            "title": "Total Requests"
          },
          "successful_requests": {
            "type": "integer",
            "title": "Successful Requests"
          },
          "failed_requests": {
            "type": "integer",
            "title": "Failed Requests"
          },
          "total_tokens_used": {
            "type": "integer",
            "title": "Total Tokens Used"
          },
          "average_response_time_ms": {
            "type": "number",
            "title": "Average Response Time Ms"
          },
          "cache_hit_rate": {
            "type": "number",
            "title": "Cache Hit Rate"
          },
          "by_provider": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "By Provider"
          },
          "by_task_type": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "By Task Type"
          },
          "by_specialty": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "By Specialty"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End"
          }
        },
        "type": "object",
        "required": [
          "total_requests",
          "successful_requests",
          "failed_requests",
          "total_tokens_used",
          "average_response_time_ms",
          "cache_hit_rate",
          "by_provider",
          "by_task_type",
          "by_specialty",
          "period_start",
          "period_end"
        ],
        "title": "AIStatsResponse",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI"
      },
      "AISystemSettings": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 AI \u0441\u0438\u0441\u0442\u0435\u043c\u0430",
            "default": true
          },
          "default_provider": {
            "type": "string",
            "title": "Default Provider",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e",
            "default": "openai"
          },
          "fallback_chain": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Fallback Chain",
            "description": "\u0426\u0435\u043f\u043e\u0447\u043a\u0430 fallback \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
            "default": [
              "openai",
              "gemini",
              "deepseek"
            ]
          },
          "cache_enabled": {
            "type": "boolean",
            "title": "Cache Enabled",
            "description": "\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043b\u0438 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435",
            "default": true
          },
          "cache_ttl_hours": {
            "type": "integer",
            "maximum": 168.0,
            "minimum": 1.0,
            "title": "Cache Ttl Hours",
            "description": "TTL \u043a\u044d\u0448\u0430 \u0432 \u0447\u0430\u0441\u0430\u0445",
            "default": 24
          },
          "global_limits": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Global Limits",
            "description": "\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043b\u0438\u043c\u0438\u0442\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
            "default": {
              "requests_per_minute": 60,
              "tokens_per_day": 50000,
              "max_file_size_mb": 10
            }
          },
          "require_consent_for_files": {
            "type": "boolean",
            "title": "Require Consent For Files",
            "description": "\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0433\u043b\u0430\u0441\u0438\u0435 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432",
            "default": true
          },
          "anonymize_data": {
            "type": "boolean",
            "title": "Anonymize Data",
            "description": "\u0410\u043d\u043e\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435",
            "default": true
          },
          "audit_all_requests": {
            "type": "boolean",
            "title": "Audit All Requests",
            "description": "\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b",
            "default": true
          }
        },
        "type": "object",
        "title": "AISystemSettings",
        "description": "\u041e\u0431\u0449\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 AI \u0441\u0438\u0441\u0442\u0435\u043c\u044b"
      },
      "AITestResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "response_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Text"
          },
          "response_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time Ms"
          },
          "tokens_used": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens Used"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "provider_info": {
            "type": "object",
            "title": "Provider Info",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "AITestResult",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
      },
      "AIUsageAnalyticsResponse": {
        "properties": {
          "period": {
            "type": "object",
            "title": "Period"
          },
          "usage_statistics": {
            "type": "object",
            "title": "Usage Statistics"
          },
          "function_breakdown": {
            "type": "object",
            "title": "Function Breakdown"
          },
          "user_breakdown": {
            "type": "object",
            "title": "User Breakdown"
          },
          "performance_metrics": {
            "type": "object",
            "title": "Performance Metrics"
          },
          "cost_analysis": {
            "type": "object",
            "title": "Cost Analysis"
          },
          "trends": {
            "type": "object",
            "title": "Trends"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          }
        },
        "type": "object",
        "required": [
          "period",
          "usage_statistics",
          "function_breakdown",
          "user_breakdown",
          "performance_metrics",
          "cost_analysis",
          "trends",
          "recommendations"
        ],
        "title": "AIUsageAnalyticsResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u043e\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI"
      },
      "AIUsageLogOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "provider_id": {
            "type": "integer",
            "title": "Provider Id"
          },
          "task_type": {
            "type": "string",
            "title": "Task Type"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "tokens_used": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens Used"
          },
          "response_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time Ms"
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "cached_response": {
            "type": "boolean",
            "title": "Cached Response"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "provider_id",
          "task_type",
          "success",
          "cached_response"
        ],
        "title": "AIUsageLogOut"
      },
      "AIUsageTrackingRequest": {
        "properties": {
          "ai_function": {
            "type": "string",
            "title": "Ai Function",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 AI \u0444\u0443\u043d\u043a\u0446\u0438\u0438"
          },
          "input_data": {
            "type": "object",
            "title": "Input Data",
            "description": "\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435"
          },
          "output_data": {
            "type": "object",
            "title": "Output Data",
            "description": "\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435"
          },
          "execution_time": {
            "type": "number",
            "title": "Execution Time",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445"
          },
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "\u0423\u0441\u043f\u0435\u0448\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f",
            "default": true
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435"
          }
        },
        "type": "object",
        "required": [
          "ai_function",
          "input_data",
          "output_data",
          "execution_time"
        ],
        "title": "AIUsageTrackingRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI"
      },
      "ActivationActivateIn": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 64,
            "minLength": 8,
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "ActivationActivateIn"
      },
      "ActivationActivateOut": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "machine_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Hash"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "issued",
                  "trial",
                  "active",
                  "expired",
                  "revoked"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "ok"
        ],
        "title": "ActivationActivateOut"
      },
      "ActivationExtendIn": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 64,
            "minLength": 8,
            "title": "Key"
          },
          "days": {
            "type": "integer",
            "maximum": 3650.0,
            "minimum": 1.0,
            "title": "Days"
          }
        },
        "type": "object",
        "required": [
          "key",
          "days"
        ],
        "title": "ActivationExtendIn"
      },
      "ActivationIssueIn": {
        "properties": {
          "days": {
            "type": "integer",
            "maximum": 3650.0,
            "minimum": 1.0,
            "title": "Days",
            "default": 365
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "issued",
                  "trial",
                  "active",
                  "expired",
                  "revoked"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "meta": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "title": "ActivationIssueIn"
      },
      "ActivationIssueOut": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "status": {
            "type": "string",
            "enum": [
              "issued",
              "trial",
              "active",
              "expired",
              "revoked"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "key",
          "status"
        ],
        "title": "ActivationIssueOut"
      },
      "ActivationListOut": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ActivationListRow"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "ActivationListOut"
      },
      "ActivationListRow": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "machine_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Hash"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "status": {
            "type": "string",
            "enum": [
              "issued",
              "trial",
              "active",
              "expired",
              "revoked"
            ],
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "meta": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "key",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "ActivationListRow"
      },
      "ActivationRevokeIn": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 64,
            "minLength": 8,
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "ActivationRevokeIn"
      },
      "ActivationStatusOut": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "issued",
                  "trial",
                  "active",
                  "expired",
                  "revoked"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "machine_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Hash"
          }
        },
        "type": "object",
        "required": [
          "ok"
        ],
        "title": "ActivationStatusOut"
      },
      "ActiveQRTokenResponse": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "specialist_id": {
            "type": "integer",
            "title": "Specialist Id"
          },
          "department": {
            "type": "string",
            "title": "Department"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "expires_at": {
            "type": "string",
            "title": "Expires At"
          },
          "sessions_count": {
            "type": "integer",
            "title": "Sessions Count"
          },
          "successful_joins": {
            "type": "integer",
            "title": "Successful Joins"
          },
          "qr_url": {
            "type": "string",
            "title": "Qr Url"
          }
        },
        "type": "object",
        "required": [
          "token",
          "specialist_id",
          "department",
          "created_at",
          "expires_at",
          "sessions_count",
          "successful_joins",
          "qr_url"
        ],
        "title": "ActiveQRTokenResponse",
        "description": "\u0410\u043a\u0442\u0438\u0432\u043d\u044b\u0439 QR \u0442\u043e\u043a\u0435\u043d"
      },
      "AddUserToGroupRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "AddUserToGroupRequest"
      },
      "AllFreeApprovalRequest": {
        "properties": {
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "action": {
            "type": "string",
            "pattern": "^(approve|reject)$",
            "title": "Action"
          },
          "rejection_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejection Reason"
          }
        },
        "type": "object",
        "required": [
          "visit_id",
          "action"
        ],
        "title": "AllFreeApprovalRequest"
      },
      "AllFreeVisitResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name"
          },
          "patient_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Phone"
          },
          "services": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Services"
          },
          "total_original_amount": {
            "type": "string",
            "title": "Total Original Amount"
          },
          "doctor_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Name"
          },
          "doctor_specialty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Specialty"
          },
          "visit_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Date"
          },
          "visit_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "approval_status": {
            "type": "string",
            "title": "Approval Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "patient_id",
          "patient_name",
          "patient_phone",
          "services",
          "total_original_amount",
          "doctor_name",
          "doctor_specialty",
          "visit_date",
          "visit_time",
          "notes",
          "created_at",
          "approval_status"
        ],
        "title": "AllFreeVisitResponse"
      },
      "AnomalyDetectionRequest": {
        "properties": {
          "dataset": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Dataset"
          },
          "baseline_data": {
            "type": "object",
            "title": "Baseline Data"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "dataset",
          "baseline_data"
        ],
        "title": "AnomalyDetectionRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u043d\u043e\u043c\u0430\u043b\u0438\u0439"
      },
      "ApplyBenefitRequest": {
        "properties": {
          "patient_benefit_id": {
            "type": "integer",
            "title": "Patient Benefit Id"
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id"
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id"
          }
        },
        "type": "object",
        "required": [
          "patient_benefit_id",
          "amount"
        ],
        "title": "ApplyBenefitRequest"
      },
      "ApplyDiscountRequest": {
        "properties": {
          "discount_id": {
            "type": "integer",
            "title": "Discount Id"
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id"
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id"
          }
        },
        "type": "object",
        "required": [
          "discount_id",
          "amount"
        ],
        "title": "ApplyDiscountRequest"
      },
      "Appointment": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "appointment_date": {
            "type": "string",
            "format": "date",
            "title": "Appointment Date"
          },
          "appointment_time": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "type": "string",
            "maxLength": 16,
            "title": "Status",
            "default": "scheduled"
          },
          "visit_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Type",
            "default": "paid"
          },
          "payment_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Type",
            "default": "cash"
          },
          "services": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services"
          },
          "payment_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Amount"
          },
          "payment_currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Currency",
            "default": "UZS"
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider"
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id"
          },
          "payment_webhook_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Webhook Id"
          },
          "payment_processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Processed At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "appointment_date",
          "id",
          "created_at"
        ],
        "title": "Appointment"
      },
      "AppointmentCancelRequest": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "appointment_id"
        ],
        "title": "AppointmentCancelRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0442\u043c\u0435\u043d\u044b \u0437\u0430\u043f\u0438\u0441\u0438"
      },
      "AppointmentCreate": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "appointment_date": {
            "type": "string",
            "format": "date",
            "title": "Appointment Date"
          },
          "appointment_time": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "type": "string",
            "maxLength": 16,
            "title": "Status",
            "default": "scheduled"
          },
          "visit_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Type",
            "default": "paid"
          },
          "payment_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Type",
            "default": "cash"
          },
          "services": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services"
          },
          "payment_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Amount"
          },
          "payment_currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Currency",
            "default": "UZS"
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider"
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id"
          },
          "payment_webhook_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Webhook Id"
          },
          "payment_processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Processed At"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "appointment_date"
        ],
        "title": "AppointmentCreate"
      },
      "AppointmentDoctorInfoResponse": {
        "properties": {
          "doctor": {
            "$ref": "#/components/schemas/DoctorInfoResponse"
          },
          "department": {
            "$ref": "#/components/schemas/DepartmentInfoResponse"
          }
        },
        "type": "object",
        "required": [
          "doctor",
          "department"
        ],
        "title": "AppointmentDoctorInfoResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0440\u0430\u0447\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438"
      },
      "AppointmentDurationRequest": {
        "properties": {
          "appointment_data": {
            "type": "object",
            "title": "Appointment Data"
          },
          "historical_data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Historical Data"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "appointment_data",
          "historical_data"
        ],
        "title": "AppointmentDurationRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0438\u0435\u043c\u0430"
      },
      "AppointmentNotificationRequest": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id",
            "description": "ID \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043b\u0438 \u0432\u0438\u0437\u0438\u0442\u0430"
          },
          "appointment_type": {
            "type": "string",
            "title": "Appointment Type",
            "description": "\u0422\u0438\u043f: appointment \u0438\u043b\u0438 visit"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
            "default": "normal"
          }
        },
        "type": "object",
        "required": [
          "appointment_id",
          "appointment_type"
        ],
        "title": "AppointmentNotificationRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e \u0437\u0430\u043f\u0438\u0441\u0438"
      },
      "AppointmentReportRequest": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "format": {
            "type": "string",
            "pattern": "^(json|csv|excel|pdf)$",
            "title": "Format",
            "default": "json"
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          }
        },
        "type": "object",
        "title": "AppointmentReportRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0442\u0447\u0435\u0442\u0430 \u043f\u043e \u0437\u0430\u043f\u0438\u0441\u044f\u043c"
      },
      "AppointmentRescheduleRequest": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "new_date": {
            "type": "string",
            "title": "New Date"
          },
          "new_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Time"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "appointment_id",
          "new_date"
        ],
        "title": "AppointmentRescheduleRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0430 \u0437\u0430\u043f\u0438\u0441\u0438"
      },
      "AppointmentUpcomingOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "doctor_name": {
            "type": "string",
            "title": "Doctor Name"
          },
          "specialty": {
            "type": "string",
            "title": "Specialty"
          },
          "appointment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Appointment Date"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "clinic_address": {
            "type": "string",
            "title": "Clinic Address"
          }
        },
        "type": "object",
        "required": [
          "id",
          "doctor_name",
          "specialty",
          "appointment_date",
          "status",
          "clinic_address"
        ],
        "title": "AppointmentUpcomingOut",
        "description": "\u041f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0434\u043b\u044f API"
      },
      "AppointmentUpdate": {
        "properties": {
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "appointment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Date"
          },
          "appointment_time": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "visit_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Type"
          },
          "payment_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Type"
          },
          "services": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services"
          },
          "payment_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Amount"
          },
          "payment_currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Currency"
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider"
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id"
          },
          "payment_webhook_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Webhook Id"
          },
          "payment_processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Processed At"
          }
        },
        "type": "object",
        "title": "AppointmentUpdate"
      },
      "AssignRoleRequest": {
        "properties": {
          "role_id": {
            "type": "integer",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "role_id"
        ],
        "title": "AssignRoleRequest"
      },
      "AssignmentStatsResponse": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "confirmed_visits": {
            "type": "integer",
            "title": "Confirmed Visits"
          },
          "processed_visits": {
            "type": "integer",
            "title": "Processed Visits"
          },
          "queue_entries": {
            "type": "integer",
            "title": "Queue Entries"
          },
          "pending_processing": {
            "type": "integer",
            "title": "Pending Processing"
          }
        },
        "type": "object",
        "required": [
          "date",
          "confirmed_visits",
          "processed_visits",
          "queue_entries",
          "pending_processing"
        ],
        "title": "AssignmentStatsResponse"
      },
      "AudioTranscriptionRequest": {
        "properties": {
          "language": {
            "type": "string",
            "title": "Language",
            "default": "ru"
          },
          "medical_context": {
            "type": "boolean",
            "title": "Medical Context",
            "default": true
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AudioTranscriptionRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0442\u0440\u0430\u043d\u0441\u043a\u0440\u0438\u043f\u0446\u0438\u044e \u0430\u0443\u0434\u0438\u043e"
      },
      "AuthStatusResponse": {
        "properties": {
          "authenticated": {
            "type": "boolean",
            "title": "Authenticated"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__authentication__UserProfileResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "session": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserSessionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "two_factor_required": {
            "type": "boolean",
            "title": "Two Factor Required",
            "default": false
          },
          "two_factor_verified": {
            "type": "boolean",
            "title": "Two Factor Verified",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "authenticated"
        ],
        "title": "AuthStatusResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
      },
      "AuthSuccessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "AuthSuccessResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
      },
      "BackupCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "backup_type": {
            "type": "string",
            "title": "Backup Type",
            "description": "full, incremental, differential, manual"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "pending, in_progress, completed, failed, cancelled",
            "default": "pending"
          },
          "file_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "File Path"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          },
          "retention_days": {
            "type": "integer",
            "maximum": 365.0,
            "minimum": 1.0,
            "title": "Retention Days",
            "default": 30
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "backup_type"
        ],
        "title": "BackupCreate"
      },
      "BackupOut": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "backup_type": {
            "type": "string",
            "title": "Backup Type",
            "description": "full, incremental, differential, manual"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "pending, in_progress, completed, failed, cancelled",
            "default": "pending"
          },
          "file_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "File Path"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          },
          "retention_days": {
            "type": "integer",
            "maximum": 365.0,
            "minimum": 1.0,
            "title": "Retention Days",
            "default": 30
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "backup_type",
          "id"
        ],
        "title": "BackupOut"
      },
      "BackupRequest": {
        "properties": {
          "backup_type": {
            "type": "string",
            "pattern": "^(full|database|configuration)$",
            "title": "Backup Type"
          },
          "include_files": {
            "type": "boolean",
            "title": "Include Files",
            "default": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "backup_type"
        ],
        "title": "BackupRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u044d\u043a\u0430\u043f\u0430"
      },
      "BackupResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "backup_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Name"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "BackupResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0431\u044d\u043a\u0430\u043f\u0435"
      },
      "BackupResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "backup_file": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup File"
          },
          "queues_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queues Count"
          },
          "total_entries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Entries"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "BackupResult",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438"
      },
      "BackupUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "backup_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Type",
            "description": "full, incremental, differential, manual"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "pending, in_progress, completed, failed, cancelled"
          },
          "retention_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 365.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Retention Days"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "BackupUpdate"
      },
      "BenefitCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "benefit_type": {
            "$ref": "#/components/schemas/BenefitType"
          },
          "discount_percentage": {
            "type": "number",
            "maximum": 100.0,
            "exclusiveMinimum": 0.0,
            "title": "Discount Percentage"
          },
          "max_discount_amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Discount Amount"
          },
          "requires_document": {
            "type": "boolean",
            "title": "Requires Document",
            "default": true
          },
          "document_types": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Types"
          },
          "age_min": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Min"
          },
          "age_max": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Max"
          },
          "applies_to_services": {
            "type": "boolean",
            "title": "Applies To Services",
            "default": true
          },
          "applies_to_appointments": {
            "type": "boolean",
            "title": "Applies To Appointments",
            "default": true
          },
          "monthly_limit": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Limit"
          },
          "yearly_limit": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Limit"
          }
        },
        "type": "object",
        "required": [
          "name",
          "benefit_type",
          "discount_percentage"
        ],
        "title": "BenefitCreate"
      },
      "BenefitSettingsRequest": {
        "properties": {
          "repeat_visit_days": {
            "type": "integer",
            "maximum": 365.0,
            "minimum": 1.0,
            "title": "Repeat Visit Days",
            "default": 21
          },
          "repeat_visit_discount": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Repeat Visit Discount",
            "default": 0
          },
          "benefit_consultation_free": {
            "type": "boolean",
            "title": "Benefit Consultation Free",
            "default": true
          },
          "all_free_auto_approve": {
            "type": "boolean",
            "title": "All Free Auto Approve",
            "default": false
          }
        },
        "type": "object",
        "title": "BenefitSettingsRequest"
      },
      "BenefitSettingsResponse": {
        "properties": {
          "repeat_visit_days": {
            "type": "integer",
            "title": "Repeat Visit Days"
          },
          "repeat_visit_discount": {
            "type": "integer",
            "title": "Repeat Visit Discount"
          },
          "benefit_consultation_free": {
            "type": "boolean",
            "title": "Benefit Consultation Free"
          },
          "all_free_auto_approve": {
            "type": "boolean",
            "title": "All Free Auto Approve"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "repeat_visit_days",
          "repeat_visit_discount",
          "benefit_consultation_free",
          "all_free_auto_approve",
          "updated_at"
        ],
        "title": "BenefitSettingsResponse"
      },
      "BenefitType": {
        "type": "string",
        "enum": [
          "veteran",
          "disabled",
          "pensioner",
          "student",
          "child",
          "large_family",
          "low_income",
          "employee"
        ],
        "title": "BenefitType",
        "description": "\u0422\u0438\u043f\u044b \u043b\u044c\u0433\u043e\u0442"
      },
      "BillingSettingsUpdate": {
        "properties": {
          "invoice_number_prefix": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number Prefix"
          },
          "default_tax_rate": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Tax Rate"
          },
          "tax_included_in_price": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Included In Price"
          },
          "default_payment_terms_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 365.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Payment Terms Days"
          },
          "overdue_threshold_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 365.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Overdue Threshold Days"
          },
          "auto_generate_invoices": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Generate Invoices"
          },
          "auto_send_invoices": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Send Invoices"
          },
          "auto_send_reminders": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Send Reminders"
          },
          "reminder_days_before": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder Days Before"
          },
          "reminder_days_after": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder Days After"
          },
          "currency_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Code"
          },
          "currency_symbol": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Symbol"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name"
          },
          "company_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Address"
          },
          "company_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Phone"
          },
          "company_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Email"
          },
          "company_website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Website"
          }
        },
        "type": "object",
        "title": "BillingSettingsUpdate"
      },
      "Body_analyze_dermatoscopy_image_api_v1_ai_analyze_dermatoscopy_post": {
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "title": "Image"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "image"
        ],
        "title": "Body_analyze_dermatoscopy_image_api_v1_ai_analyze_dermatoscopy_post"
      },
      "Body_analyze_medical_image_generic_api_v1_ai_analyze_medical_image_post": {
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "title": "Image"
          },
          "image_type": {
            "type": "string",
            "title": "Image Type"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "image",
          "image_type"
        ],
        "title": "Body_analyze_medical_image_generic_api_v1_ai_analyze_medical_image_post"
      },
      "Body_analyze_skin_api_v1_ai_skin_analyze_post": {
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "title": "Image"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "image"
        ],
        "title": "Body_analyze_skin_api_v1_ai_skin_analyze_post"
      },
      "Body_analyze_ultrasound_image_api_v1_ai_analyze_ultrasound_post": {
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "title": "Image"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "image"
        ],
        "title": "Body_analyze_ultrasound_image_api_v1_ai_analyze_ultrasound_post"
      },
      "Body_analyze_xray_image_api_v1_ai_analyze_xray_post": {
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "title": "Image"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "image"
        ],
        "title": "Body_analyze_xray_image_api_v1_ai_analyze_xray_post"
      },
      "Body_auto_fill_emr_fields_api_v1_emr_ai_auto_fill_post": {
        "properties": {
          "template_structure": {
            "type": "object",
            "title": "Template Structure"
          },
          "patient_data": {
            "type": "object",
            "title": "Patient Data"
          }
        },
        "type": "object",
        "required": [
          "template_structure",
          "patient_data"
        ],
        "title": "Body_auto_fill_emr_fields_api_v1_emr_ai_auto_fill_post"
      },
      "Body_auto_fill_emr_fields_api_v1_emr_ai_enhanced_auto_fill_post": {
        "properties": {
          "template_structure": {
            "type": "object",
            "title": "Template Structure"
          },
          "patient_data": {
            "type": "object",
            "title": "Patient Data"
          }
        },
        "type": "object",
        "required": [
          "template_structure",
          "patient_data"
        ],
        "title": "Body_auto_fill_emr_fields_api_v1_emr_ai_enhanced_auto_fill_post"
      },
      "Body_generate_smart_template_api_v1_emr_ai_enhanced_generate_smart_template_post": {
        "properties": {
          "patient_data": {
            "type": "object",
            "title": "Patient Data"
          },
          "doctor_preferences": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Preferences"
          }
        },
        "type": "object",
        "title": "Body_generate_smart_template_api_v1_emr_ai_enhanced_generate_smart_template_post"
      },
      "Body_import_files_api_v1_files_import_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "target_folder_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Folder Id"
          },
          "overwrite_existing": {
            "type": "boolean",
            "title": "Overwrite Existing",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_files_api_v1_files_import_post"
      },
      "Body_login_api_v1_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "format": "password",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_api_v1_auth_login_post"
      },
      "Body_send_bulk_email_api_v1_email_sms_send_bulk_email_post": {
        "properties": {
          "recipients": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Recipients"
          },
          "template_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Data"
          }
        },
        "type": "object",
        "required": [
          "recipients"
        ],
        "title": "Body_send_bulk_email_api_v1_email_sms_send_bulk_email_post"
      },
      "Body_send_bulk_sms_api_v1_email_sms_send_bulk_sms_post": {
        "properties": {
          "recipients": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Recipients"
          },
          "template_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Data"
          }
        },
        "type": "object",
        "required": [
          "recipients"
        ],
        "title": "Body_send_bulk_sms_api_v1_email_sms_send_bulk_sms_post"
      },
      "Body_send_custom_email_api_v1_email_sms_send_custom_email_post": {
        "properties": {
          "template_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Data"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "title": "Body_send_custom_email_api_v1_email_sms_send_custom_email_post"
      },
      "Body_send_payment_confirmation_enhanced_api_v1_email_sms_send_payment_confirmation_enhanced_post": {
        "properties": {
          "payment_data": {
            "type": "object",
            "title": "Payment Data"
          },
          "template_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Data"
          }
        },
        "type": "object",
        "required": [
          "payment_data"
        ],
        "title": "Body_send_payment_confirmation_enhanced_api_v1_email_sms_send_payment_confirmation_enhanced_post"
      },
      "Body_transcribe_audio_api_v1_ai_transcribe_audio_post": {
        "properties": {
          "request": {
            "$ref": "#/components/schemas/AudioTranscriptionRequest"
          },
          "audio_file": {
            "type": "string",
            "format": "binary",
            "title": "Audio File"
          }
        },
        "type": "object",
        "required": [
          "request",
          "audio_file"
        ],
        "title": "Body_transcribe_audio_api_v1_ai_transcribe_audio_post"
      },
      "Body_update_file_api_v1_files__file_id__put": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permission": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "title": "Body_update_file_api_v1_files__file_id__put"
      },
      "Body_upload_avatar_api_v1_mobile_profile_avatar_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_avatar_api_v1_mobile_profile_avatar_post"
      },
      "Body_upload_banner_image_api_v1_admin_display_upload_banner_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_banner_image_api_v1_admin_display_upload_banner_post"
      },
      "Body_upload_clinic_logo_api_v1_admin_clinic_logo_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_clinic_logo_api_v1_admin_clinic_logo_post"
      },
      "Body_upload_file_api_v1_files_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "file_type": {
            "type": "string",
            "title": "File Type"
          },
          "permission": {
            "type": "string",
            "title": "Permission",
            "default": "private"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "emr_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emr Id"
          },
          "folder_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Folder Id"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "file",
          "file_type"
        ],
        "title": "Body_upload_file_api_v1_files_upload_post"
      },
      "Body_upload_file_simple_api_v1_files_upload_simple_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file_simple_api_v1_files_upload_simple_post"
      },
      "Body_upload_template_file_api_v1_print_templates_templates_upload__template_type__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_template_file_api_v1_print_templates_templates_upload__template_type__post"
      },
      "Body_validate_emr_data_api_v1_emr_ai_validate_post": {
        "properties": {
          "emr_data": {
            "type": "object",
            "title": "Emr Data"
          },
          "template_structure": {
            "type": "object",
            "title": "Template Structure"
          }
        },
        "type": "object",
        "required": [
          "emr_data",
          "template_structure"
        ],
        "title": "Body_validate_emr_data_api_v1_emr_ai_validate_post"
      },
      "BookAppointmentRequest": {
        "properties": {
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id",
            "description": "ID \u0432\u0440\u0430\u0447\u0430"
          },
          "appointment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Appointment Date",
            "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0438\u0441\u0438"
          },
          "specialty": {
            "type": "string",
            "title": "Specialty",
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id",
            "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "patient_fio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Fio",
            "description": "\u0424\u0418\u041e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "patient_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Phone",
            "description": "\u0422\u0435\u043b\u0435\u0444\u043e\u043d \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          }
        },
        "type": "object",
        "required": [
          "doctor_id",
          "appointment_date",
          "specialty"
        ],
        "title": "BookAppointmentRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u043a \u0432\u0440\u0430\u0447\u0443 \u0434\u043b\u044f API"
      },
      "BranchCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "code": {
            "type": "string",
            "maxLength": 20,
            "title": "Code"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "manager_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Id"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active, inactive, maintenance, closed",
            "default": "active"
          },
          "timezone": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone",
            "default": "Asia/Tashkent"
          },
          "working_hours": {
            "anyOf": [
              {
                "additionalProperties": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Hours",
            "description": "{\"monday\": {\"start\": \"08:00\", \"end\": \"18:00\"}}"
          },
          "services_available": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services Available",
            "description": "[\"cardiology\", \"dermatology\"]"
          },
          "capacity": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 1.0,
            "title": "Capacity",
            "default": 50
          }
        },
        "type": "object",
        "required": [
          "name",
          "code"
        ],
        "title": "BranchCreate"
      },
      "BranchOut": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "code": {
            "type": "string",
            "maxLength": 20,
            "title": "Code"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "manager_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Id"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active, inactive, maintenance, closed",
            "default": "active"
          },
          "timezone": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone",
            "default": "Asia/Tashkent"
          },
          "working_hours": {
            "anyOf": [
              {
                "additionalProperties": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Hours",
            "description": "{\"monday\": {\"start\": \"08:00\", \"end\": \"18:00\"}}"
          },
          "services_available": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services Available",
            "description": "[\"cardiology\", \"dermatology\"]"
          },
          "capacity": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 1.0,
            "title": "Capacity",
            "default": 50
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "manager": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager"
          },
          "doctors_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctors Count",
            "default": 0
          },
          "equipment_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Equipment Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "name",
          "code",
          "id"
        ],
        "title": "BranchOut"
      },
      "BranchStatsOut": {
        "properties": {
          "branch_id": {
            "type": "integer",
            "title": "Branch Id"
          },
          "branch_name": {
            "type": "string",
            "title": "Branch Name"
          },
          "doctors_count": {
            "type": "integer",
            "title": "Doctors Count"
          },
          "equipment_count": {
            "type": "integer",
            "title": "Equipment Count"
          },
          "active_equipment": {
            "type": "integer",
            "title": "Active Equipment"
          },
          "maintenance_due": {
            "type": "integer",
            "title": "Maintenance Due"
          },
          "last_backup": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Backup"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "branch_id",
          "branch_name",
          "doctors_count",
          "equipment_count",
          "active_equipment",
          "maintenance_due",
          "status"
        ],
        "title": "BranchStatsOut",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0444\u0438\u043b\u0438\u0430\u043b\u0430"
      },
      "BranchUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "manager_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "active, inactive, maintenance, closed"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "working_hours": {
            "anyOf": [
              {
                "additionalProperties": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Hours"
          },
          "services_available": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services Available"
          },
          "capacity": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity"
          }
        },
        "type": "object",
        "title": "BranchUpdate"
      },
      "BulkCabinetUpdateRequest": {
        "properties": {
          "updates": {
            "items": {
              "$ref": "#/components/schemas/QueueCabinetUpdateRequest"
            },
            "type": "array",
            "title": "Updates"
          }
        },
        "type": "object",
        "required": [
          "updates"
        ],
        "title": "BulkCabinetUpdateRequest"
      },
      "BulkNotificationRequest": {
        "properties": {
          "recipient_type": {
            "type": "string",
            "title": "Recipient Type",
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439"
          },
          "recipient_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Recipient Ids",
            "description": "ID \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439"
          },
          "notification_type": {
            "type": "string",
            "title": "Notification Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Channels",
            "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
            "default": [
              "email"
            ]
          },
          "template_data": {
            "type": "object",
            "title": "Template Data",
            "description": "\u041e\u0431\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
            "default": {}
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442",
            "default": "normal"
          }
        },
        "type": "object",
        "required": [
          "recipient_type",
          "recipient_ids",
          "notification_type"
        ],
        "title": "BulkNotificationRequest"
      },
      "BulkToggleRequest": {
        "properties": {
          "flag_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Flag Keys"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "flag_keys",
          "enabled"
        ],
        "title": "BulkToggleRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0444\u043b\u0430\u0433\u043e\u0432"
      },
      "CabinetInfo": {
        "properties": {
          "cabinet_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet Number"
          },
          "cabinet_floor": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet Floor"
          },
          "cabinet_building": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet Building"
          }
        },
        "type": "object",
        "title": "CabinetInfo"
      },
      "CallNextPatientResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "patient": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient"
          },
          "queue_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Length"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "CallNextPatientResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0432\u044b\u0437\u043e\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
      },
      "CartRequest": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "visits": {
            "items": {
              "$ref": "#/components/schemas/VisitRequest"
            },
            "type": "array",
            "title": "Visits"
          },
          "discount_mode": {
            "type": "string",
            "title": "Discount Mode",
            "default": "none"
          },
          "payment_method": {
            "type": "string",
            "title": "Payment Method",
            "default": "cash"
          },
          "all_free": {
            "type": "boolean",
            "title": "All Free",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "visits"
        ],
        "title": "CartRequest"
      },
      "CartResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "visit_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Visit Ids"
          },
          "total_amount": {
            "type": "string",
            "title": "Total Amount"
          },
          "queue_numbers": {
            "additionalProperties": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Queue Numbers"
          },
          "print_tickets": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Print Tickets"
          },
          "created_visits": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created Visits"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "invoice_id",
          "visit_ids",
          "total_amount",
          "queue_numbers",
          "print_tickets"
        ],
        "title": "CartResponse"
      },
      "CleanupResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "cleaned_count": {
            "type": "integer",
            "title": "Cleaned Count"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "cleaned_count",
          "message"
        ],
        "title": "CleanupResponse",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0447\u0438\u0441\u0442\u043a\u0438 \u0438\u0441\u0442\u0435\u043a\u0448\u0438\u0445 \u0442\u043e\u043a\u0435\u043d\u043e\u0432"
      },
      "CleanupResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "deleted_queues": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Queues"
          },
          "deleted_entries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Entries"
          },
          "cutoff_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cutoff Date"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "CleanupResult",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0447\u0438\u0441\u0442\u043a\u0438"
      },
      "ClickConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          },
          "test_mode": {
            "type": "boolean",
            "title": "Test Mode",
            "default": true
          },
          "service_id": {
            "type": "string",
            "title": "Service Id",
            "default": ""
          },
          "merchant_id": {
            "type": "string",
            "title": "Merchant Id",
            "default": ""
          },
          "secret_key": {
            "type": "string",
            "title": "Secret Key",
            "default": ""
          },
          "base_url": {
            "type": "string",
            "title": "Base Url",
            "default": "https://api.click.uz/v2"
          }
        },
        "type": "object",
        "title": "ClickConfig"
      },
      "ClinicSettingsBatch": {
        "properties": {
          "settings": {
            "type": "object",
            "title": "Settings",
            "description": "\u0421\u043b\u043e\u0432\u0430\u0440\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a {key: value}"
          }
        },
        "type": "object",
        "required": [
          "settings"
        ],
        "title": "ClinicSettingsBatch",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a"
      },
      "ClinicSettingsCreate": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 100,
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "ClinicSettingsCreate"
      },
      "ClinicSettingsOut": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 100,
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id"
        ],
        "title": "ClinicSettingsOut"
      },
      "ClinicSettingsUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "ClinicSettingsUpdate"
      },
      "ClinicStatsOut": {
        "properties": {
          "total_branches": {
            "type": "integer",
            "title": "Total Branches"
          },
          "active_branches": {
            "type": "integer",
            "title": "Active Branches"
          },
          "total_doctors": {
            "type": "integer",
            "title": "Total Doctors"
          },
          "active_doctors": {
            "type": "integer",
            "title": "Active Doctors"
          },
          "total_equipment": {
            "type": "integer",
            "title": "Total Equipment"
          },
          "active_equipment": {
            "type": "integer",
            "title": "Active Equipment"
          },
          "equipment_in_maintenance": {
            "type": "integer",
            "title": "Equipment In Maintenance"
          },
          "total_licenses": {
            "type": "integer",
            "title": "Total Licenses"
          },
          "active_licenses": {
            "type": "integer",
            "title": "Active Licenses"
          },
          "expired_licenses": {
            "type": "integer",
            "title": "Expired Licenses"
          },
          "total_backups": {
            "type": "integer",
            "title": "Total Backups"
          },
          "recent_backups": {
            "type": "integer",
            "title": "Recent Backups"
          },
          "system_health": {
            "type": "string",
            "title": "System Health"
          }
        },
        "type": "object",
        "required": [
          "total_branches",
          "active_branches",
          "total_doctors",
          "active_doctors",
          "total_equipment",
          "active_equipment",
          "equipment_in_maintenance",
          "total_licenses",
          "active_licenses",
          "expired_licenses",
          "total_backups",
          "recent_backups",
          "system_health"
        ],
        "title": "ClinicStatsOut",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043a\u043b\u0438\u043d\u0438\u043a\u0438"
      },
      "ClinicalConsistencyRequest": {
        "properties": {
          "diagnosis": {
            "type": "string",
            "title": "Diagnosis"
          },
          "symptoms": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Symptoms"
          },
          "treatment": {
            "type": "object",
            "title": "Treatment"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "diagnosis",
          "symptoms",
          "treatment"
        ],
        "title": "ClinicalConsistencyRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u043a\u043b\u0438\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u043d\u043d\u043e\u0441\u0442\u0438"
      },
      "ClinicalDecisionRequest": {
        "properties": {
          "case_data": {
            "type": "object",
            "title": "Case Data"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "case_data"
        ],
        "title": "ClinicalDecisionRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u043a\u043b\u0438\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0435\u0448\u0435\u043d\u0438\u0439"
      },
      "ComplaintAnalysisRequest": {
        "properties": {
          "complaint": {
            "type": "string",
            "title": "Complaint"
          },
          "patient_age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Age"
          },
          "patient_gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Gender"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "complaint"
        ],
        "title": "ComplaintAnalysisRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0430\u043d\u0430\u043b\u0438\u0437 \u0436\u0430\u043b\u043e\u0431"
      },
      "ComplicationPredictionRequest": {
        "properties": {
          "patient_profile": {
            "type": "object",
            "title": "Patient Profile"
          },
          "procedure_or_condition": {
            "type": "string",
            "title": "Procedure Or Condition"
          },
          "timeline": {
            "type": "string",
            "title": "Timeline"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_profile",
          "procedure_or_condition",
          "timeline"
        ],
        "title": "ComplicationPredictionRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0441\u043b\u043e\u0436\u043d\u0435\u043d\u0438\u0439"
      },
      "ConfirmVisitRequest": {
        "properties": {
          "confirmation_method": {
            "type": "string",
            "pattern": "^(phone|manual)$",
            "title": "Confirmation Method",
            "default": "phone"
          },
          "confirmed_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirmed By"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "ConfirmVisitRequest"
      },
      "ConfirmVisitResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "queue_numbers": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Numbers"
          },
          "print_tickets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Print Tickets"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "visit_id",
          "status"
        ],
        "title": "ConfirmVisitResponse"
      },
      "ConfirmationResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "patient_name": {
            "type": "string",
            "title": "Patient Name"
          },
          "visit_date": {
            "type": "string",
            "title": "Visit Date"
          },
          "visit_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Time"
          },
          "queue_numbers": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Numbers"
          },
          "print_tickets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Print Tickets"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "visit_id",
          "status",
          "patient_name",
          "visit_date",
          "visit_time"
        ],
        "title": "ConfirmationResponse"
      },
      "DataTransferRequest": {
        "properties": {
          "source_user_id": {
            "type": "integer",
            "title": "Source User Id",
            "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f-\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430"
          },
          "target_user_id": {
            "type": "integer",
            "title": "Target User Id",
            "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f-\u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "data_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Types",
            "description": "\u0422\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438",
            "default": [
              "appointments",
              "visits",
              "queue_entries"
            ]
          },
          "confirmation_required": {
            "type": "boolean",
            "title": "Confirmation Required",
            "description": "\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u043e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "source_user_id",
          "target_user_id"
        ],
        "title": "DataTransferRequest"
      },
      "DataTransferResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "transferred": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "Transferred"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "summary": {
            "type": "object",
            "title": "Summary"
          }
        },
        "type": "object",
        "required": [
          "success",
          "transferred",
          "errors",
          "summary"
        ],
        "title": "DataTransferResponse"
      },
      "DentalPriceOverrideRequest": {
        "properties": {
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "new_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "New Price"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          },
          "treatment_completed": {
            "type": "boolean",
            "title": "Treatment Completed",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "visit_id",
          "service_id",
          "new_price",
          "reason"
        ],
        "title": "DentalPriceOverrideRequest"
      },
      "DentalPriceOverrideResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "original_price": {
            "type": "string",
            "title": "Original Price"
          },
          "new_price": {
            "type": "string",
            "title": "New Price"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "treatment_completed": {
            "type": "boolean",
            "title": "Treatment Completed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "visit_id",
          "service_id",
          "original_price",
          "new_price",
          "reason",
          "details",
          "status",
          "treatment_completed",
          "created_at"
        ],
        "title": "DentalPriceOverrideResponse"
      },
      "DepartmentInfoResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "head_doctor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Head Doctor"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "is_active"
        ],
        "title": "DepartmentInfoResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0438"
      },
      "DepartmentListResponse": {
        "properties": {
          "departments": {
            "items": {
              "$ref": "#/components/schemas/DepartmentInfoResponse"
            },
            "type": "array",
            "title": "Departments"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          }
        },
        "type": "object",
        "required": [
          "departments",
          "total_count"
        ],
        "title": "DepartmentListResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439"
      },
      "DeviceConfigRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "connection_params": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Params"
          },
          "maintenance_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maintenance Date"
          }
        },
        "type": "object",
        "title": "DeviceConfigRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430"
      },
      "DeviceCreateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "device_fingerprint": {
            "type": "string",
            "title": "Device Fingerprint"
          },
          "user_agent": {
            "type": "string",
            "title": "User Agent"
          },
          "ip_address": {
            "type": "string",
            "title": "Ip Address"
          }
        },
        "type": "object",
        "required": [
          "device_fingerprint",
          "user_agent",
          "ip_address"
        ],
        "title": "DeviceCreateRequest"
      },
      "DeviceInfo": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "browser": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser"
          },
          "os": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Os"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "ip_address": {
            "type": "string",
            "title": "Ip Address"
          },
          "user_agent": {
            "type": "string",
            "title": "User Agent"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_used": {
            "type": "string",
            "format": "date-time",
            "title": "Last Used"
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "device_type",
          "ip_address",
          "user_agent",
          "created_at",
          "last_used"
        ],
        "title": "DeviceInfo"
      },
      "DiagnosticsResponse": {
        "properties": {
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "tests": {
            "type": "object",
            "title": "Tests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "device_id",
          "timestamp",
          "success",
          "tests"
        ],
        "title": "DiagnosticsResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438"
      },
      "DifferentialDiagnosisRequest": {
        "properties": {
          "symptoms": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Symptoms"
          },
          "patient_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Info"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "symptoms"
        ],
        "title": "DifferentialDiagnosisRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0434\u0438\u0444\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0443"
      },
      "DiscountCalculationRequest": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "service_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Service Ids"
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "service_ids",
          "amount"
        ],
        "title": "DiscountCalculationRequest"
      },
      "DiscountCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "discount_type": {
            "$ref": "#/components/schemas/app__models__discount_benefits__DiscountType"
          },
          "value": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Value"
          },
          "min_amount": {
            "type": "number",
            "minimum": 0.0,
            "title": "Min Amount",
            "default": 0
          },
          "max_discount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Discount"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "usage_limit": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage Limit"
          },
          "applies_to_services": {
            "type": "boolean",
            "title": "Applies To Services",
            "default": true
          },
          "applies_to_appointments": {
            "type": "boolean",
            "title": "Applies To Appointments",
            "default": true
          },
          "applies_to_packages": {
            "type": "boolean",
            "title": "Applies To Packages",
            "default": true
          },
          "can_combine_with_others": {
            "type": "boolean",
            "title": "Can Combine With Others",
            "default": false
          },
          "priority": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Priority",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "name",
          "discount_type",
          "value"
        ],
        "title": "DiscountCreate"
      },
      "DiscountUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "value": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "min_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Amount"
          },
          "max_discount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Discount"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "usage_limit": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage Limit"
          },
          "applies_to_services": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applies To Services"
          },
          "applies_to_appointments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applies To Appointments"
          },
          "applies_to_packages": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applies To Packages"
          },
          "can_combine_with_others": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Combine With Others"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          }
        },
        "type": "object",
        "title": "DiscountUpdate"
      },
      "DoctorCreate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "specialty": {
            "type": "string",
            "maxLength": 100,
            "title": "Specialty",
            "description": "cardiology, dermatology, stomatology"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "price_default": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Default"
          },
          "start_number_online": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Start Number Online",
            "default": 1
          },
          "max_online_per_day": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Max Online Per Day",
            "default": 15
          },
          "auto_close_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Close Time",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0430\u0432\u0442\u043e\u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "specialty"
        ],
        "title": "DoctorCreate"
      },
      "DoctorInfoResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "specialization": {
            "type": "string",
            "title": "Specialization"
          },
          "department": {
            "type": "string",
            "title": "Department"
          },
          "department_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Id"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule"
          },
          "experience_years": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experience Years"
          }
        },
        "type": "object",
        "required": [
          "id",
          "full_name",
          "specialization",
          "department",
          "is_active"
        ],
        "title": "DoctorInfoResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0432\u0440\u0430\u0447\u0435"
      },
      "DoctorListResponse": {
        "properties": {
          "doctors": {
            "items": {
              "$ref": "#/components/schemas/DoctorInfoResponse"
            },
            "type": "array",
            "title": "Doctors"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          }
        },
        "type": "object",
        "required": [
          "doctors",
          "total_count"
        ],
        "title": "DoctorListResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0440\u0430\u0447\u0435\u0439"
      },
      "DoctorQueueLimit": {
        "properties": {
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id",
            "description": "ID \u0432\u0440\u0430\u0447\u0430"
          },
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day",
            "description": "\u0414\u0430\u0442\u0430"
          },
          "max_online_entries": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Max Online Entries",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u043e\u043d\u043b\u0430\u0439\u043d \u0437\u0430\u043f\u0438\u0441\u0435\u0439",
            "default": 15
          }
        },
        "type": "object",
        "required": [
          "doctor_id",
          "day"
        ],
        "title": "DoctorQueueLimit",
        "description": "\u0418\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u0438\u043c\u0438\u0442 \u0434\u043b\u044f \u0432\u0440\u0430\u0447\u0430"
      },
      "DoctorSearchRequest": {
        "properties": {
          "specialty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "available_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Available Date"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "title": "DoctorSearchRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u043e\u0438\u0441\u043a\u0430 \u0432\u0440\u0430\u0447\u0435\u0439"
      },
      "DoctorUpdate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "price_default": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Default"
          },
          "start_number_online": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Number Online"
          },
          "max_online_per_day": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Online Per Day"
          },
          "auto_close_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Close Time"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          }
        },
        "type": "object",
        "title": "DoctorUpdate"
      },
      "DocumentationGapsRequest": {
        "properties": {
          "patient_record": {
            "type": "object",
            "title": "Patient Record"
          },
          "required_fields": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required Fields"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_record",
          "required_fields"
        ],
        "title": "DocumentationGapsRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438"
      },
      "DocumentationImprovementsRequest": {
        "properties": {
          "record_analysis": {
            "type": "object",
            "title": "Record Analysis"
          },
          "best_practices": {
            "type": "object",
            "title": "Best Practices"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "record_analysis",
          "best_practices"
        ],
        "title": "DocumentationImprovementsRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438"
      },
      "DocumentationQualityRequest": {
        "properties": {
          "medical_records": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Medical Records"
          },
          "quality_standards": {
            "type": "object",
            "title": "Quality Standards"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "medical_records",
          "quality_standards"
        ],
        "title": "DocumentationQualityRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0430\u043d\u0430\u043b\u0438\u0437 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438"
      },
      "DrugAlternativesRequest": {
        "properties": {
          "medication": {
            "type": "string",
            "title": "Medication"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "patient_profile": {
            "type": "object",
            "title": "Patient Profile"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "medication",
          "reason",
          "patient_profile"
        ],
        "title": "DrugAlternativesRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u043e\u0432"
      },
      "DrugDosageRequest": {
        "properties": {
          "medication": {
            "type": "string",
            "title": "Medication"
          },
          "patient_profile": {
            "type": "object",
            "title": "Patient Profile"
          },
          "indication": {
            "type": "string",
            "title": "Indication"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "medication",
          "patient_profile",
          "indication"
        ],
        "title": "DrugDosageRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0440\u0430\u0441\u0447\u0435\u0442 \u0434\u043e\u0437\u0438\u0440\u043e\u0432\u043a\u0438 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u0430"
      },
      "DrugInteractionRequest": {
        "properties": {
          "medications": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Medications"
          },
          "patient_profile": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Profile"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "medications"
        ],
        "title": "DrugInteractionRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043b\u0435\u043a\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439"
      },
      "DrugSafetyRequest": {
        "properties": {
          "medication": {
            "type": "object",
            "title": "Medication"
          },
          "patient_profile": {
            "type": "object",
            "title": "Patient Profile"
          },
          "conditions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Conditions"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "medication",
          "patient_profile",
          "conditions"
        ],
        "title": "DrugSafetyRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0430\u043d\u0430\u043b\u0438\u0437 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u0430"
      },
      "ECGInterpretRequest": {
        "properties": {
          "parameters": {
            "type": "object",
            "title": "Parameters"
          },
          "auto_interpretation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Interpretation"
          },
          "patient_age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Age"
          },
          "patient_gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Gender"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "parameters"
        ],
        "title": "ECGInterpretRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u044e \u042d\u041a\u0413"
      },
      "EMR": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "complaints": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Complaints"
          },
          "anamnesis": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Anamnesis"
          },
          "examination": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Examination"
          },
          "diagnosis": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Diagnosis"
          },
          "icd10": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Icd10"
          },
          "recommendations": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendations"
          },
          "procedures": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Procedures"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "vital_signs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vital Signs"
          },
          "lab_results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lab Results"
          },
          "imaging_results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imaging Results"
          },
          "medications": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Medications"
          },
          "allergies": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allergies"
          },
          "family_history": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family History"
          },
          "social_history": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Social History"
          },
          "ai_suggestions": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Suggestions"
          },
          "ai_confidence": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Confidence"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "saved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saved At"
          }
        },
        "type": "object",
        "required": [
          "appointment_id",
          "id",
          "created_at"
        ],
        "title": "EMR",
        "description": "\u041f\u043e\u043b\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 EMR"
      },
      "EMRCreate": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "complaints": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Complaints"
          },
          "anamnesis": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Anamnesis"
          },
          "examination": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Examination"
          },
          "diagnosis": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Diagnosis"
          },
          "icd10": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Icd10"
          },
          "recommendations": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendations"
          },
          "procedures": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Procedures"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "vital_signs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vital Signs"
          },
          "lab_results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lab Results"
          },
          "imaging_results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imaging Results"
          },
          "medications": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Medications"
          },
          "allergies": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allergies"
          },
          "family_history": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family History"
          },
          "social_history": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Social History"
          },
          "ai_suggestions": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Suggestions"
          },
          "ai_confidence": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Confidence"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "appointment_id"
        ],
        "title": "EMRCreate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f EMR"
      },
      "EMRTemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "specialty": {
            "type": "string",
            "maxLength": 100,
            "title": "Specialty"
          },
          "template_structure": {
            "type": "object",
            "title": "Template Structure"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "name",
          "specialty",
          "template_structure"
        ],
        "title": "EMRTemplateCreate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430 EMR"
      },
      "EMRTemplateField": {
        "properties": {
          "field_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Field Name"
          },
          "field_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Field Type"
          },
          "label": {
            "type": "string",
            "maxLength": 255,
            "title": "Label"
          },
          "placeholder": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Placeholder"
          },
          "required": {
            "type": "boolean",
            "title": "Required",
            "default": false
          },
          "options": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options"
          },
          "validation_rules": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validation Rules"
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "field_name",
          "field_type",
          "label"
        ],
        "title": "EMRTemplateField",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043f\u043e\u043b\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430 EMR"
      },
      "EMRTemplateOut": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "specialty": {
            "type": "string",
            "maxLength": 100,
            "title": "Specialty"
          },
          "template_structure": {
            "type": "object",
            "title": "Template Structure"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "specialty",
          "template_structure",
          "id",
          "version",
          "created_at"
        ],
        "title": "EMRTemplateOut",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 EMR"
      },
      "EMRTemplateSection": {
        "properties": {
          "section_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Section Name"
          },
          "section_title": {
            "type": "string",
            "maxLength": 255,
            "title": "Section Title"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/EMRTemplateField"
            },
            "type": "array",
            "title": "Fields"
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "default": 0
          },
          "collapsible": {
            "type": "boolean",
            "title": "Collapsible",
            "default": false
          },
          "required": {
            "type": "boolean",
            "title": "Required",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "section_name",
          "section_title",
          "fields"
        ],
        "title": "EMRTemplateSection",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u0435\u043a\u0446\u0438\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 EMR"
      },
      "EMRTemplateStructure": {
        "properties": {
          "template_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Template Name"
          },
          "specialty": {
            "type": "string",
            "maxLength": 100,
            "title": "Specialty"
          },
          "sections": {
            "items": {
              "$ref": "#/components/schemas/EMRTemplateSection"
            },
            "type": "array",
            "title": "Sections"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "template_name",
          "specialty",
          "sections"
        ],
        "title": "EMRTemplateStructure",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0448\u0430\u0431\u043b\u043e\u043d\u0430 EMR"
      },
      "EMRTemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "template_structure": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Structure"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          }
        },
        "type": "object",
        "title": "EMRTemplateUpdate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430 EMR"
      },
      "EMRVersionOut": {
        "properties": {
          "emr_id": {
            "type": "integer",
            "title": "Emr Id"
          },
          "version_data": {
            "type": "object",
            "title": "Version Data"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          },
          "change_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Change Type"
          },
          "change_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Description"
          },
          "changed_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changed By"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "emr_id",
          "version_data",
          "version_number",
          "change_type",
          "id",
          "created_at"
        ],
        "title": "EMRVersionOut",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0435\u0440\u0441\u0438\u0438 EMR"
      },
      "EarnPointsRequest": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "program_id": {
            "type": "integer",
            "title": "Program Id"
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id"
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "program_id",
          "amount"
        ],
        "title": "EarnPointsRequest"
      },
      "EmailVerificationConfirmRequest": {
        "properties": {
          "token": {
            "type": "string",
            "maxLength": 64,
            "minLength": 32,
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "EmailVerificationConfirmRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 email"
      },
      "EmergencyContactRequest": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "location": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "EmergencyContactRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u044d\u043a\u0441\u0442\u0440\u0435\u043d\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438"
      },
      "EntityExtractionRequest": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "EntityExtractionRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0445 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439"
      },
      "EquipmentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "equipment_type": {
            "type": "string",
            "title": "Equipment Type",
            "description": "medical, diagnostic, surgical, laboratory, office, it"
          },
          "branch_id": {
            "type": "integer",
            "title": "Branch Id"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active, inactive, maintenance, broken, replaced",
            "default": "active"
          },
          "purchase_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purchase Date",
            "description": "YYYY-MM-DD"
          },
          "warranty_expires": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warranty Expires",
            "description": "YYYY-MM-DD"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "supplier": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "equipment_type",
          "branch_id"
        ],
        "title": "EquipmentCreate"
      },
      "EquipmentMaintenanceCreate": {
        "properties": {
          "maintenance_type": {
            "type": "string",
            "title": "Maintenance Type",
            "description": "preventive, repair, calibration"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "performed_by": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Performed By"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "maintenance_date": {
            "type": "string",
            "format": "date-time",
            "title": "Maintenance Date"
          },
          "next_maintenance": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Maintenance"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "equipment_id": {
            "type": "integer",
            "title": "Equipment Id"
          }
        },
        "type": "object",
        "required": [
          "maintenance_type",
          "maintenance_date",
          "equipment_id"
        ],
        "title": "EquipmentMaintenanceCreate"
      },
      "EquipmentMaintenanceOut": {
        "properties": {
          "maintenance_type": {
            "type": "string",
            "title": "Maintenance Type",
            "description": "preventive, repair, calibration"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "performed_by": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Performed By"
          },
          "cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "maintenance_date": {
            "type": "string",
            "format": "date-time",
            "title": "Maintenance Date"
          },
          "next_maintenance": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Maintenance"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "equipment_id": {
            "type": "integer",
            "title": "Equipment Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "maintenance_type",
          "maintenance_date",
          "id",
          "equipment_id"
        ],
        "title": "EquipmentMaintenanceOut"
      },
      "EquipmentOut": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "equipment_type": {
            "type": "string",
            "title": "Equipment Type",
            "description": "medical, diagnostic, surgical, laboratory, office, it"
          },
          "branch_id": {
            "type": "integer",
            "title": "Branch Id"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active, inactive, maintenance, broken, replaced",
            "default": "active"
          },
          "purchase_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purchase Date",
            "description": "YYYY-MM-DD"
          },
          "warranty_expires": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warranty Expires",
            "description": "YYYY-MM-DD"
          },
          "cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "supplier": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "last_maintenance": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Maintenance"
          },
          "next_maintenance": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Maintenance"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "branch": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch"
          },
          "maintenance_records_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maintenance Records Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "name",
          "equipment_type",
          "branch_id",
          "id"
        ],
        "title": "EquipmentOut"
      },
      "EquipmentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "equipment_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Equipment Type",
            "description": "medical, diagnostic, surgical, laboratory, office, it"
          },
          "branch_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch Id"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "active, inactive, maintenance, broken, replaced"
          },
          "purchase_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purchase Date",
            "description": "YYYY-MM-DD"
          },
          "warranty_expires": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warranty Expires",
            "description": "YYYY-MM-DD"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "supplier": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "EquipmentUpdate"
      },
      "FCMNotificationRequest": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "user_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ids"
          },
          "device_tokens": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Tokens"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image"
          },
          "click_action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Click Action"
          },
          "sound": {
            "type": "string",
            "title": "Sound",
            "default": "default"
          },
          "badge": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Badge"
          }
        },
        "type": "object",
        "required": [
          "title",
          "body"
        ],
        "title": "FCMNotificationRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 FCM \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
      },
      "FCMTokenRequest": {
        "properties": {
          "device_token": {
            "type": "string",
            "title": "Device Token"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type",
            "default": "web"
          },
          "device_info": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Info"
          }
        },
        "type": "object",
        "required": [
          "device_token"
        ],
        "title": "FCMTokenRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e FCM \u0442\u043e\u043a\u0435\u043d\u0430"
      },
      "FCMTopicNotificationRequest": {
        "properties": {
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image"
          },
          "condition": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Condition"
          }
        },
        "type": "object",
        "required": [
          "topic",
          "title",
          "body"
        ],
        "title": "FCMTopicNotificationRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043f\u043e \u0442\u043e\u043f\u0438\u043a\u0443"
      },
      "FCMTopicRequest": {
        "properties": {
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "device_tokens": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Tokens"
          }
        },
        "type": "object",
        "required": [
          "topic",
          "device_tokens"
        ],
        "title": "FCMTopicRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0442\u043e\u043f\u0438\u043a\u0430\u043c\u0438 FCM"
      },
      "FeatureFlagCreateRequest": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[a-z0-9_]+$",
            "title": "Key"
          },
          "name": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          },
          "config": {
            "type": "object",
            "title": "Config"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "title": "Category",
            "default": "general"
          },
          "environment": {
            "type": "string",
            "pattern": "^(production|staging|development|all)$",
            "title": "Environment",
            "default": "all"
          }
        },
        "type": "object",
        "required": [
          "key",
          "name"
        ],
        "title": "FeatureFlagCreateRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u0430"
      },
      "FeatureFlagHistoryResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "flag_key": {
            "type": "string",
            "title": "Flag Key"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "old_value": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Value"
          },
          "new_value": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Value"
          },
          "changed_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changed By"
          },
          "changed_at": {
            "type": "string",
            "title": "Changed At"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "id",
          "flag_key",
          "action",
          "changed_at"
        ],
        "title": "FeatureFlagHistoryResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0438\u0441\u0442\u043e\u0440\u0438\u0435\u0439 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0444\u043b\u0430\u0433\u0430"
      },
      "FeatureFlagResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "config": {
            "type": "object",
            "title": "Config"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "environment": {
            "type": "string",
            "title": "Environment"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "key",
          "name",
          "enabled",
          "config",
          "category",
          "environment",
          "created_at"
        ],
        "title": "FeatureFlagResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u0435"
      },
      "FeatureFlagStatusResponse": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "config": {
            "type": "object",
            "title": "Config"
          }
        },
        "type": "object",
        "required": [
          "key",
          "enabled",
          "config"
        ],
        "title": "FeatureFlagStatusResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c \u0444\u043b\u0430\u0433\u0430"
      },
      "FeatureFlagToggleRequest": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "FeatureFlagToggleRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0444\u043b\u0430\u0433\u0430"
      },
      "FeatureFlagUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          },
          "config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "environment": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(production|staging|development|all)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Environment"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "title": "FeatureFlagUpdateRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u0438\u0447\u0430-\u0444\u043b\u0430\u0433\u0430"
      },
      "FeedbackRequest": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "rating": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "message"
        ],
        "title": "FeedbackRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438"
      },
      "FileExportRequest": {
        "properties": {
          "file_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "File Ids"
          },
          "format": {
            "type": "string",
            "pattern": "^(zip|tar|tar.gz)$",
            "title": "Format"
          },
          "include_metadata": {
            "type": "boolean",
            "title": "Include Metadata",
            "default": true
          },
          "include_versions": {
            "type": "boolean",
            "title": "Include Versions",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "file_ids",
          "format"
        ],
        "title": "FileExportRequest"
      },
      "FileExportResponse": {
        "properties": {
          "export_id": {
            "type": "string",
            "title": "Export Id"
          },
          "download_url": {
            "type": "string",
            "title": "Download Url"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          }
        },
        "type": "object",
        "required": [
          "export_id",
          "download_url",
          "expires_at"
        ],
        "title": "FileExportResponse"
      },
      "FileImportResponse": {
        "properties": {
          "import_id": {
            "type": "string",
            "title": "Import Id"
          },
          "processed_files": {
            "type": "integer",
            "title": "Processed Files"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          }
        },
        "type": "object",
        "required": [
          "import_id",
          "processed_files",
          "success"
        ],
        "title": "FileImportResponse"
      },
      "FileList": {
        "properties": {
          "files": {
            "items": {
              "$ref": "#/components/schemas/FileOut"
            },
            "type": "array",
            "title": "Files"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "files",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "FileList"
      },
      "FileOut": {
        "properties": {
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename"
          },
          "original_filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Original Filename"
          },
          "file_type": {
            "$ref": "#/components/schemas/FileTypeEnum"
          },
          "mime_type": {
            "type": "string",
            "maxLength": 100,
            "title": "Mime Type"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "permission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilePermissionEnum"
              }
            ],
            "default": "private"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "emr_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emr Id"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "file_path": {
            "type": "string",
            "title": "File Path"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "file_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Hash"
          },
          "status": {
            "$ref": "#/components/schemas/FileStatusEnum"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "original_filename",
          "file_type",
          "mime_type",
          "id",
          "file_path",
          "file_size",
          "file_hash",
          "status",
          "metadata",
          "owner_id",
          "created_at",
          "updated_at"
        ],
        "title": "FileOut"
      },
      "FilePermissionEnum": {
        "type": "string",
        "enum": [
          "public",
          "private",
          "restricted",
          "confidential"
        ],
        "title": "FilePermissionEnum"
      },
      "FileSearchRequest": {
        "properties": {
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "file_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FileTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "permission": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FilePermissionEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "emr_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emr Id"
          },
          "folder_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Folder Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "date_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date From"
          },
          "date_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date To"
          },
          "size_min": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size Min"
          },
          "size_max": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size Max"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page",
            "default": 1
          },
          "size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Size",
            "default": 20
          }
        },
        "type": "object",
        "title": "FileSearchRequest"
      },
      "FileSearchResponse": {
        "properties": {
          "files": {
            "items": {
              "$ref": "#/components/schemas/FileOut"
            },
            "type": "array",
            "title": "Files"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          },
          "facets": {
            "type": "object",
            "title": "Facets",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "files",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "FileSearchResponse"
      },
      "FileShareCreate": {
        "properties": {
          "shared_with_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shared With User Id"
          },
          "shared_with_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Shared With Email"
          },
          "permission": {
            "$ref": "#/components/schemas/FilePermissionEnum"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "permission"
        ],
        "title": "FileShareCreate"
      },
      "FileShareOut": {
        "properties": {
          "shared_with_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shared With User Id"
          },
          "shared_with_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Shared With Email"
          },
          "permission": {
            "$ref": "#/components/schemas/FilePermissionEnum"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "file_id": {
            "type": "integer",
            "title": "File Id"
          },
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_by": {
            "type": "integer",
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "permission",
          "id",
          "file_id",
          "access_token",
          "is_active",
          "created_by",
          "created_at"
        ],
        "title": "FileShareOut"
      },
      "FileStats": {
        "properties": {
          "total_files": {
            "type": "integer",
            "title": "Total Files"
          },
          "total_size": {
            "type": "integer",
            "title": "Total Size"
          },
          "files_by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Files By Type"
          },
          "files_by_permission": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Files By Permission"
          },
          "recent_uploads": {
            "items": {
              "$ref": "#/components/schemas/FileOut"
            },
            "type": "array",
            "title": "Recent Uploads"
          },
          "storage_usage": {
            "type": "object",
            "title": "Storage Usage"
          }
        },
        "type": "object",
        "required": [
          "total_files",
          "total_size",
          "files_by_type",
          "files_by_permission",
          "recent_uploads",
          "storage_usage"
        ],
        "title": "FileStats"
      },
      "FileStatusEnum": {
        "type": "string",
        "enum": [
          "uploading",
          "processing",
          "ready",
          "error",
          "deleted",
          "archived"
        ],
        "title": "FileStatusEnum"
      },
      "FileTypeEnum": {
        "type": "string",
        "enum": [
          "document",
          "image",
          "video",
          "audio",
          "archive",
          "medical_record",
          "lab_result",
          "xray",
          "prescription",
          "report",
          "backup",
          "other"
        ],
        "title": "FileTypeEnum"
      },
      "FileUploadRequest": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "content"
        ],
        "title": "FileUploadRequest"
      },
      "FinancialReportRequest": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "format": {
            "type": "string",
            "pattern": "^(json|csv|excel|pdf)$",
            "title": "Format",
            "default": "json"
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          }
        },
        "type": "object",
        "title": "FinancialReportRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u0433\u043e \u043e\u0442\u0447\u0435\u0442\u0430"
      },
      "Gender": {
        "type": "string",
        "enum": [
          "male",
          "female",
          "other"
        ],
        "title": "Gender",
        "description": "\u041f\u043e\u043b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "GroupPermissionsSummaryResponse": {
        "properties": {
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "group_name": {
            "type": "string",
            "title": "Group Name"
          },
          "group_display_name": {
            "type": "string",
            "title": "Group Display Name"
          },
          "group_type": {
            "type": "string",
            "title": "Group Type"
          },
          "users_count": {
            "type": "integer",
            "title": "Users Count"
          },
          "roles": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Roles"
          },
          "permissions_count": {
            "type": "integer",
            "title": "Permissions Count"
          },
          "permissions_by_category": {
            "additionalProperties": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Permissions By Category"
          },
          "total_permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Total Permissions"
          }
        },
        "type": "object",
        "required": [
          "group_id",
          "group_name",
          "group_display_name",
          "group_type",
          "users_count",
          "roles",
          "permissions_count",
          "permissions_by_category",
          "total_permissions"
        ],
        "title": "GroupPermissionsSummaryResponse"
      },
      "GroupResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "group_type": {
            "type": "string",
            "title": "Group Type"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "users_count": {
            "type": "integer",
            "title": "Users Count"
          },
          "roles_count": {
            "type": "integer",
            "title": "Roles Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "display_name",
          "description",
          "group_type",
          "is_active",
          "users_count",
          "roles_count"
        ],
        "title": "GroupResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ICD10SuggestRequest": {
        "properties": {
          "symptoms": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Symptoms"
          },
          "diagnosis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Diagnosis"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "symptoms"
        ],
        "title": "ICD10SuggestRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u041c\u041a\u0411-10"
      },
      "InsightsReportRequest": {
        "properties": {
          "analytics_data": {
            "type": "object",
            "title": "Analytics Data"
          },
          "report_type": {
            "type": "string",
            "title": "Report Type"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "analytics_data",
          "report_type"
        ],
        "title": "InsightsReportRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u043e\u0442\u0447\u0435\u0442\u0430 \u0441 \u0438\u043d\u0441\u0430\u0439\u0442\u0430\u043c\u0438"
      },
      "IntegrityCheckResult": {
        "properties": {
          "passed": {
            "type": "boolean",
            "title": "Passed"
          },
          "checks": {
            "type": "object",
            "title": "Checks"
          },
          "checked_at": {
            "type": "string",
            "title": "Checked At"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "passed",
          "checks",
          "checked_at"
        ],
        "title": "IntegrityCheckResult",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0441\u0442\u0438"
      },
      "InvoiceCreate": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "invoice_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceType"
              }
            ],
            "default": "standard"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemCreate"
            },
            "type": "array",
            "minItems": 1,
            "title": "Items"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "payment_terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Terms"
          },
          "due_days": {
            "type": "integer",
            "maximum": 365.0,
            "minimum": 1.0,
            "title": "Due Days",
            "default": 30
          },
          "auto_send": {
            "type": "boolean",
            "title": "Auto Send",
            "default": false
          },
          "send_reminders": {
            "type": "boolean",
            "title": "Send Reminders",
            "default": true
          },
          "is_recurring": {
            "type": "boolean",
            "title": "Is Recurring",
            "default": false
          },
          "recurrence_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RecurrenceType"
              },
              {
                "type": "null"
              }
            ]
          },
          "recurrence_interval": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Recurrence Interval",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "items"
        ],
        "title": "InvoiceCreate"
      },
      "InvoiceItemCreate": {
        "properties": {
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Description"
          },
          "quantity": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "minimum": 0.0,
            "title": "Unit Price"
          },
          "discount_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Discount Rate",
            "default": 0
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "description",
          "quantity",
          "unit_price"
        ],
        "title": "InvoiceItemCreate"
      },
      "InvoicePaymentRequest": {
        "properties": {
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "default": "click"
          },
          "return_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Url"
          },
          "cancel_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancel Url"
          }
        },
        "type": "object",
        "required": [
          "invoice_id"
        ],
        "title": "InvoicePaymentRequest"
      },
      "InvoicePaymentResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "payment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Url"
          },
          "provider_payment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Payment Id"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "InvoicePaymentResponse"
      },
      "InvoiceResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number"
          },
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "invoice_type": {
            "type": "string",
            "title": "Invoice Type"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "subtotal": {
            "type": "number",
            "title": "Subtotal"
          },
          "tax_rate": {
            "type": "number",
            "title": "Tax Rate"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "discount_amount": {
            "type": "number",
            "title": "Discount Amount"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "paid_amount": {
            "type": "number",
            "title": "Paid Amount"
          },
          "balance": {
            "type": "number",
            "title": "Balance"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time",
            "title": "Issue Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "paid_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid Date"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "is_auto_generated": {
            "type": "boolean",
            "title": "Is Auto Generated"
          },
          "is_recurring": {
            "type": "boolean",
            "title": "Is Recurring"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "invoice_number",
          "patient_id",
          "visit_id",
          "appointment_id",
          "invoice_type",
          "status",
          "subtotal",
          "tax_rate",
          "tax_amount",
          "discount_amount",
          "total_amount",
          "paid_amount",
          "balance",
          "issue_date",
          "due_date",
          "paid_date",
          "description",
          "notes",
          "is_auto_generated",
          "is_recurring",
          "created_at"
        ],
        "title": "InvoiceResponse"
      },
      "InvoiceStatus": {
        "type": "string",
        "enum": [
          "draft",
          "pending",
          "paid",
          "partially_paid",
          "overdue",
          "cancelled",
          "refunded"
        ],
        "title": "InvoiceStatus",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441\u044b \u0441\u0447\u0435\u0442\u043e\u0432"
      },
      "InvoiceType": {
        "type": "string",
        "enum": [
          "standard",
          "recurring",
          "advance",
          "correction"
        ],
        "title": "InvoiceType",
        "description": "\u0422\u0438\u043f\u044b \u0441\u0447\u0435\u0442\u043e\u0432"
      },
      "InvoiceUpdate": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "payment_terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Terms"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "auto_send": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Send"
          },
          "send_reminders": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Send Reminders"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "InvoiceUpdate"
      },
      "JSONLoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "remember_me": {
            "type": "boolean",
            "title": "Remember Me",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "JSONLoginRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f JSON \u0432\u0445\u043e\u0434\u0430"
      },
      "JSONLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "user": {
            "type": "object",
            "title": "User"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "user"
        ],
        "title": "JSONLoginResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 JSON \u0432\u0445\u043e\u0434\u0430"
      },
      "JobStatusResponse": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "provider_name": {
            "type": "string",
            "title": "Provider Name"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "status",
          "provider_name"
        ],
        "title": "JobStatusResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u044f"
      },
      "JoinSessionCompleteRequest": {
        "properties": {
          "session_token": {
            "type": "string",
            "title": "Session Token",
            "description": "\u0422\u043e\u043a\u0435\u043d \u0441\u0435\u0441\u0441\u0438\u0438"
          },
          "patient_name": {
            "type": "string",
            "maxLength": 200,
            "minLength": 2,
            "title": "Patient Name",
            "description": "\u0424\u0418\u041e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$",
            "title": "Phone",
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id",
            "description": "Telegram ID"
          }
        },
        "type": "object",
        "required": [
          "session_token",
          "patient_name",
          "phone"
        ],
        "title": "JoinSessionCompleteRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f"
      },
      "JoinSessionCompleteResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "queue_number": {
            "type": "integer",
            "title": "Queue Number"
          },
          "queue_length": {
            "type": "integer",
            "title": "Queue Length"
          },
          "estimated_wait_time": {
            "type": "integer",
            "title": "Estimated Wait Time"
          },
          "specialist_name": {
            "type": "string",
            "title": "Specialist Name"
          },
          "department": {
            "type": "string",
            "title": "Department"
          }
        },
        "type": "object",
        "required": [
          "success",
          "queue_number",
          "queue_length",
          "estimated_wait_time",
          "specialist_name",
          "department"
        ],
        "title": "JoinSessionCompleteResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f"
      },
      "JoinSessionStartRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "QR \u0442\u043e\u043a\u0435\u043d"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "JoinSessionStartRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043d\u0430\u0447\u0430\u043b\u043e \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f"
      },
      "JoinSessionStartResponse": {
        "properties": {
          "session_token": {
            "type": "string",
            "title": "Session Token"
          },
          "expires_at": {
            "type": "string",
            "title": "Expires At"
          },
          "queue_info": {
            "type": "object",
            "title": "Queue Info"
          }
        },
        "type": "object",
        "required": [
          "session_token",
          "expires_at",
          "queue_info"
        ],
        "title": "JoinSessionStartResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0441\u0435\u0441\u0441\u0438\u0438"
      },
      "LabInterpretRequest": {
        "properties": {
          "results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Results"
          },
          "patient_age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Age"
          },
          "patient_gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Gender"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "LabInterpretRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0446\u0438\u044e \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432"
      },
      "LabResultOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "test_name": {
            "type": "string",
            "title": "Test Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "reference_range": {
            "type": "string",
            "title": "Reference Range"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "result_date": {
            "type": "string",
            "format": "date-time",
            "title": "Result Date"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "test_name",
          "result_value",
          "reference_range",
          "unit",
          "result_date",
          "status"
        ],
        "title": "LabResultOut",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432 \u0434\u043b\u044f API"
      },
      "LicenseActivationCreate": {
        "properties": {
          "machine_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Id"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 45
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active, expired, suspended, pending",
            "default": "active"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "license_id": {
            "type": "integer",
            "title": "License Id"
          }
        },
        "type": "object",
        "required": [
          "license_id"
        ],
        "title": "LicenseActivationCreate"
      },
      "LicenseActivationOut": {
        "properties": {
          "machine_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Id"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 45
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active, expired, suspended, pending",
            "default": "active"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "license_id": {
            "type": "integer",
            "title": "License Id"
          },
          "activated_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activated By"
          },
          "activation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activation Date"
          }
        },
        "type": "object",
        "required": [
          "id",
          "license_id"
        ],
        "title": "LicenseActivationOut"
      },
      "LicenseCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "license_type": {
            "type": "string",
            "title": "License Type",
            "description": "software, medical, business, data"
          },
          "license_key": {
            "type": "string",
            "maxLength": 255,
            "title": "License Key"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active, expired, suspended, pending",
            "default": "active"
          },
          "issued_by": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Issued By"
          },
          "issued_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issued Date",
            "description": "\u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438"
          },
          "expires_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires Date",
            "description": "\u0414\u0430\u0442\u0430 \u0438\u0441\u0442\u0435\u0447\u0435\u043d\u0438\u044f"
          },
          "renewal_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Renewal Date",
            "description": "\u0414\u0430\u0442\u0430 \u043f\u0440\u043e\u0434\u043b\u0435\u043d\u0438\u044f"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"
          },
          "restrictions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Restrictions",
            "description": "\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "license_type",
          "license_key"
        ],
        "title": "LicenseCreate"
      },
      "LicenseOut": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "license_type": {
            "type": "string",
            "title": "License Type",
            "description": "software, medical, business, data"
          },
          "license_key": {
            "type": "string",
            "maxLength": 255,
            "title": "License Key"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active, expired, suspended, pending",
            "default": "active"
          },
          "issued_by": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Issued By"
          },
          "issued_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issued Date",
            "description": "\u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438"
          },
          "expires_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires Date",
            "description": "\u0414\u0430\u0442\u0430 \u0438\u0441\u0442\u0435\u0447\u0435\u043d\u0438\u044f"
          },
          "renewal_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Renewal Date",
            "description": "\u0414\u0430\u0442\u0430 \u043f\u0440\u043e\u0434\u043b\u0435\u043d\u0438\u044f"
          },
          "cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"
          },
          "restrictions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Restrictions",
            "description": "\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "activations_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activations Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "name",
          "license_type",
          "license_key",
          "id"
        ],
        "title": "LicenseOut"
      },
      "LicenseUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "license_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type",
            "description": "software, medical, business, data"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "active, expired, suspended, pending"
          },
          "issued_by": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Issued By"
          },
          "issued_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issued Date",
            "description": "\u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438"
          },
          "expires_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires Date",
            "description": "\u0414\u0430\u0442\u0430 \u0438\u0441\u0442\u0435\u0447\u0435\u043d\u0438\u044f"
          },
          "renewal_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Renewal Date",
            "description": "\u0414\u0430\u0442\u0430 \u043f\u0440\u043e\u0434\u043b\u0435\u043d\u0438\u044f"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features"
          },
          "restrictions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Restrictions"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "LicenseUpdate"
      },
      "LifestyleModificationsRequest": {
        "properties": {
          "patient_profile": {
            "type": "object",
            "title": "Patient Profile"
          },
          "conditions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Conditions"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_profile",
          "conditions"
        ],
        "title": "LifestyleModificationsRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u043e\u0431\u0440\u0430\u0437\u0443 \u0436\u0438\u0437\u043d\u0438"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Username"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 6,
            "title": "Password"
          },
          "remember_me": {
            "type": "boolean",
            "title": "Remember Me",
            "description": "\u0417\u0430\u043f\u043e\u043c\u043d\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
            "default": false
          },
          "device_fingerprint": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Fingerprint"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u0445\u043e\u0434\u0430"
      },
      "LoginResponse": {
        "properties": {
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "user": {
            "type": "object",
            "title": "User"
          },
          "requires_2fa": {
            "type": "boolean",
            "title": "Requires 2Fa",
            "default": false
          },
          "two_factor_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Factor Method"
          },
          "pending_2fa_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pending 2Fa Token"
          }
        },
        "type": "object",
        "required": [
          "expires_in",
          "user"
        ],
        "title": "LoginResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0432\u0445\u043e\u0434\u0430"
      },
      "LogoutRequest": {
        "properties": {
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "logout_all_devices": {
            "type": "boolean",
            "title": "Logout All Devices",
            "default": false
          }
        },
        "type": "object",
        "title": "LogoutRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u044b\u0445\u043e\u0434\u0430"
      },
      "LogoutResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "LogoutResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0432\u044b\u0445\u043e\u0434\u0430"
      },
      "LoyaltyProgramCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "points_per_ruble": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Points Per Ruble",
            "default": 1.0
          },
          "min_purchase_for_points": {
            "type": "number",
            "minimum": 0.0,
            "title": "Min Purchase For Points",
            "default": 0
          },
          "ruble_per_point": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Ruble Per Point",
            "default": 1.0
          },
          "min_points_to_redeem": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Min Points To Redeem",
            "default": 100
          },
          "max_points_per_purchase": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Points Per Purchase"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "LoyaltyProgramCreate"
      },
      "ManualAssignmentRequest": {
        "properties": {
          "visit_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Visit Ids",
            "description": "\u0421\u043f\u0438\u0441\u043e\u043a ID \u0432\u0438\u0437\u0438\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438"
          },
          "force": {
            "type": "boolean",
            "title": "Force",
            "description": "\u041f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u043d\u043e\u043c\u0435\u0440\u0430",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "visit_ids"
        ],
        "title": "ManualAssignmentRequest"
      },
      "MeasurementRequest": {
        "properties": {
          "device_id": {
            "type": "string",
            "title": "Device Id",
            "description": "ID \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id",
            "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          }
        },
        "type": "object",
        "required": [
          "device_id"
        ],
        "title": "MeasurementRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0435"
      },
      "MeasurementResponse": {
        "properties": {
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "measurements": {
            "type": "object",
            "title": "Measurements"
          },
          "raw_data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw Data"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "device_id",
          "device_type",
          "timestamp",
          "measurements"
        ],
        "title": "MeasurementResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f"
      },
      "MedicalDocumentRequest": {
        "properties": {
          "provider_name": {
            "type": "string",
            "title": "Provider Name",
            "description": "\u0418\u043c\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u0435\u0447\u0430\u0442\u0438"
          },
          "printer_id": {
            "type": "string",
            "title": "Printer Id",
            "description": "ID \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "document_type": {
            "type": "string",
            "pattern": "^(prescription|receipt|ticket|report)$",
            "title": "Document Type"
          },
          "patient_data": {
            "type": "object",
            "title": "Patient Data",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "template_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Data",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          }
        },
        "type": "object",
        "required": [
          "provider_name",
          "printer_id",
          "document_type",
          "patient_data"
        ],
        "title": "MedicalDocumentRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0435\u0447\u0430\u0442\u044c \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430"
      },
      "MedicalSummaryRequest": {
        "properties": {
          "consultation_text": {
            "type": "string",
            "title": "Consultation Text"
          },
          "patient_history": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient History"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "consultation_text"
        ],
        "title": "MedicalSummaryRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0440\u0435\u0437\u044e\u043c\u0435"
      },
      "MedicalTrendsRequest": {
        "properties": {
          "medical_data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Medical Data"
          },
          "time_period": {
            "type": "string",
            "title": "Time Period"
          },
          "analysis_type": {
            "type": "string",
            "title": "Analysis Type"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "medical_data",
          "time_period",
          "analysis_type"
        ],
        "title": "MedicalTrendsRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0430\u043d\u0430\u043b\u0438\u0437 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u0438\u0445 \u0442\u0440\u0435\u043d\u0434\u043e\u0432"
      },
      "MedicationItem": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "dosage": {
            "type": "string",
            "maxLength": 100,
            "title": "Dosage"
          },
          "frequency": {
            "type": "string",
            "maxLength": 100,
            "title": "Frequency"
          },
          "duration": {
            "type": "string",
            "maxLength": 100,
            "title": "Duration"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Quantity",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "name",
          "dosage",
          "frequency",
          "duration"
        ],
        "title": "MedicationItem",
        "description": "\u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u0430 \u0432 \u0440\u0435\u0446\u0435\u043f\u0442\u0435"
      },
      "MedicationOptimizationRequest": {
        "properties": {
          "current_medications": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Current Medications"
          },
          "patient_profile": {
            "type": "object",
            "title": "Patient Profile"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "current_medications",
          "patient_profile",
          "condition"
        ],
        "title": "MedicationOptimizationRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044e \u043c\u0435\u0434\u0438\u043a\u0430\u043c\u0435\u043d\u0442\u043e\u0437\u043d\u043e\u0439 \u0442\u0435\u0440\u0430\u043f\u0438\u0438"
      },
      "MigrationResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "migrated_records": {
            "type": "integer",
            "title": "Migrated Records"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "integrity_check": {
            "type": "object",
            "title": "Integrity Check"
          }
        },
        "type": "object",
        "required": [
          "success",
          "migrated_records",
          "errors",
          "integrity_check"
        ],
        "title": "MigrationResult",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438"
      },
      "MinimalLoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "remember_me": {
            "type": "boolean",
            "title": "Remember Me",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "MinimalLoginRequest",
        "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430"
      },
      "MinimalLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "user": {
            "type": "object",
            "title": "User"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in",
          "user"
        ],
        "title": "MinimalLoginResponse",
        "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430"
      },
      "MobileAppointmentDetailOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id"
          },
          "doctor_name": {
            "type": "string",
            "title": "Doctor Name"
          },
          "specialty": {
            "type": "string",
            "title": "Specialty"
          },
          "appointment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Appointment Date"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "complaint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complaint"
          },
          "diagnosis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Diagnosis"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "patient_id",
          "doctor_id",
          "doctor_name",
          "specialty",
          "appointment_date",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "MobileAppointmentDetailOut",
        "description": "\u0414\u0435\u0442\u0430\u043b\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0434\u043b\u044f API"
      },
      "MobileLoginRequest": {
        "properties": {
          "phone": {
            "type": "string",
            "title": "Phone",
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "\u041f\u0430\u0440\u043e\u043b\u044c (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e)"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id",
            "description": "Telegram ID"
          },
          "device_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Token",
            "description": "\u0422\u043e\u043a\u0435\u043d \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043b\u044f push-\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"
          }
        },
        "type": "object",
        "required": [
          "phone"
        ],
        "title": "MobileLoginRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0439 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
      },
      "MobileLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token",
            "description": "JWT \u0442\u043e\u043a\u0435\u043d"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "description": "\u0422\u0438\u043f \u0442\u043e\u043a\u0435\u043d\u0430",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0436\u0438\u0437\u043d\u0438 \u0442\u043e\u043a\u0435\u043d\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445"
          },
          "user": {
            "type": "object",
            "title": "User",
            "description": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions",
            "description": "\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in",
          "user"
        ],
        "title": "MobileLoginResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0439 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
      },
      "MobileQuickStats": {
        "properties": {
          "total_appointments": {
            "type": "integer",
            "title": "Total Appointments",
            "default": 0
          },
          "upcoming_appointments": {
            "type": "integer",
            "title": "Upcoming Appointments",
            "default": 0
          },
          "completed_appointments": {
            "type": "integer",
            "title": "Completed Appointments",
            "default": 0
          },
          "total_spent": {
            "type": "number",
            "title": "Total Spent",
            "default": 0.0
          },
          "last_visit": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Visit"
          },
          "favorite_doctor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Favorite Doctor"
          },
          "pending_payments": {
            "type": "integer",
            "title": "Pending Payments",
            "default": 0
          }
        },
        "type": "object",
        "title": "MobileQuickStats",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"
      },
      "MonitoringThresholds": {
        "properties": {
          "cpu_usage": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Usage"
          },
          "memory_usage": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Usage"
          },
          "disk_usage": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Disk Usage"
          },
          "response_time": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "database_connections": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Connections"
          }
        },
        "type": "object",
        "title": "MonitoringThresholds",
        "description": "\u041f\u043e\u0440\u043e\u0433\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430"
      },
      "MorningAssignmentResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "processed_visits": {
            "type": "integer",
            "title": "Processed Visits"
          },
          "assigned_queues": {
            "type": "integer",
            "title": "Assigned Queues"
          },
          "errors": {
            "items": {},
            "type": "array",
            "title": "Errors"
          },
          "date": {
            "type": "string",
            "title": "Date"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "processed_visits",
          "assigned_queues",
          "errors",
          "date"
        ],
        "title": "MorningAssignmentResponse"
      },
      "MortalityRiskRequest": {
        "properties": {
          "patient_data": {
            "type": "object",
            "title": "Patient Data"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "scoring_system": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scoring System"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_data",
          "condition"
        ],
        "title": "MortalityRiskRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0440\u0430\u0441\u0447\u0435\u0442 \u0440\u0438\u0441\u043a\u0430 \u0441\u043c\u0435\u0440\u0442\u043d\u043e\u0441\u0442\u0438"
      },
      "NotificationHistory": {
        "properties": {
          "recipient_type": {
            "type": "string",
            "maxLength": 20,
            "title": "Recipient Type",
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "recipient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Id",
            "description": "ID \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "recipient_contact": {
            "type": "string",
            "maxLength": 255,
            "title": "Recipient Contact",
            "description": "\u041a\u043e\u043d\u0442\u0430\u043a\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "notification_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Notification Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channel": {
            "type": "string",
            "maxLength": 20,
            "title": "Channel",
            "description": "\u041a\u0430\u043d\u0430\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "ID \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "\u0422\u0435\u043c\u0430"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435"
          },
          "status": {
            "type": "string",
            "maxLength": 20,
            "title": "Status",
            "description": "\u0421\u0442\u0430\u0442\u0443\u0441",
            "default": "pending"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435"
          },
          "related_entity_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Type",
            "description": "\u0422\u0438\u043f \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438"
          },
          "related_entity_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Id",
            "description": "ID \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438"
          },
          "notification_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Metadata",
            "description": "\u041c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At"
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At"
          }
        },
        "type": "object",
        "required": [
          "recipient_type",
          "recipient_contact",
          "notification_type",
          "channel",
          "content",
          "id",
          "created_at",
          "sent_at",
          "delivered_at"
        ],
        "title": "NotificationHistory"
      },
      "NotificationResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "sent_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent Count"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "NotificationResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
      },
      "NotificationSettings": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id",
            "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
          },
          "user_type": {
            "type": "string",
            "maxLength": 20,
            "title": "User Type",
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
          },
          "email_enabled": {
            "type": "boolean",
            "title": "Email Enabled",
            "description": "Email \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b",
            "default": true
          },
          "sms_enabled": {
            "type": "boolean",
            "title": "Sms Enabled",
            "description": "SMS \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b",
            "default": true
          },
          "telegram_enabled": {
            "type": "boolean",
            "title": "Telegram Enabled",
            "description": "Telegram \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b",
            "default": false
          },
          "appointment_reminders": {
            "type": "boolean",
            "title": "Appointment Reminders",
            "description": "\u041d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043e \u0437\u0430\u043f\u0438\u0441\u044f\u0445",
            "default": true
          },
          "payment_notifications": {
            "type": "boolean",
            "title": "Payment Notifications",
            "description": "\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e \u043f\u043b\u0430\u0442\u0435\u0436\u0430\u0445",
            "default": true
          },
          "queue_updates": {
            "type": "boolean",
            "title": "Queue Updates",
            "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
            "default": true
          },
          "system_alerts": {
            "type": "boolean",
            "title": "System Alerts",
            "description": "\u0421\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f",
            "default": false
          },
          "reminder_hours_before": {
            "type": "integer",
            "maximum": 168.0,
            "minimum": 1.0,
            "title": "Reminder Hours Before",
            "description": "\u0417\u0430 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u043e\u0432 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0442\u044c",
            "default": 24
          },
          "notification_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Email",
            "description": "Email \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"
          },
          "notification_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Phone",
            "description": "\u0422\u0435\u043b\u0435\u0444\u043e\u043d \u0434\u043b\u044f SMS"
          },
          "telegram_chat_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Chat Id",
            "description": "Telegram chat ID"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "user_type",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationSettings"
      },
      "NotificationSettingsRequest": {
        "properties": {
          "push_enabled": {
            "type": "boolean",
            "title": "Push Enabled",
            "default": true
          },
          "sms_enabled": {
            "type": "boolean",
            "title": "Sms Enabled",
            "default": true
          },
          "email_enabled": {
            "type": "boolean",
            "title": "Email Enabled",
            "default": true
          },
          "appointment_reminders": {
            "type": "boolean",
            "title": "Appointment Reminders",
            "default": true
          },
          "lab_results": {
            "type": "boolean",
            "title": "Lab Results",
            "default": true
          },
          "promotions": {
            "type": "boolean",
            "title": "Promotions",
            "default": false
          }
        },
        "type": "object",
        "title": "NotificationSettingsRequest",
        "description": "\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"
      },
      "NotificationSettingsUpdate": {
        "properties": {
          "email_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Enabled"
          },
          "sms_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Enabled"
          },
          "telegram_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Enabled"
          },
          "appointment_reminders": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Reminders"
          },
          "payment_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Notifications"
          },
          "queue_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Updates"
          },
          "system_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Alerts"
          },
          "reminder_hours_before": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 168.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder Hours Before"
          },
          "notification_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Email"
          },
          "notification_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Phone"
          },
          "telegram_chat_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Chat Id"
          }
        },
        "type": "object",
        "title": "NotificationSettingsUpdate"
      },
      "NotificationTemplate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "type": {
            "type": "string",
            "maxLength": 50,
            "title": "Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channel": {
            "type": "string",
            "maxLength": 20,
            "title": "Channel",
            "description": "\u041a\u0430\u043d\u0430\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "\u0422\u0435\u043c\u0430 (\u0434\u043b\u044f email)"
          },
          "template": {
            "type": "string",
            "title": "Template",
            "description": "\u0428\u0430\u0431\u043b\u043e\u043d \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "channel",
          "template",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationTemplate"
      },
      "NotificationTemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "type": {
            "type": "string",
            "maxLength": 50,
            "title": "Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channel": {
            "type": "string",
            "maxLength": 20,
            "title": "Channel",
            "description": "\u041a\u0430\u043d\u0430\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "\u0422\u0435\u043c\u0430 (\u0434\u043b\u044f email)"
          },
          "template": {
            "type": "string",
            "title": "Template",
            "description": "\u0428\u0430\u0431\u043b\u043e\u043d \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "channel",
          "template"
        ],
        "title": "NotificationTemplateCreate"
      },
      "NotificationTemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "NotificationTemplateUpdate"
      },
      "OptimalSlotsRequest": {
        "properties": {
          "doctor_profile": {
            "type": "object",
            "title": "Doctor Profile"
          },
          "patient_requirements": {
            "type": "object",
            "title": "Patient Requirements"
          },
          "available_slots": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Available Slots"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "doctor_profile",
          "patient_requirements",
          "available_slots"
        ],
        "title": "OptimalSlotsRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u043b\u043e\u0442\u043e\u0432"
      },
      "OutcomePredictionRequest": {
        "properties": {
          "patient_data": {
            "type": "object",
            "title": "Patient Data"
          },
          "historical_outcomes": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Historical Outcomes"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_data",
          "historical_outcomes"
        ],
        "title": "OutcomePredictionRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0441\u0445\u043e\u0434\u043e\u0432"
      },
      "PWAConfirmRequest": {
        "properties": {
          "token": {
            "type": "string",
            "minLength": 10,
            "title": "Token"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "PWAConfirmRequest"
      },
      "PackagePurchaseRequest": {
        "properties": {
          "package_id": {
            "type": "integer",
            "title": "Package Id"
          },
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          }
        },
        "type": "object",
        "required": [
          "package_id",
          "patient_id"
        ],
        "title": "PackagePurchaseRequest"
      },
      "PasswordChangeRequest": {
        "properties": {
          "current_password": {
            "type": "string",
            "minLength": 1,
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "PasswordChangeRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0441\u043c\u0435\u043d\u044b \u043f\u0430\u0440\u043e\u043b\u044f"
      },
      "PasswordResetInitiateRequest": {
        "properties": {
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "PasswordResetInitiateRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u0446\u0438\u044e \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f"
      },
      "PasswordResetRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PasswordResetRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f"
      },
      "Patient": {
        "properties": {
          "last_name": {
            "type": "string",
            "maxLength": 128,
            "title": "Last Name"
          },
          "first_name": {
            "type": "string",
            "maxLength": 128,
            "title": "First Name"
          },
          "middle_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "sex": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Sex"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "doc_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Number"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 512
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "last_name",
          "first_name",
          "id",
          "created_at"
        ],
        "title": "Patient"
      },
      "PatientBenefitCreate": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "benefit_id": {
            "type": "integer",
            "title": "Benefit Id"
          },
          "document_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Number"
          },
          "document_issued_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Issued Date"
          },
          "document_expiry_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Expiry Date"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "benefit_id"
        ],
        "title": "PatientBenefitCreate"
      },
      "PatientCreate": {
        "properties": {
          "last_name": {
            "type": "string",
            "maxLength": 128,
            "title": "Last Name"
          },
          "first_name": {
            "type": "string",
            "maxLength": 128,
            "title": "First Name"
          },
          "middle_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "sex": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Sex"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "doc_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Number"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 512
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "type": "object",
        "required": [
          "last_name",
          "first_name"
        ],
        "title": "PatientCreate"
      },
      "PatientProfileOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "fio": {
            "type": "string",
            "title": "Fio"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "birth_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Year"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "fio",
          "phone",
          "created_at"
        ],
        "title": "PatientProfileOut",
        "description": "\u041f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0434\u043b\u044f API"
      },
      "PatientReportRequest": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "format": {
            "type": "string",
            "pattern": "^(json|csv|excel|pdf)$",
            "title": "Format",
            "default": "json"
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          }
        },
        "type": "object",
        "title": "PatientReportRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0442\u0447\u0435\u0442\u0430 \u043f\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430\u043c"
      },
      "PatientUpdate": {
        "properties": {
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "middle_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "sex": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Sex"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "doc_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Number"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 512
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "type": "object",
        "title": "PatientUpdate"
      },
      "PayMeConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          },
          "test_mode": {
            "type": "boolean",
            "title": "Test Mode",
            "default": true
          },
          "merchant_id": {
            "type": "string",
            "title": "Merchant Id",
            "default": ""
          },
          "secret_key": {
            "type": "string",
            "title": "Secret Key",
            "default": ""
          },
          "base_url": {
            "type": "string",
            "title": "Base Url",
            "default": "https://checkout.paycom.uz"
          },
          "api_url": {
            "type": "string",
            "title": "Api Url",
            "default": "https://api.paycom.uz"
          }
        },
        "type": "object",
        "title": "PayMeConfig"
      },
      "PaymentCreate": {
        "properties": {
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "reference_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Number"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "amount",
          "payment_method"
        ],
        "title": "PaymentCreate"
      },
      "PaymentInitRequest": {
        "properties": {
          "visit_id": {
            "type": "integer",
            "title": "Visit Id",
            "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043b\u0430\u0442\u0435\u0436\u0430 (click, payme, kaspi)"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount",
            "description": "\u0421\u0443\u043c\u043c\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "\u0412\u0430\u043b\u044e\u0442\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430",
            "default": "UZS"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u0442\u0435\u0436\u0430"
          },
          "return_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Url",
            "description": "URL \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0445\u0435"
          },
          "cancel_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancel Url",
            "description": "URL \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043f\u0440\u0438 \u043e\u0442\u043c\u0435\u043d\u0435"
          }
        },
        "type": "object",
        "required": [
          "visit_id",
          "provider",
          "amount"
        ],
        "title": "PaymentInitRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u043b\u0430\u0442\u0435\u0436\u0430"
      },
      "PaymentInitResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "payment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Id"
          },
          "provider_payment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Payment Id"
          },
          "payment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Url"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "PaymentInitResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u043b\u0430\u0442\u0435\u0436\u0430"
      },
      "PaymentInvoiceCreateRequest": {
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount",
            "description": "\u0421\u0443\u043c\u043c\u0430 \u043a \u043e\u043f\u043b\u0430\u0442\u0435"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "\u0412\u0430\u043b\u044e\u0442\u0430",
            "default": "UZS"
          },
          "provider": {
            "type": "string",
            "pattern": "^(click|payme)$",
            "title": "Provider",
            "description": "\u041f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u0439 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u0442\u0435\u0436\u0430"
          },
          "patient_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Info",
            "description": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0435"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "provider"
        ],
        "title": "PaymentInvoiceCreateRequest"
      },
      "PaymentInvoiceResponse": {
        "properties": {
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "amount",
          "currency",
          "provider",
          "status",
          "description",
          "created_at"
        ],
        "title": "PaymentInvoiceResponse"
      },
      "PaymentListResponse": {
        "properties": {
          "payments": {
            "items": {
              "$ref": "#/components/schemas/PaymentStatusResponse"
            },
            "type": "array",
            "title": "Payments"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "payments",
          "total"
        ],
        "title": "PaymentListResponse",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439"
      },
      "PaymentMethod": {
        "type": "string",
        "enum": [
          "cash",
          "card",
          "bank_transfer",
          "online",
          "insurance",
          "installment"
        ],
        "title": "PaymentMethod",
        "description": "\u0421\u043f\u043e\u0441\u043e\u0431\u044b \u043e\u043f\u043b\u0430\u0442\u044b"
      },
      "PaymentProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "\u041a\u043e\u0434 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
            "default": true
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url",
            "description": "URL \u0434\u043b\u044f \u0432\u0435\u0431\u0445\u0443\u043a\u043e\u0432"
          },
          "commission_percent": {
            "type": "integer",
            "title": "Commission Percent",
            "description": "\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445",
            "default": 0
          },
          "min_amount": {
            "type": "integer",
            "title": "Min Amount",
            "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
            "default": 0
          },
          "max_amount": {
            "type": "integer",
            "title": "Max Amount",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
            "default": 100000000
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "API \u043a\u043b\u044e\u0447"
          },
          "secret_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Key",
            "description": "\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "\u0412\u0440\u0435\u043c\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code"
        ],
        "title": "PaymentProviderCreate"
      },
      "PaymentProviderOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "\u041a\u043e\u0434 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
            "default": true
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url",
            "description": "URL \u0434\u043b\u044f \u0432\u0435\u0431\u0445\u0443\u043a\u043e\u0432"
          },
          "commission_percent": {
            "type": "integer",
            "title": "Commission Percent",
            "description": "\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445",
            "default": 0
          },
          "min_amount": {
            "type": "integer",
            "title": "Min Amount",
            "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
            "default": 0
          },
          "max_amount": {
            "type": "integer",
            "title": "Max Amount",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
            "default": 100000000
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "PaymentProviderOut"
      },
      "PaymentProviderSettings": {
        "properties": {
          "default_provider": {
            "type": "string",
            "pattern": "^(click|payme)$",
            "title": "Default Provider",
            "default": "click"
          },
          "enabled_providers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Enabled Providers",
            "default": [
              "click"
            ]
          },
          "click": {
            "$ref": "#/components/schemas/ClickConfig"
          },
          "payme": {
            "$ref": "#/components/schemas/PayMeConfig"
          }
        },
        "type": "object",
        "title": "PaymentProviderSettings"
      },
      "PaymentProviderUpdate": {
        "properties": {
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440"
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url",
            "description": "URL \u0434\u043b\u044f \u0432\u0435\u0431\u0445\u0443\u043a\u043e\u0432"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "API \u043a\u043b\u044e\u0447"
          },
          "secret_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Key",
            "description": "\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447"
          },
          "commission_percent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commission Percent",
            "description": "\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445"
          },
          "min_amount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Amount",
            "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430"
          },
          "max_amount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Amount",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430"
          }
        },
        "type": "object",
        "title": "PaymentProviderUpdate"
      },
      "PaymentResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "payment_number": {
            "type": "string",
            "title": "Payment Number"
          },
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "payment_method": {
            "type": "string",
            "title": "Payment Method"
          },
          "payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Payment Date"
          },
          "reference_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Number"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_confirmed": {
            "type": "boolean",
            "title": "Is Confirmed"
          },
          "confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirmed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "payment_number",
          "invoice_id",
          "patient_id",
          "amount",
          "payment_method",
          "payment_date",
          "reference_number",
          "description",
          "is_confirmed",
          "confirmed_at",
          "created_at"
        ],
        "title": "PaymentResponse"
      },
      "PaymentStatusResponse": {
        "properties": {
          "payment_id": {
            "type": "integer",
            "title": "Payment Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider"
          },
          "provider_payment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Payment Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "paid_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid At"
          },
          "provider_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Data"
          }
        },
        "type": "object",
        "required": [
          "payment_id",
          "status",
          "amount",
          "currency",
          "created_at"
        ],
        "title": "PaymentStatusResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430"
      },
      "PaymentTransactionOut": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "title": "Transaction Id",
            "description": "ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439"
          },
          "amount": {
            "type": "integer",
            "title": "Amount",
            "description": "\u0421\u0443\u043c\u043c\u0430 \u0432 \u0442\u0438\u0439\u0438\u043d\u0430\u0445"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "\u0412\u0430\u043b\u044e\u0442\u0430",
            "default": "UZS"
          },
          "commission": {
            "type": "integer",
            "title": "Commission",
            "description": "\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "\u0421\u0442\u0430\u0442\u0443\u0441 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438",
            "default": "pending"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id",
            "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "webhook_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "transaction_id",
          "provider",
          "amount",
          "id",
          "webhook_id",
          "created_at",
          "updated_at"
        ],
        "title": "PaymentTransactionOut"
      },
      "PaymentWebhookOut": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439 (payme, click, etc.)"
          },
          "webhook_id": {
            "type": "string",
            "title": "Webhook Id",
            "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 ID \u0432\u0435\u0431\u0445\u0443\u043a\u0430"
          },
          "transaction_id": {
            "type": "string",
            "title": "Transaction Id",
            "description": "ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438"
          },
          "amount": {
            "type": "integer",
            "title": "Amount",
            "description": "\u0421\u0443\u043c\u043c\u0430 \u0432 \u0442\u0438\u0439\u0438\u043d\u0430\u0445"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "\u0412\u0430\u043b\u044e\u0442\u0430",
            "default": "UZS"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id",
            "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id",
            "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "raw_data": {
            "type": "object",
            "title": "Raw Data"
          },
          "signature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "webhook_id",
          "transaction_id",
          "amount",
          "id",
          "status",
          "raw_data",
          "signature",
          "created_at",
          "processed_at",
          "error_message"
        ],
        "title": "PaymentWebhookOut"
      },
      "PermissionOverrideRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "permission_id": {
            "type": "integer",
            "title": "Permission Id"
          },
          "override_type": {
            "type": "string",
            "pattern": "^(grant|deny)$",
            "title": "Override Type"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "expires_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires Hours"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "permission_id",
          "override_type"
        ],
        "title": "PermissionOverrideRequest"
      },
      "PermissionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "codename": {
            "type": "string",
            "title": "Codename"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "codename",
          "description",
          "category",
          "is_active"
        ],
        "title": "PermissionResponse"
      },
      "PhoneVerificationRequest": {
        "properties": {
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "verification_code": {
            "type": "string",
            "title": "Verification Code"
          }
        },
        "type": "object",
        "required": [
          "phone",
          "verification_code"
        ],
        "title": "PhoneVerificationRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f"
      },
      "Prescription": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "emr_id": {
            "type": "integer",
            "title": "Emr Id"
          },
          "medications": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MedicationItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Medications"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "doctor_notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Notes"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "saved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saved At"
          },
          "printed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printed At"
          }
        },
        "type": "object",
        "required": [
          "appointment_id",
          "emr_id",
          "id",
          "created_at"
        ],
        "title": "Prescription",
        "description": "\u041f\u043e\u043b\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u0440\u0435\u0446\u0435\u043f\u0442\u0430"
      },
      "PrescriptionCreate": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "emr_id": {
            "type": "integer",
            "title": "Emr Id"
          },
          "medications": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MedicationItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Medications"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "doctor_notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Notes"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "appointment_id",
          "emr_id"
        ],
        "title": "PrescriptionCreate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u0446\u0435\u043f\u0442\u0430"
      },
      "PrescriptionSafetyRequest": {
        "properties": {
          "prescriptions": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Prescriptions"
          },
          "patient_profile": {
            "type": "object",
            "title": "Patient Profile"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "prescriptions",
          "patient_profile"
        ],
        "title": "PrescriptionSafetyRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0430\u0443\u0434\u0438\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439"
      },
      "PriceCalculationRequest": {
        "properties": {
          "services": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "minItems": 1,
            "title": "Services"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "appointment_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Time"
          }
        },
        "type": "object",
        "required": [
          "services"
        ],
        "title": "PriceCalculationRequest"
      },
      "PriceChangeNotificationRequest": {
        "properties": {
          "price_override_id": {
            "type": "integer",
            "title": "Price Override Id",
            "description": "ID \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0446\u0435\u043d\u044b"
          }
        },
        "type": "object",
        "required": [
          "price_override_id"
        ],
        "title": "PriceChangeNotificationRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e\u0431 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u0446\u0435\u043d\u044b"
      },
      "PriceOverrideListResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "service_name": {
            "type": "string",
            "title": "Service Name"
          },
          "doctor_name": {
            "type": "string",
            "title": "Doctor Name"
          },
          "doctor_specialty": {
            "type": "string",
            "title": "Doctor Specialty"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name"
          },
          "original_price": {
            "type": "string",
            "title": "Original Price"
          },
          "new_price": {
            "type": "string",
            "title": "New Price"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "visit_id",
          "service_id",
          "service_name",
          "doctor_name",
          "doctor_specialty",
          "patient_name",
          "original_price",
          "new_price",
          "reason",
          "details",
          "status",
          "created_at"
        ],
        "title": "PriceOverrideListResponse"
      },
      "PriceOverrideRequest": {
        "properties": {
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "new_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "New Price"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "visit_id",
          "service_id",
          "new_price",
          "reason"
        ],
        "title": "PriceOverrideRequest"
      },
      "PriceOverrideResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "original_price": {
            "type": "string",
            "title": "Original Price"
          },
          "new_price": {
            "type": "string",
            "title": "New Price"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "visit_id",
          "service_id",
          "original_price",
          "new_price",
          "reason",
          "details",
          "status",
          "created_at"
        ],
        "title": "PriceOverrideResponse"
      },
      "PricingRuleCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "rule_type": {
            "$ref": "#/components/schemas/PricingRuleType"
          },
          "discount_type": {
            "$ref": "#/components/schemas/app__models__dynamic_pricing__DiscountType"
          },
          "discount_value": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Discount Value"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "days_of_week": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^[1-7](,[1-7])*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Of Week"
          },
          "min_quantity": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Min Quantity",
            "default": 1
          },
          "max_quantity": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Quantity"
          },
          "min_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Amount"
          },
          "priority": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Priority",
            "default": 0
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          },
          "service_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "minItems": 1,
            "title": "Service Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "rule_type",
          "discount_type",
          "discount_value",
          "service_ids"
        ],
        "title": "PricingRuleCreate"
      },
      "PricingRuleResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "rule_type": {
            "type": "string",
            "title": "Rule Type"
          },
          "discount_type": {
            "type": "string",
            "title": "Discount Type"
          },
          "discount_value": {
            "type": "number",
            "title": "Discount Value"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "days_of_week": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Of Week"
          },
          "min_quantity": {
            "type": "integer",
            "title": "Min Quantity"
          },
          "max_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Quantity"
          },
          "min_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Amount"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          },
          "current_uses": {
            "type": "integer",
            "title": "Current Uses"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "rule_type",
          "discount_type",
          "discount_value",
          "is_active",
          "start_date",
          "end_date",
          "start_time",
          "end_time",
          "days_of_week",
          "min_quantity",
          "max_quantity",
          "min_amount",
          "priority",
          "max_uses",
          "current_uses",
          "created_at"
        ],
        "title": "PricingRuleResponse"
      },
      "PricingRuleType": {
        "type": "string",
        "enum": [
          "time_based",
          "volume_based",
          "seasonal",
          "loyalty",
          "package",
          "dynamic"
        ],
        "title": "PricingRuleType",
        "description": "\u0422\u0438\u043f\u044b \u043f\u0440\u0430\u0432\u0438\u043b \u0446\u0435\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f"
      },
      "PricingRuleUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "discount_value": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Value"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "days_of_week": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^[1-7](,[1-7])*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Of Week"
          },
          "min_quantity": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Quantity"
          },
          "max_quantity": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Quantity"
          },
          "min_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Amount"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          }
        },
        "type": "object",
        "title": "PricingRuleUpdate"
      },
      "PrintCertificateRequest": {
        "properties": {
          "certificate": {
            "type": "object",
            "title": "Certificate",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0441\u043f\u0440\u0430\u0432\u043a\u0438"
          },
          "patient": {
            "type": "object",
            "title": "Patient",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "visit": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit"
          },
          "clinic": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "certificate",
          "patient"
        ],
        "title": "PrintCertificateRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0441\u043f\u0440\u0430\u0432\u043a\u0438"
      },
      "PrintJobOut": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "printer_id": {
            "type": "integer",
            "title": "Printer Id",
            "description": "ID \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "ID \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "document_type": {
            "type": "string",
            "title": "Document Type",
            "description": "\u0422\u0438\u043f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430"
          },
          "document_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Id",
            "description": "ID \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "\u0421\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u044f",
            "default": "pending"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435"
          },
          "print_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Print Data",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "printer_id",
          "document_type",
          "id",
          "created_at"
        ],
        "title": "PrintJobOut"
      },
      "PrintJobRequest": {
        "properties": {
          "provider_name": {
            "type": "string",
            "title": "Provider Name",
            "description": "\u0418\u043c\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u0435\u0447\u0430\u0442\u0438"
          },
          "printer_id": {
            "type": "string",
            "title": "Printer Id",
            "description": "ID \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430"
          },
          "format": {
            "type": "string",
            "pattern": "^(pdf|html|text|image)$",
            "title": "Format",
            "default": "html"
          },
          "copies": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Copies",
            "default": 1
          },
          "color": {
            "type": "boolean",
            "title": "Color",
            "description": "\u0426\u0432\u0435\u0442\u043d\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c",
            "default": false
          },
          "duplex": {
            "type": "boolean",
            "title": "Duplex",
            "description": "\u0414\u0432\u0443\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u044f\u044f \u043f\u0435\u0447\u0430\u0442\u044c",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "provider_name",
          "printer_id",
          "title",
          "content"
        ],
        "title": "PrintJobRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0435\u0447\u0430\u0442\u044c"
      },
      "PrintJobResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "job_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "PrintJobResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u043f\u0435\u0447\u0430\u0442\u0438"
      },
      "PrintLabResultsRequest": {
        "properties": {
          "lab_order": {
            "type": "object",
            "title": "Lab Order",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043a\u0430\u0437\u0430"
          },
          "lab_results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Lab Results",
            "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432"
          },
          "patient": {
            "type": "object",
            "title": "Patient",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "clinic": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "lab_order",
          "lab_results",
          "patient"
        ],
        "title": "PrintLabResultsRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432"
      },
      "PrintPrescriptionRequest": {
        "properties": {
          "prescription": {
            "type": "object",
            "title": "Prescription",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0440\u0435\u0446\u0435\u043f\u0442\u0430"
          },
          "patient": {
            "type": "object",
            "title": "Patient",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "clinic": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "prescription",
          "patient"
        ],
        "title": "PrintPrescriptionRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0440\u0435\u0446\u0435\u043f\u0442\u0430"
      },
      "PrintReceiptRequest": {
        "properties": {
          "payment": {
            "type": "object",
            "title": "Payment",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u0442\u0435\u0436\u0430"
          },
          "patient": {
            "type": "object",
            "title": "Patient",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "services": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Services",
            "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0441\u043b\u0443\u0433"
          },
          "clinic": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "payment",
          "patient",
          "services"
        ],
        "title": "PrintReceiptRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0447\u0435\u043a\u0430"
      },
      "PrintResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "\u0423\u0441\u043f\u0435\u0448\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438"
          },
          "job_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id",
            "description": "ID \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u0435\u0447\u0430\u0442\u0438"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435"
          },
          "printer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer",
            "description": "\u0418\u043c\u044f \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "\u041e\u0448\u0438\u0431\u043a\u0430"
          },
          "result": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result",
            "description": "\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "PrintResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u0435\u0447\u0430\u0442\u0438"
      },
      "PrintTemplateCreate": {
        "properties": {
          "printer_id": {
            "type": "integer",
            "title": "Printer Id",
            "description": "ID \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\u0418\u043c\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0435 \u0438\u043c\u044f"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type",
            "description": "\u0422\u0438\u043f \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "template_content": {
            "type": "string",
            "title": "Template Content",
            "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 Jinja2"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "\u042f\u0437\u044b\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
            "default": "ru"
          },
          "font_size": {
            "type": "integer",
            "title": "Font Size",
            "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430",
            "default": 12
          },
          "line_spacing": {
            "type": "integer",
            "title": "Line Spacing",
            "description": "\u041c\u0435\u0436\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b",
            "default": 1
          },
          "char_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Char Per Line",
            "description": "\u0421\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u043b\u044f ESC/POS"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "printer_id",
          "name",
          "display_name",
          "template_type",
          "template_content"
        ],
        "title": "PrintTemplateCreate"
      },
      "PrintTemplateOut": {
        "properties": {
          "printer_id": {
            "type": "integer",
            "title": "Printer Id",
            "description": "ID \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\u0418\u043c\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0435 \u0438\u043c\u044f"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type",
            "description": "\u0422\u0438\u043f \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "template_content": {
            "type": "string",
            "title": "Template Content",
            "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 Jinja2"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "\u042f\u0437\u044b\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
            "default": "ru"
          },
          "font_size": {
            "type": "integer",
            "title": "Font Size",
            "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430",
            "default": 12
          },
          "line_spacing": {
            "type": "integer",
            "title": "Line Spacing",
            "description": "\u041c\u0435\u0436\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b",
            "default": 1
          },
          "char_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Char Per Line",
            "description": "\u0421\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u043b\u044f ESC/POS"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "printer_id",
          "name",
          "display_name",
          "template_type",
          "template_content",
          "id",
          "created_at"
        ],
        "title": "PrintTemplateOut"
      },
      "PrintTemplateUpdate": {
        "properties": {
          "printer_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "template_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Type"
          },
          "template_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Content"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "font_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Font Size"
          },
          "line_spacing": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Spacing"
          },
          "char_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Char Per Line"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          }
        },
        "type": "object",
        "title": "PrintTemplateUpdate"
      },
      "PrintTicketRequest": {
        "properties": {
          "clinic_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic Name"
          },
          "queue_number": {
            "type": "string",
            "title": "Queue Number",
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "doctor_name": {
            "type": "string",
            "title": "Doctor Name",
            "description": "\u0418\u043c\u044f \u0432\u0440\u0430\u0447\u0430"
          },
          "specialty_name": {
            "type": "string",
            "title": "Specialty Name",
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0437\u0430\u043f\u0438\u0441\u0438",
            "default": "desk"
          },
          "time_window": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Window"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "queue_number",
          "doctor_name",
          "specialty_name"
        ],
        "title": "PrintTicketRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0442\u0430\u043b\u043e\u043d\u0430"
      },
      "ProfileUpdateRequest": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "emergency_contact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact"
          },
          "allergies": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allergies"
          },
          "chronic_conditions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chronic Conditions"
          }
        },
        "type": "object",
        "title": "ProfileUpdateRequest",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f"
      },
      "ProviderInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "supported_currencies": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Supported Currencies"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "features": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Features"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code",
          "supported_currencies",
          "is_active",
          "features"
        ],
        "title": "ProviderInfo",
        "description": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435"
      },
      "ProvidersResponse": {
        "properties": {
          "providers": {
            "items": {
              "$ref": "#/components/schemas/ProviderInfo"
            },
            "type": "array",
            "title": "Providers"
          }
        },
        "type": "object",
        "required": [
          "providers"
        ],
        "title": "ProvidersResponse",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432"
      },
      "QRTokenGenerateRequest": {
        "properties": {
          "specialist_id": {
            "type": "integer",
            "title": "Specialist Id",
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          },
          "department": {
            "type": "string",
            "title": "Department",
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          "expires_hours": {
            "type": "integer",
            "maximum": 168.0,
            "minimum": 1.0,
            "title": "Expires Hours",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0436\u0438\u0437\u043d\u0438 \u0442\u043e\u043a\u0435\u043d\u0430 \u0432 \u0447\u0430\u0441\u0430\u0445",
            "default": 24
          }
        },
        "type": "object",
        "required": [
          "specialist_id",
          "department"
        ],
        "title": "QRTokenGenerateRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e QR \u0442\u043e\u043a\u0435\u043d\u0430"
      },
      "QRTokenInfoResponse": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "specialist_id": {
            "type": "integer",
            "title": "Specialist Id"
          },
          "specialist_name": {
            "type": "string",
            "title": "Specialist Name"
          },
          "department": {
            "type": "string",
            "title": "Department"
          },
          "department_name": {
            "type": "string",
            "title": "Department Name"
          },
          "queue_length": {
            "type": "integer",
            "title": "Queue Length"
          },
          "queue_active": {
            "type": "boolean",
            "title": "Queue Active"
          },
          "expires_at": {
            "type": "string",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "token",
          "specialist_id",
          "specialist_name",
          "department",
          "department_name",
          "queue_length",
          "queue_active",
          "expires_at"
        ],
        "title": "QRTokenInfoResponse",
        "description": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e QR \u0442\u043e\u043a\u0435\u043d\u0435"
      },
      "QRTokenResponse": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "qr_url": {
            "type": "string",
            "title": "Qr Url"
          },
          "qr_code_base64": {
            "type": "string",
            "title": "Qr Code Base64"
          },
          "specialist_id": {
            "type": "integer",
            "title": "Specialist Id"
          },
          "department": {
            "type": "string",
            "title": "Department"
          },
          "expires_at": {
            "type": "string",
            "title": "Expires At"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "token",
          "qr_url",
          "qr_code_base64",
          "specialist_id",
          "department",
          "expires_at",
          "active"
        ],
        "title": "QRTokenResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 QR \u0442\u043e\u043a\u0435\u043d\u043e\u043c"
      },
      "QueueCabinetResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "day": {
            "type": "string",
            "title": "Day"
          },
          "specialist_id": {
            "type": "integer",
            "title": "Specialist Id"
          },
          "specialist_name": {
            "type": "string",
            "title": "Specialist Name"
          },
          "queue_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Tag"
          },
          "cabinet_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet Number"
          },
          "cabinet_floor": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet Floor"
          },
          "cabinet_building": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet Building"
          },
          "entries_count": {
            "type": "integer",
            "title": "Entries Count"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "day",
          "specialist_id",
          "specialist_name",
          "queue_tag",
          "cabinet_number",
          "cabinet_floor",
          "cabinet_building",
          "entries_count",
          "active"
        ],
        "title": "QueueCabinetResponse"
      },
      "QueueCabinetUpdateRequest": {
        "properties": {
          "queue_id": {
            "type": "integer",
            "title": "Queue Id"
          },
          "cabinet_info": {
            "$ref": "#/components/schemas/CabinetInfo"
          }
        },
        "type": "object",
        "required": [
          "queue_id",
          "cabinet_info"
        ],
        "title": "QueueCabinetUpdateRequest"
      },
      "QueueEntryMoveRequest": {
        "properties": {
          "entry_id": {
            "type": "integer",
            "title": "Entry Id"
          },
          "new_position": {
            "type": "integer",
            "title": "New Position"
          }
        },
        "type": "object",
        "required": [
          "entry_id",
          "new_position"
        ],
        "title": "QueueEntryMoveRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
      },
      "QueueEntryResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "number": {
            "type": "integer",
            "title": "Number"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "called_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Called At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "number",
          "patient_name",
          "phone",
          "status",
          "created_at",
          "called_at"
        ],
        "title": "QueueEntryResponse"
      },
      "QueueLimitResponse": {
        "properties": {
          "specialty": {
            "type": "string",
            "title": "Specialty"
          },
          "max_per_day": {
            "type": "integer",
            "title": "Max Per Day"
          },
          "start_number": {
            "type": "integer",
            "title": "Start Number"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "current_usage": {
            "type": "integer",
            "title": "Current Usage"
          },
          "doctors_count": {
            "type": "integer",
            "title": "Doctors Count"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "specialty",
          "max_per_day",
          "start_number",
          "enabled",
          "current_usage",
          "doctors_count",
          "last_updated"
        ],
        "title": "QueueLimitResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043b\u0438\u043c\u0438\u0442\u0430\u0445"
      },
      "QueueLimitUpdate": {
        "properties": {
          "specialty": {
            "type": "string",
            "title": "Specialty",
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
          },
          "max_per_day": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Per Day"
          },
          "start_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 999.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Number"
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          }
        },
        "type": "object",
        "required": [
          "specialty"
        ],
        "title": "QueueLimitUpdate",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043b\u0438\u043c\u0438\u0442\u043e\u0432"
      },
      "QueueReorderRequest": {
        "properties": {
          "queue_id": {
            "type": "integer",
            "title": "Queue Id"
          },
          "entry_orders": {
            "items": {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Entry Orders"
          }
        },
        "type": "object",
        "required": [
          "queue_id",
          "entry_orders"
        ],
        "title": "QueueReorderRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0440\u044f\u0434\u043a\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
      },
      "QueueReorderResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "updated_entries": {
            "type": "integer",
            "title": "Updated Entries"
          },
          "queue_info": {
            "type": "object",
            "title": "Queue Info"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "updated_entries",
          "queue_info"
        ],
        "title": "QueueReorderResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0440\u044f\u0434\u043a\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
      },
      "QueueSettingsUpdate": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "description": "\u0427\u0430\u0441\u043e\u0432\u043e\u0439 \u043f\u043e\u044f\u0441",
            "default": "Asia/Tashkent"
          },
          "queue_start_hour": {
            "type": "integer",
            "maximum": 23.0,
            "minimum": 0.0,
            "title": "Queue Start Hour",
            "description": "\u0427\u0430\u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u043d\u043b\u0430\u0439\u043d \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
            "default": 7
          },
          "auto_close_time": {
            "type": "string",
            "title": "Auto Close Time",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0430\u0432\u0442\u043e\u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f",
            "default": "09:00"
          },
          "start_numbers": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Start Numbers",
            "description": "\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044f\u043c",
            "default": {
              "cardiology": 1,
              "dermatology": 15,
              "stomatology": 3
            }
          },
          "max_per_day": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Max Per Day",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u043e\u043d\u043b\u0430\u0439\u043d \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u0434\u0435\u043d\u044c",
            "default": {
              "cardiology": 15,
              "dermatology": 20,
              "stomatology": 12
            }
          }
        },
        "type": "object",
        "title": "QueueSettingsUpdate",
        "description": "\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439"
      },
      "QueueStatusNotificationRequest": {
        "properties": {
          "queue_entry_id": {
            "type": "integer",
            "title": "Queue Entry Id",
            "description": "ID \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "status_change": {
            "type": "string",
            "title": "Status Change",
            "description": "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430"
          },
          "additional_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info",
            "description": "\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f"
          }
        },
        "type": "object",
        "required": [
          "queue_entry_id",
          "status_change"
        ],
        "title": "QueueStatusNotificationRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
      },
      "QueueTestRequest": {
        "properties": {
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id"
          },
          "date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          }
        },
        "type": "object",
        "required": [
          "doctor_id"
        ],
        "title": "QueueTestRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
      },
      "QueueTokenResponse": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "qr_url": {
            "type": "string",
            "title": "Qr Url"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "specialist_name": {
            "type": "string",
            "title": "Specialist Name"
          },
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day"
          }
        },
        "type": "object",
        "required": [
          "token",
          "qr_url",
          "expires_at",
          "specialist_name",
          "day"
        ],
        "title": "QueueTokenResponse"
      },
      "QuickReceiptRequest": {
        "properties": {
          "patient_name": {
            "type": "string",
            "title": "Patient Name",
            "description": "\u0424\u0418\u041e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "services": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Services",
            "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0441\u043b\u0443\u0433"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount",
            "description": "\u041e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430"
          },
          "payment_method": {
            "type": "string",
            "title": "Payment Method",
            "description": "\u0421\u043f\u043e\u0441\u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u044b"
          }
        },
        "type": "object",
        "required": [
          "patient_name",
          "services",
          "total_amount",
          "payment_method"
        ],
        "title": "QuickReceiptRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043f\u0435\u0447\u0430\u0442\u0438 \u0447\u0435\u043a\u0430"
      },
      "QuickTicketRequest": {
        "properties": {
          "queue_number": {
            "type": "string",
            "title": "Queue Number",
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "doctor_name": {
            "type": "string",
            "title": "Doctor Name",
            "description": "\u0418\u043c\u044f \u0432\u0440\u0430\u0447\u0430"
          },
          "specialty": {
            "type": "string",
            "title": "Specialty",
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0437\u0430\u043f\u0438\u0441\u0438",
            "default": "desk"
          }
        },
        "type": "object",
        "required": [
          "queue_number",
          "doctor_name",
          "specialty"
        ],
        "title": "QuickTicketRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043f\u0435\u0447\u0430\u0442\u0438 \u0442\u0430\u043b\u043e\u043d\u0430"
      },
      "ReadmissionRiskRequest": {
        "properties": {
          "patient_data": {
            "type": "object",
            "title": "Patient Data"
          },
          "discharge_condition": {
            "type": "string",
            "title": "Discharge Condition"
          },
          "social_factors": {
            "type": "object",
            "title": "Social Factors"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_data",
          "discharge_condition",
          "social_factors"
        ],
        "title": "ReadmissionRiskRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0438\u0441\u043a\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0439 \u0433\u043e\u0441\u043f\u0438\u0442\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438"
      },
      "RealTimeWaitEstimateResponse": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "queues": {
            "type": "object",
            "title": "Queues"
          },
          "summary": {
            "type": "object",
            "title": "Summary"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "queues",
          "summary"
        ],
        "title": "RealTimeWaitEstimateResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u043e\u0446\u0435\u043d\u043a\u0430\u043c\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0432 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438"
      },
      "RecordValidationRequest": {
        "properties": {
          "record_data": {
            "type": "object",
            "title": "Record Data"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "record_data"
        ],
        "title": "RecordValidationRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438"
      },
      "RecurrenceType": {
        "type": "string",
        "enum": [
          "daily",
          "weekly",
          "monthly",
          "quarterly",
          "yearly"
        ],
        "title": "RecurrenceType",
        "description": "\u0422\u0438\u043f\u044b \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u0438"
      },
      "RedeemPointsRequest": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "program_id": {
            "type": "integer",
            "title": "Program Id"
          },
          "points": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Points"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id"
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "program_id",
          "points"
        ],
        "title": "RedeemPointsRequest"
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "minLength": 1,
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430"
      },
      "RefreshTokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "expires_in"
        ],
        "title": "RefreshTokenResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430"
      },
      "RegistrarListResponse": {
        "properties": {
          "registrars": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Registrars"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          }
        },
        "type": "object",
        "required": [
          "registrars",
          "total_count"
        ],
        "title": "RegistrarListResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u0432"
      },
      "ReportResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "report_type": {
            "type": "string",
            "title": "Report Type"
          },
          "generated_at": {
            "type": "string",
            "title": "Generated At"
          },
          "format": {
            "type": "string",
            "title": "Format"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename"
          },
          "filepath": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filepath"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success",
          "report_type",
          "generated_at",
          "format"
        ],
        "title": "ReportResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 \u043e\u0442\u0447\u0435\u0442\u043e\u043c"
      },
      "RestoreRequest": {
        "properties": {
          "backup_name": {
            "type": "string",
            "title": "Backup Name"
          },
          "components": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Components",
            "default": [
              "database",
              "configuration"
            ]
          },
          "confirm": {
            "type": "boolean",
            "title": "Confirm",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "backup_name"
        ],
        "title": "RestoreRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u0437 \u0431\u044d\u043a\u0430\u043f\u0430"
      },
      "RestoreResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "restored_queues": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Restored Queues"
          },
          "restored_entries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Restored Entries"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "RestoreResult",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f"
      },
      "RiskAssessmentRequest": {
        "properties": {
          "patient_data": {
            "type": "object",
            "title": "Patient Data"
          },
          "risk_factors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Risk Factors"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_data",
          "risk_factors",
          "condition"
        ],
        "title": "RiskAssessmentRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0443\u044e \u043e\u0446\u0435\u043d\u043a\u0443 \u0440\u0438\u0441\u043a\u043e\u0432 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
      },
      "RiskPatternsRequest": {
        "properties": {
          "population_data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Population Data"
          },
          "risk_factors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Risk Factors"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "population_data",
          "risk_factors"
        ],
        "title": "RiskPatternsRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432 \u0440\u0438\u0441\u043a\u043e\u0432"
      },
      "RoleResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_system": {
            "type": "boolean",
            "title": "Is System"
          },
          "permissions_count": {
            "type": "integer",
            "title": "Permissions Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "display_name",
          "description",
          "level",
          "is_active",
          "is_system",
          "permissions_count"
        ],
        "title": "RoleResponse"
      },
      "SMSProviderInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "available": {
            "type": "boolean",
            "title": "Available"
          },
          "balance": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Balance"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "name",
          "available"
        ],
        "title": "SMSProviderInfo",
        "description": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e SMS \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435"
      },
      "SMSTestRequest": {
        "properties": {
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider"
          }
        },
        "type": "object",
        "required": [
          "phone",
          "message"
        ],
        "title": "SMSTestRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 SMS"
      },
      "ScheduleBase": {
        "properties": {
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday",
            "description": "0=Monday, 6=Sunday"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "breaks": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Breaks",
            "description": "[{\"start\": \"12:00\", \"end\": \"13:00\"}]"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "weekday"
        ],
        "title": "ScheduleBase"
      },
      "ScheduleCreate": {
        "properties": {
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday",
            "description": "0=Monday, 6=Sunday"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "breaks": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Breaks",
            "description": "[{\"start\": \"12:00\", \"end\": \"13:00\"}]"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id"
          }
        },
        "type": "object",
        "required": [
          "weekday",
          "doctor_id"
        ],
        "title": "ScheduleCreate"
      },
      "ScheduleCreateIn": {
        "properties": {
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday"
          },
          "start_time": {
            "type": "string",
            "pattern": "^\\d{2}:\\d{2}$",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "pattern": "^\\d{2}:\\d{2}$",
            "title": "End Time"
          },
          "room": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Room"
          },
          "capacity_per_hour": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 200.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Per Hour"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "weekday",
          "start_time",
          "end_time"
        ],
        "title": "ScheduleCreateIn"
      },
      "ScheduleNextVisitRequest": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/ScheduleNextVisitService"
            },
            "type": "array",
            "title": "Services"
          },
          "visit_date": {
            "type": "string",
            "format": "date",
            "title": "Visit Date"
          },
          "visit_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Time"
          },
          "discount_mode": {
            "type": "string",
            "pattern": "^(none|repeat|benefit|all_free)$",
            "title": "Discount Mode",
            "default": "none"
          },
          "all_free": {
            "type": "boolean",
            "title": "All Free",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "confirmation_channel": {
            "type": "string",
            "pattern": "^(phone|telegram|pwa|auto)$",
            "title": "Confirmation Channel",
            "default": "phone"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "services",
          "visit_date"
        ],
        "title": "ScheduleNextVisitRequest"
      },
      "ScheduleNextVisitResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "visit_id": {
            "type": "integer",
            "title": "Visit Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "confirmation": {
            "type": "object",
            "title": "Confirmation"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "visit_id",
          "status",
          "confirmation"
        ],
        "title": "ScheduleNextVisitResponse"
      },
      "ScheduleNextVisitService": {
        "properties": {
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "default": 1
          },
          "custom_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Price"
          }
        },
        "type": "object",
        "required": [
          "service_id"
        ],
        "title": "ScheduleNextVisitService"
      },
      "ScheduleOptimizationRequest": {
        "properties": {
          "schedule_data": {
            "type": "object",
            "title": "Schedule Data"
          },
          "constraints": {
            "type": "object",
            "title": "Constraints"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "schedule_data",
          "constraints"
        ],
        "title": "ScheduleOptimizationRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044e \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432\u0440\u0430\u0447\u0430"
      },
      "ScheduleOut": {
        "properties": {
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday",
            "description": "0=Monday, 6=Sunday"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "breaks": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Breaks",
            "description": "[{\"start\": \"12:00\", \"end\": \"13:00\"}]"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "weekday",
          "id",
          "doctor_id"
        ],
        "title": "ScheduleOut"
      },
      "ScheduleRowOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday",
            "description": "0=\u0420\u045f\u0420\u0405 \u0432\u0402\u00a6 6=\u0420\u2019\u0421\u0403"
          },
          "start_time": {
            "type": "string",
            "pattern": "^\\d{2}:\\d{2}$",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "pattern": "^\\d{2}:\\d{2}$",
            "title": "End Time"
          },
          "room": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room"
          },
          "capacity_per_hour": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 200.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Per Hour"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "weekday",
          "start_time",
          "end_time"
        ],
        "title": "ScheduleRowOut"
      },
      "SecurityConfigResponse": {
        "properties": {
          "rate_limits": {
            "additionalProperties": {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            "type": "object",
            "title": "Rate Limits"
          },
          "token_expiry_hours": {
            "type": "integer",
            "title": "Token Expiry Hours"
          },
          "max_confirmation_attempts": {
            "type": "integer",
            "title": "Max Confirmation Attempts"
          },
          "cleanup_interval_hours": {
            "type": "integer",
            "title": "Cleanup Interval Hours"
          }
        },
        "type": "object",
        "required": [
          "rate_limits",
          "token_expiry_hours",
          "max_confirmation_attempts",
          "cleanup_interval_hours"
        ],
        "title": "SecurityConfigResponse",
        "description": "\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438"
      },
      "SecurityStatsResponse": {
        "properties": {
          "period_hours": {
            "type": "integer",
            "title": "Period Hours"
          },
          "since": {
            "type": "string",
            "title": "Since"
          },
          "confirmation_attempts": {
            "type": "integer",
            "title": "Confirmation Attempts"
          },
          "successful_confirmations": {
            "type": "integer",
            "title": "Successful Confirmations"
          },
          "failed_confirmations": {
            "type": "integer",
            "title": "Failed Confirmations"
          },
          "rate_limit_blocks": {
            "type": "integer",
            "title": "Rate Limit Blocks"
          },
          "suspicious_activity_blocks": {
            "type": "integer",
            "title": "Suspicious Activity Blocks"
          },
          "expired_tokens_cleaned": {
            "type": "integer",
            "title": "Expired Tokens Cleaned"
          }
        },
        "type": "object",
        "required": [
          "period_hours",
          "since",
          "confirmation_attempts",
          "successful_confirmations",
          "failed_confirmations",
          "rate_limit_blocks",
          "suspicious_activity_blocks",
          "expired_tokens_cleaned"
        ],
        "title": "SecurityStatsResponse",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438"
      },
      "SendNotificationRequest": {
        "properties": {
          "recipient_type": {
            "type": "string",
            "title": "Recipient Type",
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f: patient, doctor, admin"
          },
          "recipient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Id",
            "description": "ID \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "notification_type": {
            "type": "string",
            "title": "Notification Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Channels",
            "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
            "default": [
              "email"
            ]
          },
          "template_data": {
            "type": "object",
            "title": "Template Data",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": {}
          },
          "related_entity_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Type",
            "description": "\u0422\u0438\u043f \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438"
          },
          "related_entity_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Id",
            "description": "ID \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442: low, normal, high, urgent",
            "default": "normal"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At",
            "description": "\u0412\u0440\u0435\u043c\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 (\u0434\u043b\u044f \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445)"
          }
        },
        "type": "object",
        "required": [
          "recipient_type",
          "notification_type"
        ],
        "title": "SendNotificationRequest"
      },
      "SendVerificationCodeRequest": {
        "properties": {
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "purpose": {
            "type": "string",
            "title": "Purpose",
            "default": "verification"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider"
          },
          "custom_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Message"
          }
        },
        "type": "object",
        "required": [
          "phone"
        ],
        "title": "SendVerificationCodeRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u043a\u043e\u0434\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
      },
      "ServiceCategoryCreate": {
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 50,
            "title": "Code"
          },
          "name_ru": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Ru"
          },
          "name_uz": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Uz"
          },
          "name_en": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name En"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "ServiceCategoryCreate"
      },
      "ServiceCategoryUpdate": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name_ru": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Ru"
          },
          "name_uz": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Uz"
          },
          "name_en": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name En"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          }
        },
        "type": "object",
        "title": "ServiceCategoryUpdate"
      },
      "ServiceCreate": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "default": "UZS"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes",
            "default": 30
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "category_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "pattern": "^[KDCLSO]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Code"
          },
          "service_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Code"
          },
          "requires_doctor": {
            "type": "boolean",
            "title": "Requires Doctor",
            "default": false
          },
          "queue_tag": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Tag"
          },
          "is_consultation": {
            "type": "boolean",
            "title": "Is Consultation",
            "default": false
          },
          "allow_doctor_price_override": {
            "type": "boolean",
            "title": "Allow Doctor Price Override",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ServiceCreate"
      },
      "ServiceItemRequest": {
        "properties": {
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Quantity",
            "default": 1
          },
          "custom_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Price"
          }
        },
        "type": "object",
        "required": [
          "service_id"
        ],
        "title": "ServiceItemRequest"
      },
      "ServiceOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "category_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Code"
          },
          "service_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Code"
          },
          "requires_doctor": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Doctor"
          },
          "queue_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Tag"
          },
          "is_consultation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Consultation"
          },
          "allow_doctor_price_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Doctor Price Override"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "ServiceOut"
      },
      "ServicePackageCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "service_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "minItems": 2,
            "title": "Service Ids"
          },
          "package_price": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Package Price"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid To"
          },
          "max_purchases": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Purchases"
          },
          "per_patient_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Per Patient Limit"
          }
        },
        "type": "object",
        "required": [
          "name",
          "service_ids",
          "package_price"
        ],
        "title": "ServicePackageCreate"
      },
      "ServicePackageResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "package_price": {
            "type": "number",
            "title": "Package Price"
          },
          "original_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Price"
          },
          "savings_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Savings Amount"
          },
          "savings_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Savings Percentage"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid To"
          },
          "max_purchases": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Purchases"
          },
          "current_purchases": {
            "type": "integer",
            "title": "Current Purchases"
          },
          "per_patient_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Per Patient Limit"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "is_active",
          "package_price",
          "original_price",
          "savings_amount",
          "savings_percentage",
          "valid_from",
          "valid_to",
          "max_purchases",
          "current_purchases",
          "per_patient_limit",
          "created_at"
        ],
        "title": "ServicePackageResponse"
      },
      "ServicePackageUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "package_price": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Price"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid To"
          },
          "max_purchases": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Purchases"
          },
          "per_patient_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Per Patient Limit"
          }
        },
        "type": "object",
        "title": "ServicePackageUpdate"
      },
      "ServiceSearchRequest": {
        "properties": {
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "price_min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Min"
          },
          "price_max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Max"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 20
          }
        },
        "type": "object",
        "title": "ServiceSearchRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u043e\u0438\u0441\u043a\u0430 \u0443\u0441\u043b\u0443\u0433"
      },
      "ServiceUpdate": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 256
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "category_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "pattern": "^[KDCLSO]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Code"
          },
          "service_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Code"
          },
          "requires_doctor": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Doctor"
          },
          "queue_tag": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Tag"
          },
          "is_consultation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Consultation"
          },
          "allow_doctor_price_override": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Doctor Price Override"
          }
        },
        "type": "object",
        "title": "ServiceUpdate"
      },
      "ServiceWaitAnalyticsResponse": {
        "properties": {
          "period": {
            "type": "object",
            "title": "Period"
          },
          "service_analytics": {
            "type": "object",
            "title": "Service Analytics"
          },
          "summary": {
            "type": "object",
            "title": "Summary"
          }
        },
        "type": "object",
        "required": [
          "period",
          "service_analytics",
          "summary"
        ],
        "title": "ServiceWaitAnalyticsResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u043e\u0439 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043f\u043e \u0443\u0441\u043b\u0443\u0433\u0430\u043c"
      },
      "SessionListResponse": {
        "properties": {
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/UserSessionResponse"
            },
            "type": "array",
            "title": "Sessions"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "sessions",
          "total",
          "page",
          "per_page",
          "total_pages"
        ],
        "title": "SessionListResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u0435\u0441\u0441\u0438\u0439"
      },
      "SessionRevokeRequest": {
        "properties": {
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "session_id"
        ],
        "title": "SessionRevokeRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0437\u044b\u0432\u0430 \u0441\u0435\u0441\u0441\u0438\u0438"
      },
      "ShiftRecommendationsRequest": {
        "properties": {
          "department_data": {
            "type": "object",
            "title": "Department Data"
          },
          "staffing_requirements": {
            "type": "object",
            "title": "Staffing Requirements"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "department_data",
          "staffing_requirements"
        ],
        "title": "ShiftRecommendationsRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0439 \u043f\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u0441\u043c\u0435\u043d"
      },
      "SimpleLoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "remember_me": {
            "type": "boolean",
            "title": "Remember Me",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "SimpleLoginRequest",
        "description": "\u041f\u0440\u043e\u0441\u0442\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430"
      },
      "SimpleLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "user": {
            "type": "object",
            "title": "User"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in",
          "user"
        ],
        "title": "SimpleLoginResponse",
        "description": "\u041f\u0440\u043e\u0441\u0442\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430"
      },
      "StatisticsResponse": {
        "properties": {
          "total_measurements": {
            "type": "integer",
            "title": "Total Measurements"
          },
          "last_measurement": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Measurement"
          },
          "average_quality": {
            "type": "number",
            "title": "Average Quality"
          },
          "measurements_today": {
            "type": "integer",
            "title": "Measurements Today"
          },
          "measurements_this_week": {
            "type": "integer",
            "title": "Measurements This Week"
          }
        },
        "type": "object",
        "required": [
          "total_measurements",
          "average_quality",
          "measurements_today",
          "measurements_this_week"
        ],
        "title": "StatisticsResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u043e\u0439 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430"
      },
      "SurgicalRiskRequest": {
        "properties": {
          "patient_profile": {
            "type": "object",
            "title": "Patient Profile"
          },
          "surgery_type": {
            "type": "string",
            "title": "Surgery Type"
          },
          "anesthesia_type": {
            "type": "string",
            "title": "Anesthesia Type"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_profile",
          "surgery_type",
          "anesthesia_type"
        ],
        "title": "SurgicalRiskRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0443 \u0445\u0438\u0440\u0443\u0440\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0438\u0441\u043a\u043e\u0432"
      },
      "SymptomAnalysisRequest": {
        "properties": {
          "symptoms": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Symptoms"
          },
          "severity": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Severity"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "symptoms"
        ],
        "title": "SymptomAnalysisRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0430\u043d\u0430\u043b\u0438\u0437 \u0441\u0438\u043c\u043f\u0442\u043e\u043c\u043e\u0432"
      },
      "SystemAlertRequest": {
        "properties": {
          "alert_type": {
            "type": "string",
            "title": "Alert Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "\u0422\u0435\u043a\u0441\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442",
            "default": "normal"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department",
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        },
        "type": "object",
        "required": [
          "alert_type",
          "message"
        ],
        "title": "SystemAlertRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
      },
      "SystemInfoOut": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 100,
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id"
        ],
        "title": "SystemInfoOut"
      },
      "SystemWebhookStats": {
        "properties": {
          "total_webhooks": {
            "type": "integer",
            "title": "Total Webhooks"
          },
          "active_webhooks": {
            "type": "integer",
            "title": "Active Webhooks"
          },
          "inactive_webhooks": {
            "type": "integer",
            "title": "Inactive Webhooks"
          },
          "recent_24h": {
            "type": "object",
            "title": "Recent 24H"
          },
          "pending_retries": {
            "type": "integer",
            "title": "Pending Retries"
          },
          "unprocessed_events": {
            "type": "integer",
            "title": "Unprocessed Events"
          }
        },
        "type": "object",
        "required": [
          "total_webhooks",
          "active_webhooks",
          "inactive_webhooks",
          "recent_24h",
          "pending_retries",
          "unprocessed_events"
        ],
        "title": "SystemWebhookStats",
        "description": "\u041e\u0431\u0449\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u044b webhook'\u043e\u0432"
      },
      "TelegramBotStatsResponse": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "active_users": {
            "type": "integer",
            "title": "Active Users"
          },
          "admin_users": {
            "type": "integer",
            "title": "Admin Users"
          },
          "messages_sent_today": {
            "type": "integer",
            "title": "Messages Sent Today"
          },
          "commands_processed_today": {
            "type": "integer",
            "title": "Commands Processed Today"
          }
        },
        "type": "object",
        "required": [
          "total_users",
          "active_users",
          "admin_users",
          "messages_sent_today",
          "commands_processed_today"
        ],
        "title": "TelegramBotStatsResponse",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 Telegram \u0431\u043e\u0442\u0430"
      },
      "TelegramConfirmRequest": {
        "properties": {
          "token": {
            "type": "string",
            "minLength": 10,
            "title": "Token"
          },
          "telegram_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram User Id"
          },
          "telegram_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Username"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "TelegramConfirmRequest"
      },
      "TelegramNotificationRequest": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ids"
          },
          "send_to_all_admins": {
            "type": "boolean",
            "title": "Send To All Admins",
            "default": false
          },
          "send_to_all_users": {
            "type": "boolean",
            "title": "Send To All Users",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "TelegramNotificationRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 Telegram \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
      },
      "TestProviderRequest": {
        "properties": {
          "provider": {
            "type": "string",
            "pattern": "^(click|payme)$",
            "title": "Provider"
          },
          "config": {
            "type": "object",
            "title": "Config"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "config"
        ],
        "title": "TestProviderRequest"
      },
      "TestProviderResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "details": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "TestProviderResponse"
      },
      "TextStructuringRequest": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "document_type": {
            "type": "string",
            "title": "Document Type"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "text",
          "document_type"
        ],
        "title": "TextStructuringRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430"
      },
      "Theme": {
        "type": "string",
        "enum": [
          "light",
          "dark",
          "auto"
        ],
        "title": "Theme",
        "description": "\u0422\u0435\u043c\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430"
      },
      "TimeFormat": {
        "type": "string",
        "enum": [
          "12",
          "24"
        ],
        "title": "TimeFormat",
        "description": "\u0424\u043e\u0440\u043c\u0430\u0442\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438"
      },
      "TrainingDatasetRequest": {
        "properties": {
          "data_type": {
            "type": "string",
            "title": "Data Type",
            "description": "\u0422\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445: diagnostic_patterns, treatment_outcomes, patient_symptoms, scheduling_patterns"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date",
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          "end_date": {
            "type": "string",
            "title": "End Date",
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          "anonymize": {
            "type": "boolean",
            "title": "Anonymize",
            "description": "\u0410\u043d\u043e\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "data_type",
          "start_date",
          "end_date"
        ],
        "title": "TrainingDatasetRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430"
      },
      "TrainingDatasetResponse": {
        "properties": {
          "data_type": {
            "type": "string",
            "title": "Data Type"
          },
          "period": {
            "type": "object",
            "title": "Period"
          },
          "anonymized": {
            "type": "boolean",
            "title": "Anonymized"
          },
          "generated_at": {
            "type": "string",
            "title": "Generated At"
          },
          "records_count": {
            "type": "integer",
            "title": "Records Count"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Features"
          },
          "quality_score": {
            "type": "number",
            "title": "Quality Score"
          },
          "privacy_compliance": {
            "type": "object",
            "title": "Privacy Compliance"
          },
          "dataset_path": {
            "type": "string",
            "title": "Dataset Path"
          }
        },
        "type": "object",
        "required": [
          "data_type",
          "period",
          "anonymized",
          "generated_at",
          "records_count",
          "features",
          "quality_score",
          "privacy_compliance",
          "dataset_path"
        ],
        "title": "TrainingDatasetResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435"
      },
      "TransferConfirmationRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "\u0422\u043e\u043a\u0435\u043d \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "TransferConfirmationRequest"
      },
      "TreatmentEffectivenessRequest": {
        "properties": {
          "treatment_history": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Treatment History"
          },
          "patient_response": {
            "type": "object",
            "title": "Patient Response"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "treatment_history",
          "patient_response"
        ],
        "title": "TreatmentEffectivenessRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0443 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043b\u0435\u0447\u0435\u043d\u0438\u044f"
      },
      "TreatmentPlanRequest": {
        "properties": {
          "patient_data": {
            "type": "object",
            "title": "Patient Data"
          },
          "diagnosis": {
            "type": "string",
            "title": "Diagnosis"
          },
          "medical_history": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Medical History"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "patient_data",
          "diagnosis"
        ],
        "title": "TreatmentPlanRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u043f\u043b\u0430\u043d\u0430 \u043b\u0435\u0447\u0435\u043d\u0438\u044f"
      },
      "TwoFactorBackupCodesResponse": {
        "properties": {
          "backup_codes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Backup Codes"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "backup_codes",
          "total",
          "generated_at"
        ],
        "title": "TwoFactorBackupCodesResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c backup \u043a\u043e\u0434\u043e\u0432"
      },
      "TwoFactorDeviceListResponse": {
        "properties": {
          "devices": {
            "items": {
              "$ref": "#/components/schemas/TwoFactorDeviceOut"
            },
            "type": "array",
            "title": "Devices"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "devices",
          "total"
        ],
        "title": "TwoFactorDeviceListResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 2FA"
      },
      "TwoFactorDeviceOut": {
        "properties": {
          "device_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Device Name"
          },
          "device_type": {
            "type": "string",
            "pattern": "^(mobile|desktop|tablet)$",
            "title": "Device Type"
          },
          "device_fingerprint": {
            "type": "string",
            "maxLength": 64,
            "minLength": 32,
            "title": "Device Fingerprint"
          },
          "trusted": {
            "type": "boolean",
            "title": "Trusted",
            "default": false
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_used": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          }
        },
        "type": "object",
        "required": [
          "device_name",
          "device_type",
          "device_fingerprint",
          "id",
          "user_id",
          "created_at"
        ],
        "title": "TwoFactorDeviceOut",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 2FA"
      },
      "TwoFactorDisableRequest": {
        "properties": {
          "password": {
            "type": "string",
            "minLength": 1,
            "title": "Password"
          },
          "totp_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 6,
                "minLength": 6
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Code"
          },
          "backup_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10,
                "minLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Code"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "TwoFactorDisableRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 2FA"
      },
      "TwoFactorRecoveryRequest": {
        "properties": {
          "recovery_type": {
            "type": "string",
            "pattern": "^(email|phone|backup_code)$",
            "title": "Recovery Type"
          },
          "recovery_value": {
            "type": "string",
            "maxLength": 255,
            "title": "Recovery Value"
          },
          "device_fingerprint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Fingerprint"
          }
        },
        "type": "object",
        "required": [
          "recovery_type",
          "recovery_value"
        ],
        "title": "TwoFactorRecoveryRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 2FA"
      },
      "TwoFactorRecoveryResponse": {
        "properties": {
          "recovery_token": {
            "type": "string",
            "title": "Recovery Token"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "recovery_token",
          "expires_at",
          "message"
        ],
        "title": "TwoFactorRecoveryResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f 2FA"
      },
      "TwoFactorSetupRequest": {
        "properties": {
          "recovery_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Recovery Email"
          },
          "recovery_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Recovery Phone"
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(mobile|desktop|tablet)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          }
        },
        "type": "object",
        "title": "TwoFactorSetupRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 2FA"
      },
      "TwoFactorSetupResponse": {
        "properties": {
          "qr_code_url": {
            "type": "string",
            "title": "Qr Code Url"
          },
          "secret_key": {
            "type": "string",
            "title": "Secret Key"
          },
          "backup_codes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Backup Codes"
          },
          "recovery_token": {
            "type": "string",
            "title": "Recovery Token"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "qr_code_url",
          "secret_key",
          "backup_codes",
          "recovery_token",
          "expires_at"
        ],
        "title": "TwoFactorSetupResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 2FA"
      },
      "TwoFactorStatusResponse": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "totp_enabled": {
            "type": "boolean",
            "title": "Totp Enabled"
          },
          "totp_verified": {
            "type": "boolean",
            "title": "Totp Verified"
          },
          "backup_codes_generated": {
            "type": "boolean",
            "title": "Backup Codes Generated"
          },
          "backup_codes_count": {
            "type": "integer",
            "title": "Backup Codes Count"
          },
          "recovery_enabled": {
            "type": "boolean",
            "title": "Recovery Enabled"
          },
          "recovery_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recovery Email"
          },
          "recovery_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recovery Phone"
          },
          "trusted_devices_count": {
            "type": "integer",
            "title": "Trusted Devices Count"
          },
          "last_used": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used"
          }
        },
        "type": "object",
        "required": [
          "enabled",
          "totp_enabled",
          "totp_verified",
          "backup_codes_generated",
          "backup_codes_count",
          "recovery_enabled",
          "trusted_devices_count"
        ],
        "title": "TwoFactorStatusResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c 2FA"
      },
      "TwoFactorSuccessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "TwoFactorSuccessResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430 2FA"
      },
      "TwoFactorVerifyRequest": {
        "properties": {
          "totp_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 6,
                "minLength": 6
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Code"
          },
          "backup_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10,
                "minLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Code"
          },
          "recovery_token": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Recovery Token"
          },
          "device_fingerprint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Fingerprint"
          },
          "remember_device": {
            "type": "boolean",
            "title": "Remember Device",
            "default": false
          },
          "pending_2fa_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pending 2Fa Token"
          }
        },
        "type": "object",
        "title": "TwoFactorVerifyRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e 2FA"
      },
      "TwoFactorVerifyResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "session_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Token"
          },
          "device_trusted": {
            "type": "boolean",
            "title": "Device Trusted",
            "default": false
          },
          "backup_codes_remaining": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Codes Remaining"
          },
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "token_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Type"
          },
          "expires_in": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "TwoFactorVerifyResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e 2FA"
      },
      "UpdatePhoneRequest": {
        "properties": {
          "new_phone": {
            "type": "string",
            "title": "New Phone"
          },
          "verification_code": {
            "type": "string",
            "title": "Verification Code"
          }
        },
        "type": "object",
        "required": [
          "new_phone",
          "verification_code"
        ],
        "title": "UpdatePhoneRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430"
      },
      "UserActivityResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "activity_type": {
            "type": "string",
            "title": "Activity Type"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "activity_type",
          "created_at"
        ],
        "title": "UserActivityResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserAuditLogResponse": {
        "properties": {
          "action": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Action"
          },
          "resource_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Type"
          },
          "resource_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "old_values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Values"
          },
          "new_values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Values"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "action",
          "id",
          "user_id",
          "created_at"
        ],
        "title": "UserAuditLogResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0430\u0443\u0434\u0438\u0442\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserBulkActionRequest": {
        "properties": {
          "user_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "User Ids"
          },
          "action": {
            "type": "string",
            "pattern": "^(activate|deactivate|suspend|unsuspend|delete|change_role)$",
            "title": "Action"
          },
          "role": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(Admin|Doctor|Nurse|Receptionist|Patient)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "user_ids",
          "action"
        ],
        "title": "UserBulkActionRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043c\u0430\u0441\u0441\u043e\u0432\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438"
      },
      "UserBulkActionResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "processed_count": {
            "type": "integer",
            "title": "Processed Count"
          },
          "failed_count": {
            "type": "integer",
            "title": "Failed Count"
          },
          "failed_users": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Failed Users",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "processed_count",
          "failed_count"
        ],
        "title": "UserBulkActionResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043c\u0430\u0441\u0441\u043e\u0432\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439"
      },
      "UserCreateRequest": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 8,
            "title": "Password"
          },
          "role": {
            "type": "string",
            "pattern": "^(Admin|Doctor|Nurse|Receptionist|Patient)$",
            "title": "Role"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "role"
        ],
        "title": "UserCreateRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserDataSummaryResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "data_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Data Counts"
          },
          "transferable_data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Transferable Data"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "username",
          "full_name",
          "email",
          "phone",
          "patient_id",
          "data_counts",
          "transferable_data"
        ],
        "title": "UserDataSummaryResponse"
      },
      "UserExportRequest": {
        "properties": {
          "format": {
            "type": "string",
            "pattern": "^(csv|excel|json|pdf)$",
            "title": "Format"
          },
          "fields": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserSearchRequest"
              },
              {
                "type": "null"
              }
            ]
          },
          "include_profile": {
            "type": "boolean",
            "title": "Include Profile",
            "default": false
          },
          "include_preferences": {
            "type": "boolean",
            "title": "Include Preferences",
            "default": false
          },
          "include_audit_logs": {
            "type": "boolean",
            "title": "Include Audit Logs",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "UserExportRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439"
      },
      "UserExportResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "file_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Url"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          },
          "record_count": {
            "type": "integer",
            "title": "Record Count"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "record_count"
        ],
        "title": "UserExportResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439"
      },
      "UserListResponse": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            },
            "type": "array",
            "title": "Users"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "users",
          "total",
          "page",
          "per_page",
          "total_pages"
        ],
        "title": "UserListResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439"
      },
      "UserNotificationSettingsResponse": {
        "properties": {
          "email_appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Reminder",
            "default": true
          },
          "email_appointment_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Cancellation",
            "default": true
          },
          "email_appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Confirmation",
            "default": true
          },
          "email_payment_receipt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Payment Receipt",
            "default": true
          },
          "email_payment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Payment Reminder",
            "default": true
          },
          "email_system_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email System Updates",
            "default": true
          },
          "email_security_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Security Alerts",
            "default": true
          },
          "email_newsletter": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Newsletter",
            "default": false
          },
          "sms_appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Reminder",
            "default": false
          },
          "sms_appointment_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Cancellation",
            "default": false
          },
          "sms_appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Confirmation",
            "default": false
          },
          "sms_payment_receipt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Payment Receipt",
            "default": false
          },
          "sms_emergency": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Emergency",
            "default": true
          },
          "push_appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Appointment Reminder",
            "default": true
          },
          "push_appointment_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Appointment Cancellation",
            "default": true
          },
          "push_appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Appointment Confirmation",
            "default": true
          },
          "push_payment_receipt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Payment Receipt",
            "default": true
          },
          "push_system_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push System Updates",
            "default": true
          },
          "push_security_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Security Alerts",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "profile_id": {
            "type": "integer",
            "title": "Profile Id"
          },
          "reminder_time_before": {
            "type": "integer",
            "title": "Reminder Time Before"
          },
          "quiet_hours_start": {
            "type": "string",
            "title": "Quiet Hours Start"
          },
          "quiet_hours_end": {
            "type": "string",
            "title": "Quiet Hours End"
          },
          "weekend_notifications": {
            "type": "boolean",
            "title": "Weekend Notifications"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "profile_id",
          "reminder_time_before",
          "quiet_hours_start",
          "quiet_hours_end",
          "weekend_notifications",
          "created_at",
          "updated_at"
        ],
        "title": "UserNotificationSettingsResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"
      },
      "UserNotificationSettingsUpdate": {
        "properties": {
          "email_appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Reminder",
            "default": true
          },
          "email_appointment_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Cancellation",
            "default": true
          },
          "email_appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Confirmation",
            "default": true
          },
          "email_payment_receipt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Payment Receipt",
            "default": true
          },
          "email_payment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Payment Reminder",
            "default": true
          },
          "email_system_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email System Updates",
            "default": true
          },
          "email_security_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Security Alerts",
            "default": true
          },
          "email_newsletter": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Newsletter",
            "default": false
          },
          "sms_appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Reminder",
            "default": false
          },
          "sms_appointment_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Cancellation",
            "default": false
          },
          "sms_appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Confirmation",
            "default": false
          },
          "sms_payment_receipt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Payment Receipt",
            "default": false
          },
          "sms_emergency": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Emergency",
            "default": true
          },
          "push_appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Appointment Reminder",
            "default": true
          },
          "push_appointment_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Appointment Cancellation",
            "default": true
          },
          "push_appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Appointment Confirmation",
            "default": true
          },
          "push_payment_receipt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Payment Receipt",
            "default": true
          },
          "push_system_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push System Updates",
            "default": true
          },
          "push_security_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Security Alerts",
            "default": true
          },
          "reminder_time_before": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10080.0,
                "minimum": 5.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder Time Before"
          },
          "quiet_hours_start": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours Start"
          },
          "quiet_hours_end": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours End"
          },
          "weekend_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weekend Notifications",
            "default": false
          }
        },
        "type": "object",
        "title": "UserNotificationSettingsUpdate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"
      },
      "UserPermissionsResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "permissions_count": {
            "type": "integer",
            "title": "Permissions Count"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Roles"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Groups"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "username",
          "permissions",
          "permissions_count",
          "roles",
          "groups"
        ],
        "title": "UserPermissionsResponse"
      },
      "UserPreferencesResponse": {
        "properties": {
          "theme": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Theme"
              },
              {
                "type": "null"
              }
            ],
            "default": "light"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "date_format": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Format"
          },
          "time_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimeFormat"
              },
              {
                "type": "null"
              }
            ],
            "default": "24"
          },
          "email_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Notifications",
            "default": true
          },
          "sms_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Notifications",
            "default": false
          },
          "push_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Notifications",
            "default": true
          },
          "desktop_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Desktop Notifications",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "profile_id": {
            "type": "integer",
            "title": "Profile Id"
          },
          "working_hours_start": {
            "type": "string",
            "title": "Working Hours Start"
          },
          "working_hours_end": {
            "type": "string",
            "title": "Working Hours End"
          },
          "working_days": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Working Days"
          },
          "break_duration": {
            "type": "integer",
            "title": "Break Duration"
          },
          "dashboard_layout": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dashboard Layout"
          },
          "sidebar_collapsed": {
            "type": "boolean",
            "title": "Sidebar Collapsed"
          },
          "compact_mode": {
            "type": "boolean",
            "title": "Compact Mode"
          },
          "show_tooltips": {
            "type": "boolean",
            "title": "Show Tooltips"
          },
          "session_timeout": {
            "type": "integer",
            "title": "Session Timeout"
          },
          "require_2fa": {
            "type": "boolean",
            "title": "Require 2Fa"
          },
          "auto_logout": {
            "type": "boolean",
            "title": "Auto Logout"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "profile_id",
          "working_hours_start",
          "working_hours_end",
          "working_days",
          "break_duration",
          "sidebar_collapsed",
          "compact_mode",
          "show_tooltips",
          "session_timeout",
          "require_2fa",
          "auto_logout",
          "created_at",
          "updated_at"
        ],
        "title": "UserPreferencesResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserPreferencesUpdate": {
        "properties": {
          "theme": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Theme"
              },
              {
                "type": "null"
              }
            ],
            "default": "light"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "date_format": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Format"
          },
          "time_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimeFormat"
              },
              {
                "type": "null"
              }
            ],
            "default": "24"
          },
          "email_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Notifications",
            "default": true
          },
          "sms_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Notifications",
            "default": false
          },
          "push_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Notifications",
            "default": true
          },
          "desktop_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Desktop Notifications",
            "default": true
          },
          "working_hours_start": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Hours Start"
          },
          "working_hours_end": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Hours End"
          },
          "working_days": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array",
                "maxItems": 7,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Days"
          },
          "break_duration": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Break Duration"
          },
          "dashboard_layout": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dashboard Layout"
          },
          "sidebar_collapsed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sidebar Collapsed",
            "default": false
          },
          "compact_mode": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compact Mode",
            "default": false
          },
          "show_tooltips": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Tooltips",
            "default": true
          },
          "session_timeout": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 5.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Timeout"
          },
          "require_2fa": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require 2Fa",
            "default": false
          },
          "auto_logout": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Logout",
            "default": true
          }
        },
        "type": "object",
        "title": "UserPreferencesUpdate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserProfileUpdate": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "middle_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "nationality": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Nationality"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          }
        },
        "type": "object",
        "title": "UserProfileUpdate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserProfileUpdateRequest": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "title": "UserProfileUpdateRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "profile": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__user_management__UserProfileResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserPreferencesResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "notification_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserNotificationSettingsResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "role",
          "is_active",
          "is_superuser"
        ],
        "title": "UserResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserSearchRequest": {
        "properties": {
          "query": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "role": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(Admin|Doctor|Nurse|Receptionist|Patient)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "created_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created From"
          },
          "created_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created To"
          },
          "last_login_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login From"
          },
          "last_login_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login To"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page",
            "default": 1
          },
          "per_page": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Per Page",
            "default": 20
          }
        },
        "type": "object",
        "title": "UserSearchRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439"
      },
      "UserSessionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time",
            "title": "Last Activity"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name"
          },
          "current_session": {
            "type": "boolean",
            "title": "Current Session",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "session_id",
          "created_at",
          "last_activity",
          "expires_at",
          "is_active"
        ],
        "title": "UserSessionResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserStatsResponse": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "active_users": {
            "type": "integer",
            "title": "Active Users"
          },
          "inactive_users": {
            "type": "integer",
            "title": "Inactive Users"
          },
          "suspended_users": {
            "type": "integer",
            "title": "Suspended Users"
          },
          "locked_users": {
            "type": "integer",
            "title": "Locked Users"
          },
          "users_by_role": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Users By Role"
          },
          "users_with_profiles": {
            "type": "integer",
            "title": "Users With Profiles"
          },
          "users_with_2fa": {
            "type": "integer",
            "title": "Users With 2Fa"
          },
          "recent_registrations": {
            "type": "integer",
            "title": "Recent Registrations"
          },
          "recent_logins": {
            "type": "integer",
            "title": "Recent Logins"
          }
        },
        "type": "object",
        "required": [
          "total_users",
          "active_users",
          "inactive_users",
          "suspended_users",
          "locked_users",
          "users_by_role",
          "users_with_profiles",
          "users_with_2fa",
          "recent_registrations",
          "recent_logins"
        ],
        "title": "UserStatsResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439"
      },
      "UserStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "suspended",
          "pending",
          "locked"
        ],
        "title": "UserStatus",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "UserUpdateRequest": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "role": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(Admin|Doctor|Nurse|Receptionist|Patient)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "title": "UserUpdateRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerifyCodeRequest": {
        "properties": {
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "purpose": {
            "type": "string",
            "title": "Purpose",
            "default": "verification"
          }
        },
        "type": "object",
        "required": [
          "phone",
          "code"
        ],
        "title": "VerifyCodeRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043a\u043e\u0434\u0430 \u0432\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"
      },
      "VisitCreate": {
        "properties": {
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "planned_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Date"
          }
        },
        "type": "object",
        "title": "VisitCreate"
      },
      "VisitOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "planned_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Date"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "title": "VisitOut"
      },
      "VisitRequest": {
        "properties": {
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/ServiceItemRequest"
            },
            "type": "array",
            "title": "Services"
          },
          "visit_date": {
            "type": "string",
            "format": "date",
            "title": "Visit Date"
          },
          "visit_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Time"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "services",
          "visit_date"
        ],
        "title": "VisitRequest"
      },
      "VisitResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "patient_fio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Fio"
          },
          "patient_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Phone"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "doctor_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Name"
          },
          "doctor_specialty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Specialty"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "visit_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Date"
          },
          "visit_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Time"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "discount_mode": {
            "type": "string",
            "title": "Discount Mode"
          },
          "approval_status": {
            "type": "string",
            "title": "Approval Status"
          },
          "services": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "patient_id",
          "status",
          "discount_mode",
          "approval_status",
          "created_at"
        ],
        "title": "VisitResponse"
      },
      "VisitServiceIn": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "price": {
            "type": "number",
            "title": "Price",
            "default": 0.0
          },
          "qty": {
            "type": "integer",
            "title": "Qty",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "VisitServiceIn"
      },
      "VisitWithServices": {
        "properties": {
          "visit": {
            "$ref": "#/components/schemas/VisitOut"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/VisitServiceIn"
            },
            "type": "array",
            "title": "Services"
          }
        },
        "type": "object",
        "required": [
          "visit",
          "services"
        ],
        "title": "VisitWithServices"
      },
      "WaitTimeAnalyticsResponse": {
        "properties": {
          "period": {
            "type": "object",
            "title": "Period"
          },
          "overall_stats": {
            "$ref": "#/components/schemas/WaitTimeStatsResponse"
          },
          "department_breakdown": {
            "type": "object",
            "title": "Department Breakdown"
          },
          "doctor_breakdown": {
            "type": "object",
            "title": "Doctor Breakdown"
          },
          "hourly_breakdown": {
            "type": "object",
            "title": "Hourly Breakdown"
          },
          "daily_breakdown": {
            "type": "object",
            "title": "Daily Breakdown"
          },
          "trends": {
            "type": "object",
            "title": "Trends"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          }
        },
        "type": "object",
        "required": [
          "period",
          "overall_stats",
          "department_breakdown",
          "doctor_breakdown",
          "hourly_breakdown",
          "daily_breakdown",
          "trends",
          "recommendations"
        ],
        "title": "WaitTimeAnalyticsResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u043f\u043e\u043b\u043d\u043e\u0439 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u043e\u0439 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f"
      },
      "WaitTimeStatsResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "average_minutes": {
            "type": "number",
            "title": "Average Minutes"
          },
          "median_minutes": {
            "type": "number",
            "title": "Median Minutes"
          },
          "min_minutes": {
            "type": "number",
            "title": "Min Minutes"
          },
          "max_minutes": {
            "type": "number",
            "title": "Max Minutes"
          },
          "std_deviation": {
            "type": "number",
            "title": "Std Deviation"
          },
          "percentile_75": {
            "type": "number",
            "title": "Percentile 75"
          },
          "percentile_90": {
            "type": "number",
            "title": "Percentile 90"
          },
          "percentile_95": {
            "type": "number",
            "title": "Percentile 95"
          }
        },
        "type": "object",
        "required": [
          "count",
          "average_minutes",
          "median_minutes",
          "min_minutes",
          "max_minutes",
          "std_deviation",
          "percentile_75",
          "percentile_90",
          "percentile_95"
        ],
        "title": "WaitTimeStatsResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u0441\u043e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u043e\u0439 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f"
      },
      "Webhook": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/WebhookEventTypeEnum"
            },
            "type": "array",
            "title": "Events"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers",
            "default": {}
          },
          "secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 3
          },
          "retry_delay": {
            "type": "integer",
            "title": "Retry Delay",
            "default": 60
          },
          "timeout": {
            "type": "integer",
            "title": "Timeout",
            "default": 30
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "default": {}
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "status": {
            "$ref": "#/components/schemas/WebhookStatusEnum"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "total_calls": {
            "type": "integer",
            "title": "Total Calls"
          },
          "successful_calls": {
            "type": "integer",
            "title": "Successful Calls"
          },
          "failed_calls": {
            "type": "integer",
            "title": "Failed Calls"
          },
          "last_call_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Call At"
          },
          "last_success_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Success At"
          },
          "last_failure_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Failure At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "url",
          "events",
          "id",
          "uuid",
          "status",
          "is_active",
          "total_calls",
          "successful_calls",
          "failed_calls",
          "created_at"
        ],
        "title": "Webhook",
        "description": "\u041f\u0443\u0431\u043b\u0438\u0447\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 webhook'\u0430"
      },
      "WebhookBulkAction": {
        "properties": {
          "webhook_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Webhook Ids"
          },
          "action": {
            "type": "string",
            "title": "Action"
          }
        },
        "type": "object",
        "required": [
          "webhook_ids",
          "action"
        ],
        "title": "WebhookBulkAction",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043d\u0430\u0434 webhook'\u0430\u043c\u0438"
      },
      "WebhookBulkActionResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "processed": {
            "type": "integer",
            "title": "Processed"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "success",
          "processed",
          "failed"
        ],
        "title": "WebhookBulkActionResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435"
      },
      "WebhookCall": {
        "properties": {
          "webhook_id": {
            "type": "integer",
            "title": "Webhook Id"
          },
          "event_type": {
            "$ref": "#/components/schemas/WebhookEventTypeEnum"
          },
          "event_data": {
            "type": "object",
            "title": "Event Data"
          },
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "method": {
            "type": "string",
            "title": "Method",
            "default": "POST"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers",
            "default": {}
          },
          "payload": {
            "type": "object",
            "title": "Payload"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "status": {
            "$ref": "#/components/schemas/WebhookCallStatusEnum"
          },
          "response_status_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Status Code"
          },
          "response_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Headers",
            "default": {}
          },
          "response_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Body"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "attempt_number": {
            "type": "integer",
            "title": "Attempt Number"
          },
          "max_attempts": {
            "type": "integer",
            "title": "Max Attempts"
          },
          "next_retry_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Retry At"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "webhook_id",
          "event_type",
          "event_data",
          "url",
          "payload",
          "id",
          "uuid",
          "status",
          "attempt_number",
          "max_attempts",
          "created_at"
        ],
        "title": "WebhookCall",
        "description": "\u041f\u0443\u0431\u043b\u0438\u0447\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u0432\u044b\u0437\u043e\u0432\u0430 webhook'\u0430"
      },
      "WebhookCallListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WebhookCall"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "WebhookCallListResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u043e\u0432 webhook'\u043e\u0432"
      },
      "WebhookCallStatus": {
        "type": "string",
        "enum": [
          "pending",
          "success",
          "failed",
          "retrying",
          "cancelled"
        ],
        "title": "WebhookCallStatus",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441\u044b \u0432\u044b\u0437\u043e\u0432\u043e\u0432 webhook'\u043e\u0432"
      },
      "WebhookCallStatusEnum": {
        "type": "string",
        "enum": [
          "pending",
          "success",
          "failed",
          "retrying",
          "cancelled"
        ],
        "title": "WebhookCallStatusEnum",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441\u044b \u0432\u044b\u0437\u043e\u0432\u043e\u0432 webhook'\u043e\u0432"
      },
      "WebhookCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/WebhookEventTypeEnum"
            },
            "type": "array",
            "title": "Events"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers",
            "default": {}
          },
          "secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 3
          },
          "retry_delay": {
            "type": "integer",
            "title": "Retry Delay",
            "default": 60
          },
          "timeout": {
            "type": "integer",
            "title": "Timeout",
            "default": 30
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "name",
          "url",
          "events"
        ],
        "title": "WebhookCreate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f webhook'\u0430"
      },
      "WebhookEventCreate": {
        "properties": {
          "event_type": {
            "$ref": "#/components/schemas/WebhookEventTypeEnum"
          },
          "event_data": {
            "type": "object",
            "title": "Event Data"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "default": "api"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "correlation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlation Id"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "event_data"
        ],
        "title": "WebhookEventCreate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u044f webhook'\u0430"
      },
      "WebhookEventTypeEnum": {
        "type": "string",
        "enum": [
          "patient.created",
          "patient.updated",
          "patient.deleted",
          "appointment.created",
          "appointment.updated",
          "appointment.cancelled",
          "appointment.completed",
          "visit.created",
          "visit.updated",
          "visit.completed",
          "queue.entry_created",
          "queue.entry_updated",
          "queue.entry_called",
          "queue.entry_completed",
          "payment.created",
          "payment.completed",
          "payment.failed",
          "payment.refunded",
          "user.created",
          "user.updated",
          "user.deleted",
          "system.backup_completed",
          "system.backup_failed",
          "system.maintenance_start",
          "system.maintenance_end"
        ],
        "title": "WebhookEventTypeEnum",
        "description": "\u0422\u0438\u043f\u044b \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0434\u043b\u044f webhook'\u043e\u0432"
      },
      "WebhookListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Webhook"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "WebhookListResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c webhook'\u043e\u0432"
      },
      "WebhookStats": {
        "properties": {
          "webhook_id": {
            "type": "integer",
            "title": "Webhook Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "total_calls": {
            "type": "integer",
            "title": "Total Calls"
          },
          "successful_calls": {
            "type": "integer",
            "title": "Successful Calls"
          },
          "failed_calls": {
            "type": "integer",
            "title": "Failed Calls"
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate"
          },
          "last_call_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Call At"
          },
          "last_success_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Success At"
          },
          "last_failure_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Failure At"
          },
          "recent_24h": {
            "type": "object",
            "title": "Recent 24H"
          }
        },
        "type": "object",
        "required": [
          "webhook_id",
          "name",
          "status",
          "total_calls",
          "successful_calls",
          "failed_calls",
          "success_rate",
          "recent_24h"
        ],
        "title": "WebhookStats",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 webhook'\u0430"
      },
      "WebhookStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "suspended",
          "failed"
        ],
        "title": "WebhookStatus",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441\u044b webhook'\u043e\u0432"
      },
      "WebhookStatusEnum": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "suspended",
          "failed"
        ],
        "title": "WebhookStatusEnum",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441\u044b webhook'\u043e\u0432"
      },
      "WebhookTestRequest": {
        "properties": {
          "webhook_id": {
            "type": "integer",
            "title": "Webhook Id"
          },
          "event_type": {
            "$ref": "#/components/schemas/WebhookEventTypeEnum"
          },
          "test_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Data"
          }
        },
        "type": "object",
        "required": [
          "webhook_id",
          "event_type"
        ],
        "title": "WebhookTestRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 webhook'\u0430"
      },
      "WebhookTestResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "status_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Code"
          },
          "response_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time Ms"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "call_id": {
            "type": "integer",
            "title": "Call Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "call_id"
        ],
        "title": "WebhookTestResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f webhook'\u0430"
      },
      "WebhookUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WebhookEventTypeEnum"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret"
          },
          "max_retries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Retries"
          },
          "retry_delay": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retry Delay"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout"
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "WebhookUpdate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f webhook'\u0430"
      },
      "WebhookWithStats": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/WebhookEventTypeEnum"
            },
            "type": "array",
            "title": "Events"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers",
            "default": {}
          },
          "secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "default": 3
          },
          "retry_delay": {
            "type": "integer",
            "title": "Retry Delay",
            "default": 60
          },
          "timeout": {
            "type": "integer",
            "title": "Timeout",
            "default": 30
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "default": {}
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "status": {
            "$ref": "#/components/schemas/WebhookStatusEnum"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "total_calls": {
            "type": "integer",
            "title": "Total Calls"
          },
          "successful_calls": {
            "type": "integer",
            "title": "Successful Calls"
          },
          "failed_calls": {
            "type": "integer",
            "title": "Failed Calls"
          },
          "last_call_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Call At"
          },
          "last_success_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Success At"
          },
          "last_failure_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Failure At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate"
          },
          "recent_24h": {
            "type": "object",
            "title": "Recent 24H"
          }
        },
        "type": "object",
        "required": [
          "name",
          "url",
          "events",
          "id",
          "uuid",
          "status",
          "is_active",
          "total_calls",
          "successful_calls",
          "failed_calls",
          "created_at",
          "success_rate",
          "recent_24h"
        ],
        "title": "WebhookWithStats",
        "description": "Webhook \u0441\u043e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u043e\u0439"
      },
      "WeeklyScheduleUpdate": {
        "properties": {
          "schedules": {
            "items": {
              "$ref": "#/components/schemas/ScheduleBase"
            },
            "type": "array",
            "maxItems": 7,
            "title": "Schedules"
          }
        },
        "type": "object",
        "required": [
          "schedules"
        ],
        "title": "WeeklyScheduleUpdate",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043d\u0430 \u0432\u0441\u044e \u043d\u0435\u0434\u0435\u043b\u044e"
      },
      "WizardSettingsRequest": {
        "properties": {
          "use_new_wizard": {
            "type": "boolean",
            "title": "Use New Wizard",
            "description": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0442\u0435\u0440 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438",
            "default": false
          }
        },
        "type": "object",
        "title": "WizardSettingsRequest"
      },
      "WorkloadAnalysisRequest": {
        "properties": {
          "doctors_data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Doctors Data"
          },
          "time_period": {
            "type": "string",
            "title": "Time Period"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIProviderType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "doctors_data",
          "time_period"
        ],
        "title": "WorkloadAnalysisRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0430\u043d\u0430\u043b\u0438\u0437 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0447\u0435\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438"
      },
      "app__api__v1__endpoints__dental__PriceOverrideApprovalRequest": {
        "properties": {
          "action": {
            "type": "string",
            "title": "Action"
          },
          "rejection_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejection Reason"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "PriceOverrideApprovalRequest"
      },
      "app__api__v1__endpoints__password_reset__PasswordResetConfirmRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "PasswordResetConfirmRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f"
      },
      "app__api__v1__endpoints__qr_queue__QueueStatusResponse": {
        "properties": {
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "queue_length": {
            "type": "integer",
            "title": "Queue Length"
          },
          "current_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Number"
          },
          "entries": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Entries"
          }
        },
        "type": "object",
        "required": [
          "active",
          "queue_length",
          "current_number",
          "entries"
        ],
        "title": "QueueStatusResponse",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
      },
      "app__api__v1__endpoints__queue__QueueJoinRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "QueueJoinRequest"
      },
      "app__api__v1__endpoints__queue__QueueJoinResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "duplicate": {
            "type": "boolean",
            "title": "Duplicate",
            "default": false
          },
          "queue_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Info"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "QueueJoinResponse"
      },
      "app__api__v1__endpoints__queue__QueueStatusResponse": {
        "properties": {
          "queue_id": {
            "type": "integer",
            "title": "Queue Id"
          },
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day"
          },
          "specialist_name": {
            "type": "string",
            "title": "Specialist Name"
          },
          "is_open": {
            "type": "boolean",
            "title": "Is Open"
          },
          "opened_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opened At"
          },
          "total_entries": {
            "type": "integer",
            "title": "Total Entries"
          },
          "waiting_entries": {
            "type": "integer",
            "title": "Waiting Entries"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/QueueEntryResponse"
            },
            "type": "array",
            "title": "Entries"
          }
        },
        "type": "object",
        "required": [
          "queue_id",
          "day",
          "specialist_name",
          "is_open",
          "opened_at",
          "total_entries",
          "waiting_entries",
          "entries"
        ],
        "title": "QueueStatusResponse"
      },
      "app__api__v1__endpoints__queue_limits__QueueStatusResponse": {
        "properties": {
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id"
          },
          "doctor_name": {
            "type": "string",
            "title": "Doctor Name"
          },
          "specialty": {
            "type": "string",
            "title": "Specialty"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day"
          },
          "current_entries": {
            "type": "integer",
            "title": "Current Entries"
          },
          "max_entries": {
            "type": "integer",
            "title": "Max Entries"
          },
          "limit_reached": {
            "type": "boolean",
            "title": "Limit Reached"
          },
          "queue_opened": {
            "type": "boolean",
            "title": "Queue Opened"
          },
          "online_available": {
            "type": "boolean",
            "title": "Online Available"
          }
        },
        "type": "object",
        "required": [
          "doctor_id",
          "doctor_name",
          "specialty",
          "cabinet",
          "day",
          "current_entries",
          "max_entries",
          "limit_reached",
          "queue_opened",
          "online_available"
        ],
        "title": "QueueStatusResponse",
        "description": "\u0421\u0442\u0430\u0442\u0443\u0441 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0441 \u043b\u0438\u043c\u0438\u0442\u0430\u043c\u0438"
      },
      "app__api__v1__endpoints__queue_simple__QueueJoinRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "patient_name": {
            "type": "string",
            "title": "Patient Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id"
          }
        },
        "type": "object",
        "required": [
          "token",
          "patient_name"
        ],
        "title": "QueueJoinRequest"
      },
      "app__api__v1__endpoints__queue_simple__QueueJoinResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "QueueJoinResponse"
      },
      "app__api__v1__endpoints__registrar_notifications__NotificationStatsResponse": {
        "properties": {
          "total_sent": {
            "type": "integer",
            "title": "Total Sent"
          },
          "successful_deliveries": {
            "type": "integer",
            "title": "Successful Deliveries"
          },
          "failed_deliveries": {
            "type": "integer",
            "title": "Failed Deliveries"
          },
          "channels_stats": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Channels Stats"
          },
          "recent_notifications": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Recent Notifications"
          }
        },
        "type": "object",
        "required": [
          "total_sent",
          "successful_deliveries",
          "failed_deliveries",
          "channels_stats",
          "recent_notifications"
        ],
        "title": "NotificationStatsResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"
      },
      "app__api__v1__endpoints__registrar_wizard__PriceOverrideApprovalRequest": {
        "properties": {
          "override_id": {
            "type": "integer",
            "title": "Override Id"
          },
          "action": {
            "type": "string",
            "pattern": "^(approve|reject)$",
            "title": "Action"
          },
          "rejection_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejection Reason"
          }
        },
        "type": "object",
        "required": [
          "override_id",
          "action"
        ],
        "title": "PriceOverrideApprovalRequest"
      },
      "app__api__v1__endpoints__services__DoctorOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "specialty": {
            "type": "string",
            "title": "Specialty"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "specialty"
        ],
        "title": "DoctorOut"
      },
      "app__api__v1__endpoints__services__ServiceCategoryOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name_ru": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Ru"
          },
          "name_uz": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Uz"
          },
          "name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name En"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "code"
        ],
        "title": "ServiceCategoryOut"
      },
      "app__models__discount_benefits__DiscountType": {
        "type": "string",
        "enum": [
          "percentage",
          "fixed_amount",
          "buy_x_get_y",
          "loyalty_points",
          "seasonal",
          "referral"
        ],
        "title": "DiscountType",
        "description": "\u0422\u0438\u043f\u044b \u0441\u043a\u0438\u0434\u043e\u043a"
      },
      "app__models__dynamic_pricing__DiscountType": {
        "type": "string",
        "enum": [
          "percentage",
          "fixed_amount",
          "buy_x_get_y",
          "tiered"
        ],
        "title": "DiscountType",
        "description": "\u0422\u0438\u043f\u044b \u0441\u043a\u0438\u0434\u043e\u043a"
      },
      "app__schemas__authentication__PasswordResetConfirmRequest": {
        "properties": {
          "token": {
            "type": "string",
            "maxLength": 64,
            "minLength": 32,
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "PasswordResetConfirmRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0441\u0431\u0440\u043e\u0441\u0430 \u043f\u0430\u0440\u043e\u043b\u044f"
      },
      "app__schemas__authentication__UserProfileResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified"
          },
          "phone_verified": {
            "type": "boolean",
            "title": "Phone Verified"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "two_factor_enabled": {
            "type": "boolean",
            "title": "Two Factor Enabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "role",
          "is_active",
          "is_superuser",
          "email_verified",
          "phone_verified"
        ],
        "title": "UserProfileResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      },
      "app__schemas__clinic__DoctorOut": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "specialty": {
            "type": "string",
            "maxLength": 100,
            "title": "Specialty",
            "description": "cardiology, dermatology, stomatology"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "price_default": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Default"
          },
          "start_number_online": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Start Number Online",
            "default": 1
          },
          "max_online_per_day": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Max Online Per Day",
            "default": 15
          },
          "auto_close_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Close Time",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0430\u0432\u0442\u043e\u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "user": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "schedules": {
            "items": {
              "$ref": "#/components/schemas/ScheduleOut"
            },
            "type": "array",
            "title": "Schedules",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "specialty",
          "id"
        ],
        "title": "DoctorOut"
      },
      "app__schemas__clinic__ServiceCategoryOut": {
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 50,
            "title": "Code",
            "description": "consultation.cardiology, procedure.cosmetology, etc."
          },
          "name_ru": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Ru"
          },
          "name_uz": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Uz"
          },
          "name_en": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name En"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty",
            "description": "cardiology, dermatology, stomatology"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "code",
          "id"
        ],
        "title": "ServiceCategoryOut"
      },
      "app__schemas__notification__NotificationStatsResponse": {
        "properties": {
          "total_sent": {
            "type": "integer",
            "title": "Total Sent"
          },
          "successful": {
            "type": "integer",
            "title": "Successful"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "pending": {
            "type": "integer",
            "title": "Pending"
          },
          "by_channel": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Channel"
          },
          "by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Type"
          },
          "recent_activity": {
            "items": {
              "$ref": "#/components/schemas/NotificationHistory"
            },
            "type": "array",
            "title": "Recent Activity"
          }
        },
        "type": "object",
        "required": [
          "total_sent",
          "successful",
          "failed",
          "pending",
          "by_channel",
          "by_type",
          "recent_activity"
        ],
        "title": "NotificationStatsResponse"
      },
      "app__schemas__user_management__UserProfileResponse": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "middle_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "nationality": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Nationality"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "phone_verified": {
            "type": "boolean",
            "title": "Phone Verified"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified"
          },
          "alternative_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alternative Email"
          },
          "address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line1"
          },
          "address_line2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line2"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "job_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Title"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "employee_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Id"
          },
          "hire_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hire Date"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "social_links": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Social Links"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "last_activity": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Activity"
          },
          "login_count": {
            "type": "integer",
            "title": "Login Count"
          },
          "failed_login_attempts": {
            "type": "integer",
            "title": "Failed Login Attempts"
          },
          "locked_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locked Until"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "phone_verified",
          "email_verified",
          "status",
          "login_count",
          "failed_login_attempts",
          "created_at",
          "updated_at"
        ],
        "title": "UserProfileResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/auth/minimal-login"
          }
        }
      }
    }
  }
}