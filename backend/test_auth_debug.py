#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ auth endpoint
"""
from fastapi.testclient import TestClient
from app.main import app
import requests

def test_auth_debug():
    """–û—Ç–ª–∞–¥–∫–∞ auth endpoint"""
    print("üîç –û–¢–õ–ê–î–ö–ê AUTH ENDPOINT")
    print("=" * 40)
    
    # –¢–µ—Å—Ç 1: TestClient (–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å)
    print("1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ TestClient...")
    try:
        client = TestClient(app)
        response = client.post(
            "/api/v1/auth/login",
            data={"username": "admin", "password": "admin123"}
        )
        print(f"   TestClient —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("   ‚úÖ TestClient —Ä–∞–±–æ—Ç–∞–µ—Ç")
            data = response.json()
            print(f"   –¢–æ–∫–µ–Ω: {data.get('access_token', '–ù–µ—Ç')[:50]}...")
        else:
            print(f"   ‚ùå TestClient: {response.text}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ TestClient: {e}")
    
    # –¢–µ—Å—Ç 2: HTTP –∑–∞–ø—Ä–æ—Å (–ø–∞–¥–∞–µ—Ç)
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ HTTP –∑–∞–ø—Ä–æ—Å...")
    try:
        response = requests.post(
            "http://localhost:8000/api/v1/auth/login",
            data={"username": "admin", "password": "admin123"},
            timeout=10
        )
        print(f"   HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("   ‚úÖ HTTP —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   ‚ùå HTTP: {response.text}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    try:
        from app.db.session import get_db
        from sqlalchemy import text
        db = next(get_db())
        result = db.execute(text("SELECT COUNT(*) FROM users"))
        count = result.scalar()
        print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {count}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        result = db.execute(text("SELECT username, role FROM users WHERE username='admin'"))
        admin = result.fetchone()
        if admin:
            print(f"   ‚úÖ Admin –Ω–∞–π–¥–µ–Ω: {admin[0]} (—Ä–æ–ª—å: {admin[1]})")
        else:
            print("   ‚ùå Admin –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")

if __name__ == "__main__":
    test_auth_debug()
