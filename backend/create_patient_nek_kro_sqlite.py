#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ "–Ω–µ–∫ –∫—Ä–æ" —Å –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ (SQLite –≤–µ—Ä—Å–∏—è)
–î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞:
- –§–ò–û: –Ω–µ–∫ –∫—Ä–æ
- –í–æ–∑—Ä–∞—Å—Ç: 33 –≥–æ–¥–∞ (–≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è 1992)
- –¢–µ–ª–µ—Ñ–æ–Ω: +998 (92) 365-86-63
- –ê–¥—Ä–µ—Å: –∂–¥–ª–æ—Ä–ø–∞ 654
- –£—Å–ª—É–≥–∏: D01, D12 (–¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ)
- –¢–∏–ø: –ü–ª–∞—Ç–Ω—ã–π
"""

import sqlite3
import os
from datetime import date, datetime

def create_patient_nek_kro_sqlite():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏—ë–º –≤ SQLite"""

    db_path = 'clinic.db'

    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{db_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return False

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    try:
        print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ '–Ω–µ–∫ –∫—Ä–æ'...")

        # –°–æ–∑–¥–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
        cursor.execute("""
            INSERT INTO patients (first_name, last_name, middle_name, birth_date, phone, address, doc_type, doc_number, created_at)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, datetime('now'))
        """, (
            '–ù–µ–∫',
            '–ö—Ä–æ',
            None,
            '1992-01-01',
            '+998923658663',
            '–∂–¥–ª–æ—Ä–ø–∞ 654',
            'passport',
            '–ù–ï–ò–ó–í–ï–°–¢–ï–ù'
        ))

        patient_id = cursor.lastrowid
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–∞—Ü–∏–µ–Ω—Ç: ID={patient_id}")

        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏
        cursor.execute("""
            SELECT id, name, price FROM services
            WHERE service_code IN ('D01', 'D12') AND active = 1
        """)

        services = cursor.fetchall()

        if not services:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —É—Å–ª—É–≥–∏ —Å –∫–æ–¥–∞–º–∏ D01, D12. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ seed_services.py")
            return False

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã —É—Å–ª—É–≥–∏: {[s[1] for s in services]}")

        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏—ë–º
        today = date.today().strftime('%Y-%m-%d')
        total_price = sum(s[2] or 0 for s in services)

        cursor.execute("""
            INSERT INTO appointments (patient_id, department, appointment_date, appointment_time, status, visit_type,
                                   payment_type, services, payment_amount, payment_currency, notes, created_at)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'))
        """, (
            patient_id,
            'dermatology',
            today,
            '10:00',
            'scheduled',
            'paid',
            'cash',
            str([s[1] for s in services]),  # –ù–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥
            total_price,
            'UZS',
            '–°–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ –Ω–µ–∫ –∫—Ä–æ'
        ))

        appointment_id = cursor.lastrowid
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏—ë–º: ID={appointment_id}")

        # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        print("üìä –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        print(f"  üë§ –ü–∞—Ü–∏–µ–Ω—Ç: –ù–µ–∫ –ö—Ä–æ (ID: {patient_id})")
        print(f"  üìû –¢–µ–ª–µ—Ñ–æ–Ω: +998923658663")
        print(f"  üìç –ê–¥—Ä–µ—Å: –∂–¥–ª–æ—Ä–ø–∞ 654")
        print(f"  üè• –û—Ç–¥–µ–ª–µ–Ω–∏–µ: dermatology")
        print(f"  üìÖ –î–∞—Ç–∞: {today}")
        print(f"  ‚è∞ –í—Ä–µ–º—è: 10:00")
        print(f"  üí∞ –°—É–º–º–∞: {total_price} UZS")
        print(f"  üè∑Ô∏è –£—Å–ª—É–≥–∏: {', '.join([s[1] for s in services])}")
        print(f"  üí≥ –¢–∏–ø –æ–ø–ª–∞—Ç—ã: –ø–ª–∞—Ç–Ω—ã–π")

        conn.commit()
        print("\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        conn.rollback()
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    success = create_patient_nek_kro_sqlite()
    exit(0 if success else 1)
