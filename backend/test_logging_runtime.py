#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ runtime
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "app"))


def test_logging_runtime():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ runtime"""
    print("üîî –¢–µ—Å—Ç–∏—Ä—É—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ runtime...")

    try:
        print("üîî –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é queue_ws...")
        from app.ws import queue_ws

        print("‚úÖ queue_ws –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")

        print("üîî –ü—Ä–æ–≤–µ—Ä—è—é logger...")
        if hasattr(queue_ws, "log"):
            print("‚úÖ logger –Ω–∞–π–¥–µ–Ω –≤ queue_ws")
            print(f"üîî logger: {queue_ws.log}")
            print(f"üîî logger level: {queue_ws.log.level}")
            print(f"üîî logger handlers: {len(queue_ws.log.handlers)}")

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            print("üîî –¢–µ—Å—Ç–∏—Ä—É—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ...")
            queue_ws.log.info("Test log message from runtime test")
            print("‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ")

        else:
            print("‚ùå logger –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ queue_ws")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    test_logging_runtime()
