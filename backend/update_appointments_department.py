#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ department –≤ –∑–∞–ø–∏—Å—è—Ö –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–¥—É—Ä
"""

import sqlite3
import json

def update_appointments_department():
    """–û–±–Ω–æ–≤–ª—è–µ–º department –≤ –∑–∞–ø–∏—Å—è—Ö –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–¥—É—Ä"""
    conn = sqlite3.connect('clinic.db')
    cursor = conn.cursor()
    
    print("üîß –û–ë–ù–û–í–õ–Ø–ï–ú DEPARTMENT –í –ó–ê–ü–ò–°–Ø–•")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name IN ('visits', 'appointments')")
    tables = cursor.fetchall()
    print(f"üìã –ù–∞–π–¥–µ–Ω—ã —Ç–∞–±–ª–∏—Ü—ã: {[t[0] for t in tables]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º appointments
    if ('appointments',) in tables:
        print(f"\nüìã –ü–†–û–í–ï–†–Ø–ï–ú APPOINTMENTS:")
        print("-" * 30)
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º–∏
        cursor.execute("""
            SELECT id, patient_id, services, service_codes, department, created_at
            FROM appointments 
            WHERE services IS NOT NULL 
            ORDER BY created_at DESC 
            LIMIT 10
        """)
        appointments = cursor.fetchall()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(appointments)}")
        
        for appt in appointments:
            appt_id, patient_id, services_json, service_codes_json, department, created_at = appt
            print(f"\n  –ó–∞–ø–∏—Å—å {appt_id} (–ø–∞—Ü–∏–µ–Ω—Ç {patient_id}, –æ—Ç–¥–µ–ª: {department}):")
            print(f"    –£—Å–ª—É–≥–∏: {services_json}")
            print(f"    –ö–æ–¥—ã: {service_codes_json}")
            print(f"    –°–æ–∑–¥–∞–Ω–∞: {created_at}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
            has_procedures = False
            if service_codes_json:
                try:
                    codes = json.loads(service_codes_json) if isinstance(service_codes_json, str) else service_codes_json
                    procedure_codes = []
                    for code in codes:
                        if (code.startswith('P') and code[1:].isdigit()) or \
                           (code.startswith('C') and code[1:].isdigit()) or \
                           (code.startswith('D_PROC') and code[6:].isdigit()) or \
                           code.startswith('PHYS_') or \
                           code.startswith('COSM_') or \
                           code.startswith('DERM_'):
                            procedure_codes.append(code)
                            has_procedures = True
                    
                    if has_procedures:
                        print(f"    üéØ –ü—Ä–æ—Ü–µ–¥—É—Ä—ã: {procedure_codes}")
                        if department != 'procedures':
                            print(f"    ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ü—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ –æ—Ç–¥–µ–ª–µ '{department}', –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ 'procedures'")
                            
                            # –û–±–Ω–æ–≤–ª—è–µ–º department
                            cursor.execute("UPDATE appointments SET department = 'procedures' WHERE id = ?", (appt_id,))
                            print(f"    ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: department = 'procedures'")
                except Exception as e:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–¥–æ–≤: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º visits
    if ('visits',) in tables:
        print(f"\nüìã –ü–†–û–í–ï–†–Ø–ï–ú VISITS:")
        print("-" * 30)
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º–∏
        cursor.execute("""
            SELECT id, patient_id, services, service_codes, department, created_at
            FROM visits 
            WHERE services IS NOT NULL 
            ORDER BY created_at DESC 
            LIMIT 10
        """)
        visits = cursor.fetchall()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(visits)}")
        
        for visit in visits:
            visit_id, patient_id, services_json, service_codes_json, department, created_at = visit
            print(f"\n  –í–∏–∑–∏—Ç {visit_id} (–ø–∞—Ü–∏–µ–Ω—Ç {patient_id}, –æ—Ç–¥–µ–ª: {department}):")
            print(f"    –£—Å–ª—É–≥–∏: {services_json}")
            print(f"    –ö–æ–¥—ã: {service_codes_json}")
            print(f"    –°–æ–∑–¥–∞–Ω: {created_at}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
            has_procedures = False
            if service_codes_json:
                try:
                    codes = json.loads(service_codes_json) if isinstance(service_codes_json, str) else service_codes_json
                    procedure_codes = []
                    for code in codes:
                        if (code.startswith('P') and code[1:].isdigit()) or \
                           (code.startswith('C') and code[1:].isdigit()) or \
                           (code.startswith('D_PROC') and code[6:].isdigit()) or \
                           code.startswith('PHYS_') or \
                           code.startswith('COSM_') or \
                           code.startswith('DERM_'):
                            procedure_codes.append(code)
                            has_procedures = True
                    
                    if has_procedures:
                        print(f"    üéØ –ü—Ä–æ—Ü–µ–¥—É—Ä—ã: {procedure_codes}")
                        if department != 'procedures':
                            print(f"    ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ü—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ –æ—Ç–¥–µ–ª–µ '{department}', –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ 'procedures'")
                            
                            # –û–±–Ω–æ–≤–ª—è–µ–º department
                            cursor.execute("UPDATE visits SET department = 'procedures' WHERE id = ?", (visit_id,))
                            print(f"    ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: department = 'procedures'")
                except Exception as e:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–¥–æ–≤: {e}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    conn.commit()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("-" * 30)
    
    if ('appointments',) in tables:
        cursor.execute("SELECT COUNT(*) FROM appointments WHERE department = 'procedures'")
        appt_procedures = cursor.fetchone()[0]
        print(f"Appointments —Å department = 'procedures': {appt_procedures}")
    
    if ('visits',) in tables:
        cursor.execute("SELECT COUNT(*) FROM visits WHERE department = 'procedures'")
        visit_procedures = cursor.fetchone()[0]
        print(f"Visits —Å department = 'procedures': {visit_procedures}")
    
    conn.close()
    print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    update_appointments_department()
