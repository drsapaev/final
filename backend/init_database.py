#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–°–æ–∑–¥–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –±–∞–∑–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from sqlalchemy import create_engine
from app.db.base import Base
from app.models.user import User
from app.models.user_profile import UserRole, UserPermission, RolePermission, UserGroup, UserGroupMember
from app.models.authentication import RefreshToken, UserActivity, SecurityEvent, LoginAttempt
from app.core.config import settings
from passlib.context import CryptContext

# –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
engine = create_engine(settings.DATABASE_URL, echo=True)

# –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
print("üóÑÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
Base.metadata.create_all(bind=engine)

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

def get_password_hash(password: str) -> str:
    return pwd_context.hash(password)

# –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
print("üë• –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")

from sqlalchemy.orm import sessionmaker
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

db = SessionLocal()

try:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    existing_users = db.query(User).count()
    if existing_users > 0:
        print(f"‚úÖ –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    else:
        # –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏
        admin_role = UserRole(
            name="Admin",
            description="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã",
            permissions=["all"]
        )
        doctor_role = UserRole(
            name="Doctor", 
            description="–í—Ä–∞—á",
            permissions=["read_patients", "write_emr", "read_appointments"]
        )
        registrar_role = UserRole(
            name="Registrar",
            description="–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            permissions=["read_patients", "write_appointments", "read_queues"]
        )
        
        db.add_all([admin_role, doctor_role, registrar_role])
        db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID —Ä–æ–ª–µ–π
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = [
            User(
                username="admin",
                email="admin@clinic.local",
                full_name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                hashed_password=get_password_hash("admin123"),
                role="Admin",
                is_active=True,
                is_superuser=True
            ),
            User(
                username="doctor",
                email="doctor@clinic.local", 
                full_name="–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤",
                hashed_password=get_password_hash("doctor123"),
                role="Doctor",
                is_active=True,
                is_superuser=False
            ),
            User(
                username="registrar",
                email="registrar@clinic.local",
                full_name="–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–µ—Ç—Ä–æ–≤–∞", 
                hashed_password=get_password_hash("registrar123"),
                role="Registrar",
                is_active=True,
                is_superuser=False
            )
        ]
        
        db.add_all(users)
        db.commit()
        
        print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        print("  - admin / admin123 (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)")
        print("  - doctor / doctor123 (–í—Ä–∞—á)")
        print("  - registrar / registrar123 (–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä)")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    db.rollback()
finally:
    db.close()

print("üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
