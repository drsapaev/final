#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –∏—Ö department
"""

import sqlite3
import json
from datetime import date

def check_today_appointments_departments():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º department –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"""
    conn = sqlite3.connect('clinic.db')
    cursor = conn.cursor()
    
    today = date.today()
    print(f"üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–ò–°–ï–ô –ù–ê –°–ï–ì–û–î–ù–Ø ({today})")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º appointments –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    print(f"\nüìã APPOINTMENTS –ù–ê –°–ï–ì–û–î–ù–Ø:")
    print("-" * 40)
    
    cursor.execute("""
        SELECT id, patient_id, department, services, created_at
        FROM appointments 
        WHERE appointment_date = ?
        ORDER BY created_at DESC
    """, (today,))
    appointments = cursor.fetchall()
    
    print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(appointments)}")
    
    departments = {}
    for appt in appointments:
        appt_id, patient_id, department, services_json, created_at = appt
        print(f"\n  –ó–∞–ø–∏—Å—å {appt_id} (–ø–∞—Ü–∏–µ–Ω—Ç {patient_id}):")
        print(f"    –û—Ç–¥–µ–ª: {department}")
        print(f"    –£—Å–ª—É–≥–∏: {services_json}")
        print(f"    –°–æ–∑–¥–∞–Ω–∞: {created_at}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —É—Å–ª—É–≥–∏
        if services_json:
            try:
                services = json.loads(services_json) if isinstance(services_json, str) else services_json
                print(f"    –£—Å–ª—É–≥–∏ (JSON): {services}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —É—Å–ª—É–≥
                procedure_names = []
                for service in services:
                    if isinstance(service, str):
                        service_lower = service.lower()
                        if any(word in service_lower for word in [
                            '–¥–∞—Ä—Å–æ–Ω–≤–∞–ª—å', '—É—Ñ–æ', '–¥–∏–æ–¥–Ω–∞—è –º–∞—Å–∫–∞', '–±–∏–æ–ø—Ç—Ä–æ–Ω', '—ç–∫—Å–∏–º–µ—Ä –ª–∞–∑–µ—Ä',
                            '–ø–ª–∞–∑–º–æ–ª–∏—Ñ—Ç–∏–Ω–≥', '—á–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞', '–±–ª–µ—Ñ–∞—Ä–æ–ø–ª–∞—Å—Ç–∏–∫–∞', '–∂–∏—Ä–æ–≤–∏–∫', '—Ç–∞—Ç—É–∏—Ä–æ–≤–æ–∫', '–ø–∏–ª–∏–Ω–≥',
                            '–∫—Ä–∏–æ–¥–µ—Å—Ç—Ä—É–∫—Ü–∏—è', '–±–æ—Ä–æ–¥–∞–≤–æ–∫', '–ø–∞–ø–∏–ª–ª–æ–º', '–º–µ–∑–æ—Ç–µ—Ä–∞–ø–∏—è', '—Ä—É–±—Ü–æ–≤'
                        ]):
                            procedure_names.append(service)
                
                if procedure_names:
                    print(f"    üéØ –ü—Ä–æ—Ü–µ–¥—É—Ä—ã: {procedure_names}")
                    if department != 'procedures':
                        print(f"    ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ü—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ –æ—Ç–¥–µ–ª–µ '{department}', –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ 'procedures'")
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É—Å–ª—É–≥: {e}")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ –æ—Ç–¥–µ–ª–∞–º
        if department not in departments:
            departments[department] = 0
        departments[department] += 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º visits –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    print(f"\nüìã VISITS –ù–ê –°–ï–ì–û–î–ù–Ø:")
    print("-" * 40)
    
    cursor.execute("""
        SELECT id, patient_id, department, created_at
        FROM visits 
        WHERE visit_date = ?
        ORDER BY created_at DESC
    """, (today,))
    visits = cursor.fetchall()
    
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤–∏–∑–∏—Ç–æ–≤: {len(visits)}")
    
    for visit in visits:
        visit_id, patient_id, department, created_at = visit
        print(f"\n  –í–∏–∑–∏—Ç {visit_id} (–ø–∞—Ü–∏–µ–Ω—Ç {patient_id}):")
        print(f"    –û—Ç–¥–µ–ª: {department}")
        print(f"    –°–æ–∑–¥–∞–Ω: {created_at}")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ –æ—Ç–¥–µ–ª–∞–º
        if department not in departments:
            departments[department] = 0
        departments[department] += 1
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –û–¢–î–ï–õ–ê–ú:")
    print("-" * 30)
    
    for dept, count in departments.items():
        print(f"  {dept}: {count} –∑–∞–ø–∏—Å–µ–π")
    
    conn.close()

if __name__ == "__main__":
    check_today_appointments_departments()
