#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "app"))


def test_logging_simple():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ"""
    print("üîî –¢–µ—Å—Ç–∏—Ä—É—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ...")

    try:
        import logging

        print("‚úÖ logging –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        root_logger = logging.getLogger()
        print(f"üîî Root logger level: {root_logger.level}")
        print(f"üîî Root logger handlers: {len(root_logger.handlers)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º logger –¥–ª—è ws
        ws_logger = logging.getLogger("ws.queue")
        print(f"üîî WS logger level: {ws_logger.level}")
        print(f"üîî WS logger handlers: {len(ws_logger.handlers)}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        print("üîî –¢–µ—Å—Ç–∏—Ä—É—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        ws_logger.info("Test log message from test script")
        print("‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    test_logging_simple()
