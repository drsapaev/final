#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ queue_tag –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä
"""

import sqlite3

def check_procedures_queue_tags():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º queue_tag –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä"""
    conn = sqlite3.connect('clinic.db')
    cursor = conn.cursor()
    
    print("üîç –ü–†–û–í–ï–†–ö–ê QUEUE_TAG –î–õ–Ø –ü–†–û–¶–ï–î–£–†")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
    categories = ['P', 'C', 'D_PROC']
    
    for category in categories:
        print(f"\nüìã –ö–ê–¢–ï–ì–û–†–ò–Ø {category}:")
        cursor.execute("""
            SELECT id, name, service_code, category_code, queue_tag 
            FROM services 
            WHERE category_code = ? 
            ORDER BY service_code
        """, (category,))
        services = cursor.fetchall()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ —É—Å–ª—É–≥: {len(services)}")
        for service in services:
            print(f"  ID {service[0]}: {service[1]} (–∫–æ–¥: {service[2]}, –æ—á–µ—Ä–µ–¥—å: {service[4]})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ queue_tag
    print(f"\nüìä –£–ù–ò–ö–ê–õ–¨–ù–´–ï QUEUE_TAG:")
    print("-" * 30)
    
    cursor.execute("SELECT DISTINCT queue_tag FROM services WHERE category_code IN ('P', 'C', 'D_PROC')")
    queue_tags = cursor.fetchall()
    
    for tag in queue_tags:
        tag_name = tag[0] if tag[0] else 'NULL'
        cursor.execute("SELECT COUNT(*) FROM services WHERE queue_tag = ? AND category_code IN ('P', 'C', 'D_PROC')", (tag[0],))
        count = cursor.fetchone()[0]
        print(f"  {tag_name}: {count} –ø—Ä–æ—Ü–µ–¥—É—Ä")
    
    conn.close()

if __name__ == "__main__":
    check_procedures_queue_tags()
