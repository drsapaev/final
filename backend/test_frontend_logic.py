#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–¥—É—Ä
"""

def test_frontend_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–û–ì–ò–ö–ò –§–†–û–ù–¢–ï–ù–î–ê")
    print("=" * 50)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é getServiceCategoryByCode –∏–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    def getServiceCategoryByCode(serviceCode):
        if not serviceCode:
            return None

        # –≠–ö–ì - –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è (—Ç–æ–ª—å–∫–æ –≠–ö–ì)
        if serviceCode == 'ECG01' or serviceCode == 'CARD_ECG' or 'ECG' in serviceCode or '–≠–ö–ì' in serviceCode:
            return 'ECG'

        # –≠—Ö–æ–ö–ì - –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è (–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∞ –∏ –≠—Ö–æ–ö–ì)
        if serviceCode == 'K11' or serviceCode == 'CARD_ECHO' or 'ECHO' in serviceCode or '–≠—Ö–æ–ö–ì' in serviceCode:
            return 'ECHO'

        # –§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è (–¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è) - –∫–æ–¥—ã P01-P05
        if serviceCode and serviceCode.startswith('P') and serviceCode[1:].isdigit():
            return 'P'

        # –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã - –∫–æ–¥—ã D_PROC01-D_PROC04
        if serviceCode and serviceCode.startswith('D_PROC') and serviceCode[6:].isdigit():
            return 'D_PROC'

        # –ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã - –∫–æ–¥—ã C01-C12
        if serviceCode and serviceCode.startswith('C') and serviceCode[1:].isdigit():
            return 'C'

        # –ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è - –∫–æ–¥—ã K01, K11
        if serviceCode and serviceCode.startswith('K') and serviceCode[1:].isdigit():
            return 'K'

        # –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è - –∫–æ–¥—ã S01, S10
        if serviceCode and serviceCode.startswith('S') and serviceCode[1:].isdigit():
            return 'S'

        # –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è - –∫–æ–¥—ã L01-L65
        if serviceCode and serviceCode.startswith('L') and serviceCode[1:].isdigit():
            return 'L'

        # –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—è - —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (D01)
        if serviceCode == 'D01':
            return 'D'

        # –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–¥–æ–≤ (–ø—Ä–µ—Ñ–∏–∫—Å—ã) - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π
        if serviceCode.startswith('CONS_CARD'):
            return 'K'  # –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∞
        if serviceCode.startswith('CONS_DERM') or serviceCode.startswith('DERMA_'):
            return 'D'  # –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—è-–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è
        if serviceCode.startswith('CONS_DENT') or serviceCode.startswith('DENT_') or serviceCode.startswith('STOM_'):
            return 'S'  # –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è
        if serviceCode.startswith('LAB_'):
            return 'L'  # –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è
        if serviceCode.startswith('COSM_'):
            return 'C'  # –ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è
        if serviceCode.startswith('PHYSIO_'):
            return 'P'  # –§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è
        if serviceCode.startswith('DERM_PROC_'):
            return 'D_PROC'  # –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∏–∏
        if serviceCode.startswith('CARD_') and 'ECG' not in serviceCode:
            return 'K'

        return None

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∫–æ–¥—ã
    test_codes = [
        # –§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è
        'P01', 'P02', 'P03', 'P04', 'P05',
        # –ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è
        'C01', 'C02', 'C03', 'C04', 'C05', 'C06', 'C07', 'C08',
        # –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
        'D_PROC01', 'D_PROC02', 'D_PROC03',
        # –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—è (—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏)
        'D01',
        # –°—Ç–∞—Ä—ã–µ –∫–æ–¥—ã (–¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å null –∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é)
        'D10', 'D11', 'D12', 'D13', 'D14', 'D20', 'D21', 'D22'
    ]
    
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–î–û–í –£–°–õ–£–ì:")
    print("-" * 40)
    
    for code in test_codes:
        category = getServiceCategoryByCode(code)
        print(f"  {code:8} ‚Üí {category if category else 'null':8}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≤–∫–ª–∞–¥–∫–∞–º
    print(f"\nüìã –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –í–ö–õ–ê–î–ö–ê–ú:")
    print("-" * 40)
    
    departmentCategoryMapping = {
        'cardio': ['K', 'ECHO'],
        'echokg': ['ECG'],
        'derma': ['D'],
        'dental': ['S'],
        'lab': ['L'],
        'procedures': ['P', 'C', 'D_PROC']
    }
    
    for dept, categories in departmentCategoryMapping.items():
        print(f"\nüè∑Ô∏è –í–∫–ª–∞–¥–∫–∞ '{dept}':")
        matching_codes = []
        for code in test_codes:
            category = getServiceCategoryByCode(code)
            if category in categories:
                matching_codes.append(code)
        
        if matching_codes:
            for code in matching_codes:
                print(f"  ‚úÖ {code}")
        else:
            print(f"  (–Ω–µ—Ç —É—Å–ª—É–≥)")
    
    print(f"\nüéØ –ò–¢–û–ì–û –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ '–ü—Ä–æ—Ü–µ–¥—É—Ä—ã':")
    procedures_codes = []
    for code in test_codes:
        category = getServiceCategoryByCode(code)
        if category in ['P', 'C', 'D_PROC']:
            procedures_codes.append(code)
    
    print(f"  üìã –§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è (P): {len([c for c in procedures_codes if getServiceCategoryByCode(c) == 'P'])} —É—Å–ª—É–≥")
    print(f"  üíÑ –ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è (C): {len([c for c in procedures_codes if getServiceCategoryByCode(c) == 'C'])} —É—Å–ª—É–≥")
    print(f"  üî¨ –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã (D_PROC): {len([c for c in procedures_codes if getServiceCategoryByCode(c) == 'D_PROC'])} —É—Å–ª—É–≥")
    print(f"  üéØ –í–°–ï–ì–û: {len(procedures_codes)} —É—Å–ª—É–≥")

if __name__ == "__main__":
    test_frontend_logic()
