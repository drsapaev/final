#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è QR –æ—á–µ—Ä–µ–¥–µ–π
"""

import requests
import json
from datetime import datetime

BASE_URL = "http://localhost:8000"

def test_time_restrictions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è QR —Å–∏—Å—Ç–µ–º—ã"""
    
    print("üïê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π QR –æ—á–µ—Ä–µ–¥–µ–π")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    login_data = {"username": "admin", "password": "admin"}
    login_response = requests.post(f"{BASE_URL}/api/v1/authentication/login", data=login_data)
    
    if login_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")
        return
    
    token = login_response.json()["access_token"]
    headers = {"Authorization": f"Bearer {token}"}
    
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR —Ç–æ–∫–µ–Ω
    qr_data = {
        "specialist_id": 1,
        "department": "cardiology",
        "expires_hours": 24
    }
    
    qr_response = requests.post(
        f"{BASE_URL}/api/v1/admin/qr-tokens/generate",
        json=qr_data,
        headers=headers
    )
    
    if qr_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR —Ç–æ–∫–µ–Ω–∞: {qr_response.status_code}")
        print(qr_response.text)
        return
    
    qr_token = qr_response.json()["token"]
    print(f"‚úÖ QR —Ç–æ–∫–µ–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {qr_token}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–µ
    token_info_response = requests.get(f"{BASE_URL}/api/v1/qr-tokens/{qr_token}/info")
    
    if token_info_response.status_code == 200:
        token_info = token_info_response.json()
        print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–µ:")
        print(f"   - –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç: {token_info.get('specialist_name', 'N/A')}")
        print(f"   - –û—Ç–¥–µ–ª–µ–Ω–∏–µ: {token_info.get('department', 'N/A')}")
        print(f"   - –°—Ç–∞—Ç—É—Å: {token_info.get('status', 'N/A')}")
        print(f"   - –†–∞–∑—Ä–µ—à–µ–Ω–æ: {token_info.get('allowed', 'N/A')}")
        print(f"   - –°–æ–æ–±—â–µ–Ω–∏–µ: {token_info.get('message', 'N/A')}")
        
        if 'start_time' in token_info:
            print(f"   - –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {token_info['start_time']}")
        if 'end_time' in token_info:
            print(f"   - –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {token_info['end_time']}")
        if 'max_entries' in token_info:
            print(f"   - –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø–∏—Å–µ–π: {token_info['max_entries']}")
        if 'current_entries' in token_info:
            print(f"   - –¢–µ–∫—É—â–∏—Ö –∑–∞–ø–∏—Å–µ–π: {token_info['current_entries']}")
        if 'remaining_slots' in token_info:
            print(f"   - –°–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç: {token_info['remaining_slots']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–∫–µ–Ω–µ: {token_info_response.status_code}")
        print(token_info_response.text)
        return
    
    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    session_response = requests.post(f"{BASE_URL}/api/v1/queue/join/start", json={"token": qr_token})
    
    if session_response.status_code == 200:
        session_data = session_response.json()
        print(f"‚úÖ –°–µ—Å—Å–∏—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞—á–∞—Ç–∞:")
        print(f"   - –¢–æ–∫–µ–Ω —Å–µ—Å—Å–∏–∏: {session_data['session_token'][:20]}...")
        print(f"   - –ò—Å—Ç–µ–∫–∞–µ—Ç: {session_data['expires_at']}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        join_data = {
            "session_token": session_data["session_token"],
            "patient_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞—Ü–∏–µ–Ω—Ç",
            "phone": "+998901234567"
        }
        
        complete_response = requests.post(f"{BASE_URL}/api/v1/queue/join/complete", json=join_data)
        
        if complete_response.status_code == 200:
            result = complete_response.json()
            print(f"üéâ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –æ—á–µ—Ä–µ–¥–∏ —É—Å–ø–µ—à–Ω–æ:")
            print(f"   - –ù–æ–º–µ—Ä –≤ –æ—á–µ—Ä–µ–¥–∏: {result.get('queue_number', 'N/A')}")
            print(f"   - –î—É–±–ª–∏–∫–∞—Ç: {result.get('duplicate', False)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {complete_response.status_code}")
            print(complete_response.text)
    
    elif session_response.status_code == 400:
        error_data = session_response.json()
        print(f"‚ö†Ô∏è –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:")
        print(f"   - –ü—Ä–∏—á–∏–Ω–∞: {error_data.get('detail', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏: {session_response.status_code}")
        print(session_response.text)
    
    print("\n" + "=" * 60)
    print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    test_time_restrictions()
