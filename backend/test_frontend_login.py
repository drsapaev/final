#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞
"""

import time

import httpx


def test_frontend():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω
    try:
        with httpx.Client() as client:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
            response = client.get("http://localhost:5173/", timeout=5)
            print(f"‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å HTML
            if "html" in response.headers.get("content-type", ""):
                print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML")
            else:
                print("‚ö†Ô∏è  –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML")

    except httpx.ConnectError:
        print("‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:5173")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω: npm run dev")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {e}")


def test_backend():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –±—ç–∫–µ–Ω–¥"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±—ç–∫–µ–Ω–¥...")

    try:
        with httpx.Client() as client:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
            response = client.get("http://localhost:8000/", timeout=5)
            print(f"‚úÖ –ë—ç–∫–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
            response = client.get("http://localhost:8000/api/v1/", timeout=5)
            print(f"‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")

    except httpx.ConnectError:
        print("‚ùå –ë—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:8000")
        print(
            "   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω: uvicorn main:app --reload --host 0.0.0.0 --port 8000"
        )
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±—ç–∫–µ–Ω–¥–∞: {e}")


def test_login():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω...")

    try:
        with httpx.Client() as client:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω
            data = {
                "username": "admin",
                "password": "admin123",
                "grant_type": "password",
            }

            response = client.post(
                "http://localhost:8000/api/v1/auth/login", data=data, timeout=5
            )

            if response.status_code == 200:
                token_data = response.json()
                if "access_token" in token_data:
                    print("‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω")
                    print(f"   –¢–æ–∫–µ–Ω: {token_data['access_token'][:20]}...")

                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
                    headers = {"Authorization": f"Bearer {token_data['access_token']}"}
                    profile_response = client.get(
                        "http://localhost:8000/api/v1/auth/me",
                        headers=headers,
                        timeout=5,
                    )

                    if profile_response.status_code == 200:
                        print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                    else:
                        print(
                            f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {profile_response.status_code}"
                        )

                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
                    admin_response = client.get(
                        "http://localhost:8000/api/v1/admin/providers",
                        headers=headers,
                        timeout=5,
                    )

                    if admin_response.status_code == 200:
                        print("‚úÖ –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —É—Å–ø–µ—à–µ–Ω")
                    else:
                        print(
                            f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {admin_response.status_code}"
                        )
                        print(f"   –û—Ç–≤–µ—Ç: {admin_response.text}")
                else:
                    print("‚ùå –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç access_token")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ª–æ–≥–∏–Ω–∞: {e}")


if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...")
    print("=" * 50)

    test_backend()
    test_frontend()
    test_login()

    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
