#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
"""
import requests
import json
import os
from io import BytesIO

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8000"
TEST_USER = {
    "username": "admin",
    "password": "admin123"
}

def get_auth_token():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    try:
        response = requests.post(f"{BASE_URL}/api/v1/auth/login", data=TEST_USER)
        if response.status_code == 200:
            data = response.json()
            return data.get("access_token")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def test_file_upload(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞"""
    print("\nüìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_content = "This is a test file for file system testing".encode('utf-8')
    test_file = BytesIO(test_content)
    
    files = {
        'file': ('test_file.txt', test_file, 'text/plain')
    }
    
    data = {
        'file_type': 'document',
        'permission': 'private',
        'title': '–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª'
    }
    
    headers = {'Authorization': f'Bearer {token}'}
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/files/upload", files=files, data=data, headers=headers)
        if response.status_code == 200:
            file_data = response.json()
            print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: ID={file_data['id']}, —Ä–∞–∑–º–µ—Ä={file_data['file_size']} –±–∞–π—Ç")
            return file_data['id']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_file_list(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤"""
    print("\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    
    headers = {'Authorization': f'Bearer {token}'}
    
    try:
        response = requests.get(f"{BASE_URL}/api/v1/files/", headers=headers)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤: {data['total']} —Ñ–∞–π–ª–æ–≤")
            return data['files']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: {response.status_code} - {response.text}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return []

def test_file_download(token, file_id):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    print(f"\n‚¨áÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ ID={file_id}...")
    
    headers = {'Authorization': f'Bearer {token}'}
    
    try:
        response = requests.get(f"{BASE_URL}/api/v1/files/{file_id}/download", headers=headers)
        if response.status_code == 200:
            print(f"‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω: {len(response.content)} –±–∞–π—Ç")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_file_stats(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ñ–∞–π–ª–æ–≤"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ–∞–π–ª–æ–≤...")
    
    headers = {'Authorization': f'Bearer {token}'}
    
    try:
        response = requests.get(f"{BASE_URL}/api/v1/files/statistics", headers=headers)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
            print(f"   - –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {data['total_files']}")
            print(f"   - –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {data['total_size']} –±–∞–π—Ç")
            print(f"   - –ü–æ —Ç–∏–ø–∞–º: {data['files_by_type']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_file_search(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    
    headers = {'Authorization': f'Bearer {token}'}
    
    search_data = {
        "query": "—Ç–µ—Å—Ç",
        "file_type": "document",
        "page": 1,
        "size": 10
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/files/search", json=search_data, headers=headers)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω: –Ω–∞–π–¥–µ–Ω–æ {data['total']} —Ñ–∞–π–ª–æ–≤")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    token = get_auth_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
        return
    
    print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
    file_id = test_file_upload(token)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
    files = test_file_list(token)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if file_id:
        test_file_download(token, file_id)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    test_file_stats(token)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
    test_file_search(token)
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
