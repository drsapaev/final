#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã doctors –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è branch_id
"""
import sqlite3
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def migrate_doctors_branch():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ branch_id –≤ —Ç–∞–±–ª–∏—Ü—É doctors"""
    print("üîß –ú–ò–ì–†–ê–¶–ò–Ø –¢–ê–ë–õ–ò–¶–´ DOCTORS")
    print("=" * 40)
    
    try:
        conn = sqlite3.connect('clinic.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª–µ branch_id
        cursor.execute("PRAGMA table_info(doctors)")
        columns = [col[1] for col in cursor.fetchall()]
        
        if 'branch_id' in columns:
            print("‚úÖ –ü–æ–ª–µ branch_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            conn.close()
            return True
        
        print("üìã –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è branch_id...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ branch_id
        cursor.execute("ALTER TABLE doctors ADD COLUMN branch_id INTEGER")
        print("‚úÖ –ü–æ–ª–µ branch_id –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        try:
            cursor.execute("""
                CREATE TABLE doctors_new (
                    id INTEGER PRIMARY KEY,
                    user_id INTEGER,
                    specialty VARCHAR(100) NOT NULL,
                    cabinet VARCHAR(20),
                    price_default DECIMAL(10,2),
                    start_number_online INTEGER DEFAULT 1 NOT NULL,
                    max_online_per_day INTEGER DEFAULT 15 NOT NULL,
                    auto_close_time TIME DEFAULT '09:00',
                    active BOOLEAN DEFAULT 1 NOT NULL,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    branch_id INTEGER,
                    FOREIGN KEY (branch_id) REFERENCES branches (id)
                )
            """)
            
            # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            cursor.execute("""
                INSERT INTO doctors_new 
                SELECT *, NULL as branch_id FROM doctors
            """)
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é
            cursor.execute("DROP TABLE doctors")
            cursor.execute("ALTER TABLE doctors_new RENAME TO doctors")
            
            print("‚úÖ –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω")
            
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á: {e}")
            print("‚úÖ –ü–æ–ª–µ branch_id –¥–æ–±–∞–≤–ª–µ–Ω–æ –±–µ–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞")
        
        conn.commit()
        conn.close()
        
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = migrate_doctors_branch()
    sys.exit(0 if success else 1)
