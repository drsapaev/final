#!/usr/bin/env python3
"""–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è CI/CD"""

import sys
import time

sys.path.insert(0, '.')

from sqlalchemy import text

from app.core.security import get_password_hash
from app.db.base import Base
from app.db.session import engine, SessionLocal
from app.models.user import User


def test_database_creation():
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print('üîß –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')
        Base.metadata.create_all(bind=engine)
        print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ users –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–∞
        with engine.connect() as conn:
            result = conn.execute(
                text(
                    "SELECT name FROM sqlite_master WHERE type='table' AND name='users'"
                )
            )
            if not result.fetchone():
                print('‚ùå –¢–∞–±–ª–∏—Ü–∞ users –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è')
                raise Exception("–¢–∞–±–ª–∏—Ü–∞ users –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
            print('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞')

        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
        time.sleep(1)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin
        db = SessionLocal()
        try:
            existing_admin = db.query(User).filter(User.username == "admin").first()
            if not existing_admin:
                admin_user = User(
                    username="admin",
                    email="admin@clinic.com",
                    hashed_password=get_password_hash("admin123"),
                    role="Admin",
                    is_active=True,
                    is_superuser=True,
                )
                db.add(admin_user)
                db.commit()
                print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å–æ–∑–¥–∞–Ω')
            else:
                print('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        finally:
            db.close()

        print('üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!')
        return True

    except Exception as e:
        print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}')
        import traceback

        traceback.print_exc()
        return False


if __name__ == "__main__":
    success = test_database_creation()
    sys.exit(0 if success else 1)
