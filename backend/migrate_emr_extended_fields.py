#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü—É EMR
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), 'app')))

from app.db.session import engine
from sqlalchemy import text, inspect


def migrate_emr_table():
    """–î–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É EMR"""
    print("üîÑ –ú–ò–ì–†–ê–¶–ò–Ø –¢–ê–ë–õ–ò–¶–´ EMR")
    print("=" * 40)
    
    try:
        inspector = inspect(engine)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ EMR
        if 'emr' not in inspector.get_table_names():
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ EMR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        columns = inspector.get_columns('emr')
        column_names = [col['name'] for col in columns]
        
        print(f"üìä –¢–µ–∫—É—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ EMR: {len(column_names)}")
        
        # –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
        new_fields = {
            'vital_signs': 'TEXT',
            'lab_results': 'TEXT',
            'imaging_results': 'TEXT',
            'medications': 'TEXT',
            'allergies': 'TEXT',
            'family_history': 'TEXT',
            'social_history': 'TEXT',
            'ai_suggestions': 'TEXT',
            'ai_confidence': 'REAL',
            'template_id': 'INTEGER',
            'specialty': 'VARCHAR(100)',
            'updated_at': 'DATETIME',
            'saved_at': 'DATETIME'
        }
        
        with engine.connect() as conn:
            added_fields = []
            
            for field_name, field_type in new_fields.items():
                if field_name not in column_names:
                    try:
                        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ
                        conn.execute(text(f"ALTER TABLE emr ADD COLUMN {field_name} {field_type}"))
                        added_fields.append(field_name)
                        print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ: {field_name}")
                    except Exception as e:
                        print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è {field_name}: {e}")
                else:
                    print(f"   üìã –ü–æ–ª–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {field_name}")
            
            # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            conn.commit()
            
            print(f"\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            print(f"üìù –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ–π: {len(added_fields)}")
            
            if added_fields:
                print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏...")
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è JSON –ø–æ–ª–µ–π
                json_fields = ['vital_signs', 'lab_results', 'imaging_results', 
                              'medications', 'allergies', 'family_history', 
                              'social_history', 'ai_suggestions']
                
                for field in json_fields:
                    if field in added_fields:
                        conn.execute(text(f"UPDATE emr SET {field} = '{{}}' WHERE {field} IS NULL"))
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ai_confidence –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                if 'ai_confidence' in added_fields:
                    conn.execute(text("UPDATE emr SET ai_confidence = 0.0 WHERE ai_confidence IS NULL"))
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—ã
                if 'updated_at' in added_fields:
                    conn.execute(text("UPDATE emr SET updated_at = created_at WHERE updated_at IS NULL"))
                
                if 'saved_at' in added_fields:
                    conn.execute(text("UPDATE emr SET saved_at = created_at WHERE saved_at IS NULL"))
                
                conn.commit()
                print("   ‚úÖ –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False


if __name__ == "__main__":
    success = migrate_emr_table()
    sys.exit(0 if success else 1)
