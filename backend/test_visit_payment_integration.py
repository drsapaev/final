#!/usr/bin/env python3
"""
üß™ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–∏–∑–∏—Ç–æ–≤ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–ø–ª–∞—Ç—ã –∏ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∑–∏—Ç–æ–≤
"""

import urllib.request
import urllib.parse
import json
import time
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://127.0.0.1:8000"

def test_visit_payment_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–∏–∑–∏—Ç–æ–≤ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏"""
    print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤–∏–∑–∏—Ç–æ–≤ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏...")
    
    try:
        # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ–±—Ö—É–∫ Payme —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –≤–∏–∑–∏—Ç–∞
        print("   üìã –¢–µ—Å—Ç 1: –í–µ–±—Ö—É–∫ Payme -> —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∞")
        
        payme_payload = {
            "method": "checkPerformTransaction",
            "params": {
                "id": "test_visit_123",
                "account": {
                    "visit_id": "999",  # ID –≤–∏–∑–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                    "order_id": "test_order_999"
                },
                "amount": 50000,  # 500 UZS
                "state": 2  # –£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç—ë–∂
            }
        }
        
        data = json.dumps(payme_payload).encode('utf-8')
        req = urllib.request.Request(
            f"{BASE_URL}/api/v1/webhooks/payment/payme",
            data=data,
            headers={'Content-Type': 'application/json'}
        )
        
        response = urllib.request.urlopen(req)
        if response.getcode() in [200, 201, 422]:
            print(f"     ‚úÖ –í–µ–±—Ö—É–∫ Payme –æ–±—Ä–∞–±–æ—Ç–∞–Ω (–∫–æ–¥: {response.getcode()})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–∑–∏—Ç —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –æ–±–Ω–æ–≤–ª—ë–Ω
            time.sleep(2)  # –ñ–¥—ë–º –æ–±—Ä–∞–±–æ—Ç–∫–∏
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –¥–ª—è –≤–∏–∑–∏—Ç–∞ 999
            try:
                payment_info_url = f"{BASE_URL}/api/v1/visit-payments/999"
                payment_response = urllib.request.urlopen(payment_info_url)
                if payment_response.getcode() == 200:
                    payment_data = json.loads(payment_response.read().decode())
                    print(f"     ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—É—á–µ–Ω–∞: {payment_data.get('payment_info', {}).get('payment_status', 'N/A')}")
                else:
                    print(f"     ‚ö†Ô∏è –ü–ª–∞—Ç—ë–∂ –¥–ª—è –≤–∏–∑–∏—Ç–∞ 999 –Ω–µ –Ω–∞–π–¥–µ–Ω (–∫–æ–¥: {payment_response.getcode()})")
            except Exception as e:
                print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ: {e}")
        else:
            print(f"     ‚ùå –í–µ–±—Ö—É–∫ Payme –≤–µ—Ä–Ω—É–ª {response.getcode()}")
            return False
        
        # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ–±—Ö—É–∫ Click —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –≤–∏–∑–∏—Ç–∞
        print("   üìã –¢–µ—Å—Ç 2: –í–µ–±—Ö—É–∫ Click -> —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∞")
        
        click_payload = {
            "click_trans_id": "click_test_456",
            "service_id": "test_service",
            "merchant_trans_id": "888",  # ID –≤–∏–∑–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            "amount": "750.00",
            "action": "0",  # –£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç—ë–∂
            "sign_time": str(int(time.time())),
            "sign_string": "dummy_signature"  # –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        }
        
        data = urllib.parse.urlencode(click_payload).encode('utf-8')
        req = urllib.request.Request(
            f"{BASE_URL}/api/v1/webhooks/payment/click",
            data=data,
            headers={'Content-Type': 'application/x-www-form-urlencoded'}
        )
        
        response = urllib.request.urlopen(req)
        if response.getcode() in [200, 201, 422]:
            print(f"     ‚úÖ –í–µ–±—Ö—É–∫ Click –æ–±—Ä–∞–±–æ—Ç–∞–Ω (–∫–æ–¥: {response.getcode()})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–∑–∏—Ç —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –æ–±–Ω–æ–≤–ª—ë–Ω
            time.sleep(2)  # –ñ–¥—ë–º –æ–±—Ä–∞–±–æ—Ç–∫–∏
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –¥–ª—è –≤–∏–∑–∏—Ç–∞ 888
            try:
                payment_info_url = f"{BASE_URL}/api/v1/visit-payments/888"
                payment_response = urllib.request.urlopen(payment_info_url)
                if payment_response.getcode() == 200:
                    payment_data = json.loads(payment_response.read().decode())
                    print(f"     ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—É—á–µ–Ω–∞: {payment_data.get('payment_info', {}).get('payment_status', 'N/A')}")
                else:
                    print(f"     ‚ö†Ô∏è –ü–ª–∞—Ç—ë–∂ –¥–ª—è –≤–∏–∑–∏—Ç–∞ 888 –Ω–µ –Ω–∞–π–¥–µ–Ω (–∫–æ–¥: {payment_response.getcode()})")
            except Exception as e:
                print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ: {e}")
        else:
            print(f"     ‚ùå –í–µ–±—Ö—É–∫ Click –≤–µ—Ä–Ω—É–ª {response.getcode()}")
            return False
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        print("   üìã –¢–µ—Å—Ç 3: API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏ –ø–æ –ø–ª–∞—Ç–µ–∂–∞–º
        try:
            summary_url = f"{BASE_URL}/api/v1/visit-payments/summary"
            summary_response = urllib.request.urlopen(summary_url)
            if summary_response.getcode() == 200:
                summary_data = json.loads(summary_response.read().decode())
                print(f"     ‚úÖ –°–≤–æ–¥–∫–∞ –ø–æ –ø–ª–∞—Ç–µ–∂–∞–º –ø–æ–ª—É—á–µ–Ω–∞: {summary_data.get('total_visits', 'N/A')} –≤–∏–∑–∏—Ç–æ–≤")
            else:
                print(f"     ‚ö†Ô∏è –°–≤–æ–¥–∫–∞ –ø–æ –ø–ª–∞—Ç–µ–∂–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: {summary_response.getcode()})")
        except Exception as e:
            print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏: {e}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∏–∑–∏—Ç–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å—É –ø–ª–∞—Ç–µ–∂–∞
        try:
            status_url = f"{BASE_URL}/api/v1/visit-payments/by-status/paid"
            status_response = urllib.request.urlopen(status_url)
            if status_response.getcode() == 200:
                status_data = json.loads(status_response.read().decode())
                print(f"     ‚úÖ –í–∏–∑–∏—Ç—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'paid' –ø–æ–ª—É—á–µ–Ω—ã: {status_data.get('total', 'N/A')}")
            else:
                print(f"     ‚ö†Ô∏è –í–∏–∑–∏—Ç—ã –ø–æ —Å—Ç–∞—Ç—É—Å—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (–∫–æ–¥: {status_response.getcode()})")
        except Exception as e:
            print(f"     ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∏–∑–∏—Ç–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å—É: {e}")
        
        print("   ‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_payment_webhook_with_visit_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∑–∏—Ç–∞ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫"""
    print("üÜï –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∞ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫...")
    
    try:
        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤–µ–±—Ö—É–∫ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–∏–∑–∏—Ç–∞
        payme_payload = {
            "method": "checkPerformTransaction",
            "params": {
                "id": "new_visit_789",
                "account": {
                    "patient_id": "123",
                    "doctor_id": "456",
                    "notes": "–¢–µ—Å—Ç–æ–≤—ã–π –≤–∏–∑–∏—Ç —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫"
                },
                "amount": 100000,  # 1000 UZS
                "state": 2  # –£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç—ë–∂
            }
        }
        
        data = json.dumps(payme_payload).encode('utf-8')
        req = urllib.request.Request(
            f"{BASE_URL}/api/v1/webhooks/payment/payme",
            data=data,
            headers={'Content-Type': 'application/json'}
        )
        
        response = urllib.request.urlopen(req)
        if response.getcode() in [200, 201, 422]:
            print(f"   ‚úÖ –í–µ–±—Ö—É–∫ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–∏–∑–∏—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω (–∫–æ–¥: {response.getcode()})")
            
            # –ñ–¥—ë–º –æ–±—Ä–∞–±–æ—Ç–∫–∏
            time.sleep(3)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–∑–∏—Ç —Å–æ–∑–¥–∞–Ω
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤–∏–∑–∏—Ç –ø–æ ID (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
                payment_info_url = f"{BASE_URL}/api/v1/visit-payments/789"
                payment_response = urllib.request.urlopen(payment_info_url)
                if payment_response.getcode() == 200:
                    payment_data = json.loads(payment_response.read().decode())
                    print(f"   ‚úÖ –ù–æ–≤—ã–π –≤–∏–∑–∏—Ç 789 —Å–æ–∑–¥–∞–Ω: {payment_data.get('payment_info', {}).get('payment_status', 'N/A')}")
                else:
                    print(f"   ‚ö†Ô∏è –ù–æ–≤—ã–π –≤–∏–∑–∏—Ç 789 –Ω–µ –Ω–∞–π–¥–µ–Ω (–∫–æ–¥: {payment_response.getcode()})")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ –≤–∏–∑–∏—Ç–∞: {e}")
            
            return True
        else:
            print(f"   ‚ùå –í–µ–±—Ö—É–∫ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–∏–∑–∏—Ç–∞ –≤–µ—Ä–Ω—É–ª {response.getcode()}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∑–∏—Ç–∞ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–∏–∑–∏—Ç–æ–≤ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏")
    print("=" * 70)
    
    # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("‚è≥ –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(3)
    
    tests = [
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–∏–∑–∏—Ç–æ–≤ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏", test_visit_payment_integration),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∞ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫", test_payment_webhook_with_visit_creation)
    ]
    
    results = []
    for test_name, test_func in tests:
        print(f"\nüìã –ó–∞–ø—É—Å–∫: {test_name}")
        try:
            result = test_func()
            results.append(result)
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£–°–ü–ï–•' if result else '‚ùå –ù–ï–£–î–ê–ß–ê'}")
        except Exception as e:
            print(f"   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            results.append(False)
        print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    print("=" * 70)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {sum(results)}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {len(results) - sum(results)}")
    print(f"üìà –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(sum(results)/len(results)*100):.1f}%")
    
    if sum(results) >= len(results) * 0.8:
        print("\nüéâ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –í–ò–ó–ò–¢–û–í –° –ü–õ–ê–¢–ï–ñ–ê–ú–ò –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û!")
        print("‚úÖ –í–µ–±—Ö—É–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—é—Ç/–æ–±–Ω–æ–≤–ª—è—é—Ç –≤–∏–∑–∏—Ç—ã")
        print("‚úÖ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–ø–ª–∞—Ç—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω")
        return True
    elif sum(results) >= len(results) * 0.6:
        print("\n‚ö†Ô∏è –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –†–ê–ë–û–¢–ê–ï–¢ –ß–ê–°–¢–ò–ß–ù–û")
        print("–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã, –µ—Å—Ç—å –º–µ–ª–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")
        return True
    else:
        print("\n‚ùå –ï—Å—Ç—å —Å–µ—Ä—å—ë–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π")
        print("–ú–Ω–æ–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return False

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)

