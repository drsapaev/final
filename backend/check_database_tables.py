#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def check_database_tables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

    db_path = 'clinic.db'

    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{db_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return False

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()

        print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        for table in tables:
            print(f"   ‚Ä¢ {table[0]}")

        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã services –∏–ª–∏ service_catalog, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        service_table = None
        for table in tables:
            if table[0] in ['services', 'service_catalog']:
                service_table = table[0]
                break

        if service_table:
            print(f"\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã {service_table}:")
            cursor.execute(f"PRAGMA table_info({service_table})")
            columns = cursor.fetchall()
            for col in columns:
                print(f"   {col[1]} ({col[2]}) - {'NOT NULL' if col[3] else 'NULL'}")

            # –ü–æ—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥
            cursor.execute(f"SELECT COUNT(*) FROM {service_table} WHERE active = 1")
            count = cursor.fetchone()[0]
            print(f"\nüìä –ê–∫—Ç–∏–≤–Ω—ã—Ö —É—Å–ª—É–≥ –≤ –±–∞–∑–µ: {count}")

            # –ü–æ–∫–∞–∂–µ–º –ø—Ä–∏–º–µ—Ä—ã —É—Å–ª—É–≥
            cursor.execute(f"SELECT service_code, name, category_code FROM {service_table} WHERE active = 1 LIMIT 5")
            services = cursor.fetchall()
            print("\nüìã –ü—Ä–∏–º–µ—Ä—ã —É—Å–ª—É–≥:")
            for service_code, name, category_code in services:
                print(f"   {service_code} - {name} (–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category_code})")
        else:
            print("\n‚ùå –¢–∞–±–ª–∏—Ü–∞ —É—Å–ª—É–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:")
            for table in tables:
                print(f"   ‚Ä¢ {table[0]}")
            print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    check_database_tables()
