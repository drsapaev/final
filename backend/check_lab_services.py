#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —É—Å–ª—É–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def check_lab_services():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏"""

    db_path = 'clinic.db'

    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{db_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return False

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    try:
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏
        cursor.execute('SELECT COUNT(*) FROM services WHERE category_code = "L" AND active = 1')
        count = cursor.fetchone()[0]
        print(f"üìä –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —É—Å–ª—É–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {count}")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —É—Å–ª—É–≥
        cursor.execute('SELECT service_code, name FROM services WHERE category_code = "L" AND active = 1 ORDER BY service_code')
        services = cursor.fetchall()

        print("\nüìã –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏:")
        for code, name in services:
            print(f"   {code} - {name}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    check_lab_services()
