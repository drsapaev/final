#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–∞—Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
import os
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from app.db.base_class import Base
from app.models.user import User
from app.core.security import verify_password

os.environ["DATABASE_URL"] = "sqlite:///./clinic.db"
os.environ["PYTHONPATH"] = "C:\\final\\backend"

SQLALCHEMY_DATABASE_URL = os.getenv("DATABASE_URL", "sqlite:///./clinic.db")
engine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={"check_same_thread": False})
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

def debug_passwords():
    db = SessionLocal()
    try:
        print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ê–†–û–õ–ï–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("===================================")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–æ–ª–∏
        test_passwords = {
            "admin": "admin123",
            "registrar": "registrar123", 
            "lab": "lab123",
            "doctor": "doctor123",
            "cashier": "cashier123",
            "cardio": "cardio123",
            "derma": "derma123",
            "dentist": "dentist123"
        }
        
        for username, password in test_passwords.items():
            user = db.query(User).filter(User.username == username).first()
            if user:
                print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
                print(f"   ID: {user.id}")
                print(f"   Email: {user.email}")
                print(f"   –†–æ–ª—å: {user.role}")
                print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {user.is_active}")
                print(f"   –•–µ—à –ø–∞—Ä–æ–ª—è: {user.hashed_password[:50]}...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
                is_valid = verify_password(password, user.hashed_password)
                print(f"   –ü–∞—Ä–æ–ª—å '{password}': {'‚úÖ –í–ï–†–ù–´–ô' if is_valid else '‚ùå –ù–ï–í–ï–†–ù–´–ô'}")
                
                if not is_valid:
                    print(f"   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–∞—Ä–æ–ª–µ–º –¥–ª—è {username}!")
            else:
                print(f"\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        print(f"\nüìä –ò–¢–û–ì–ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
        print(f"   –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(test_passwords)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    debug_passwords()
