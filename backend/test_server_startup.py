#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
"""
import os
import sys
import traceback

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ["DATABASE_URL"] = "sqlite:///./clinic.db"
os.environ["CORS_DISABLE"] = "1"
os.environ["WS_DEV_ALLOW"] = "1"

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
    
    try:
        print("  - –ò–º–ø–æ—Ä—Ç app.main...")
        from app.main import app
        print("  ‚úÖ app.main –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        print("  - –ò–º–ø–æ—Ä—Ç app.db.session...")
        from app.db.session import engine, SessionLocal
        print("  ‚úÖ app.db.session –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        print("  - –ò–º–ø–æ—Ä—Ç app.api.v1.api...")
        from app.api.v1.api import api_router
        print("  ‚úÖ app.api.v1.api –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        print("  - –ò–º–ø–æ—Ä—Ç app.api.v1.endpoints.health...")
        from app.api.v1.endpoints.health import router as health_router
        print("  ‚úÖ app.api.v1.endpoints.health –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        traceback.print_exc()
        return False

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...")
    
    try:
        from app.db.session import engine
        from sqlalchemy import text
        
        with engine.connect() as conn:
            result = conn.execute(text("SELECT 1"))
            print("  ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ")
            return True
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        traceback.print_exc()
        return False

def test_health_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º health endpoint"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º health endpoint...")
    
    try:
        from app.api.v1.endpoints.health import get_health
        
        result = get_health()
        print(f"  ‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç: {result}")
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ health endpoint: {e}")
        traceback.print_exc()
        return False

def test_app_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        from app.main import app
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ
        if hasattr(app, 'router'):
            print("  ‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            print(f"  üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {len(app.router.routes)}")
            return True
        else:
            print("  ‚ùå FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return False
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞...")
    print("=" * 50)
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print(f"  Python version: {sys.version}")
    print(f"  Current working directory: {os.getcwd()}")
    print(f"  PYTHONPATH: {os.environ.get('PYTHONPATH', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
    print(f"  DATABASE_URL: {os.environ.get('DATABASE_URL', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
    print(f"  CORS_DISABLE: {os.environ.get('CORS_DISABLE', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
    print(f"  WS_DEV_ALLOW: {os.environ.get('WS_DEV_ALLOW', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
    
    tests = [
        test_imports,
        test_database_connection,
        test_health_endpoint,
        test_app_creation
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            print(f"\nüîç –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test.__name__}")
            if test():
                passed += 1
                print(f"‚úÖ –¢–µ—Å—Ç {test.__name__} –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"‚ùå –¢–µ—Å—Ç {test.__name__} –Ω–µ –ø—Ä–æ—à–µ–ª")
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç {test.__name__} —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {e}")
            print("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
            traceback.print_exc()
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == total:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üîç –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
        return 1

if __name__ == "__main__":
    sys.exit(main())
