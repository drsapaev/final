#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ - —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
"""


import httpx


def test_admin_panel():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...")

    try:
        with httpx.Client() as client:
            # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω
            print("1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω...")
            login_data = {
                "username": "admin",
                "password": "admin123",
                "grant_type": "password",
            }

            login_response = client.post(
                "http://localhost:8000/api/v1/auth/login", data=login_data, timeout=10
            )

            if login_response.status_code != 200:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {login_response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {login_response.text}")
                return

            token_data = login_response.json()
            access_token = token_data.get("access_token")

            if not access_token:
                print("‚ùå –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç access_token")
                return

            print(f"‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω, —Ç–æ–∫–µ–Ω: {access_token[:20]}...")

            # 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
            print("\n2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤...")
            headers = {"Authorization": f"Bearer {access_token}"}

            providers_response = client.get(
                "http://localhost:8000/api/v1/admin/providers",
                headers=headers,
                timeout=10,
            )

            print(f"–°—Ç–∞—Ç—É—Å: {providers_response.status_code}")
            if providers_response.status_code == 200:
                providers = providers_response.json()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤: {len(providers)}")
                for provider in providers:
                    print(f"   - {provider.get('name')} ({provider.get('code')})")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤: {providers_response.text}")

            # 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            print("\n3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞...")
            test_provider = {
                "name": "Test Payme Provider",
                "code": "payme_test",
                "is_active": True,
                "webhook_url": "https://test.example.com/webhook",
                "api_key": "test_api_key_123",
                "secret_key": "test_secret_key_456",
                "commission_percent": 2,
                "min_amount": 1000,
                "max_amount": 1000000,
            }

            create_response = client.post(
                "http://localhost:8000/api/v1/admin/providers",
                headers={**headers, "Content-Type": "application/json"},
                json=test_provider,
                timeout=10,
            )

            if create_response.status_code == 200:
                created_provider = create_response.json()
                provider_id = created_provider.get("id")
                print(f"‚úÖ –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Å–æ–∑–¥–∞–Ω —Å ID: {provider_id}")
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {created_provider.get('name')}")
                print(f"   –ö–æ–¥: {created_provider.get('code')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: {create_response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {create_response.text}")
                return

            # 4. –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
            print("\n4. –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤...")
            providers_response = client.get(
                "http://localhost:8000/api/v1/admin/providers",
                headers=headers,
                timeout=10,
            )

            if providers_response.status_code == 200:
                providers = providers_response.json()
                print(f"‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤: {len(providers)}")
                for provider in providers:
                    print(
                        f"   - {provider.get('name')} ({provider.get('code')}) - ID: {provider.get('id')}"
                    )
            else:
                print(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: {providers_response.text}"
                )

            # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            print(f"\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ {provider_id}...")
            test_response = client.get(
                f"http://localhost:8000/api/v1/admin/providers/{provider_id}/test",
                headers=headers,
                timeout=10,
            )

            if test_response.status_code == 200:
                test_result = test_response.json()
                print(f"‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: {test_result.get('message', '–£—Å–ø–µ—à–Ω–æ')}")
            else:
                print(f"‚ö†Ô∏è  –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: {test_response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {test_response.text}")

            # 6. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            print(f"\n6. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ {provider_id}...")
            delete_response = client.delete(
                f"http://localhost:8000/api/v1/admin/providers/{provider_id}",
                headers=headers,
                timeout=10,
            )

            if delete_response.status_code == 200:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É–¥–∞–ª–µ–Ω")
            else:
                print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {delete_response.status_code}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")


if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
    print("=" * 50)

    test_admin_panel()

    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
