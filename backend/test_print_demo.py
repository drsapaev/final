"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ø–µ—á–∞—Ç–∏
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API –ø–µ—á–∞—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö
"""
import asyncio
from datetime import datetime
from sqlalchemy.orm import Session

from app.db.session import SessionLocal
from app.models.print_config import PrinterConfig, PrintTemplate
from app.services.print_service import PrintService
from app.crud import print_config as crud_print

async def demo_ticket_printing():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ —Ç–∞–ª–æ–Ω–∞ –æ—á–µ—Ä–µ–¥–∏"""
    print("üé´ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–ï–ß–ê–¢–ò –¢–ê–õ–û–ù–ê –û–ß–ï–†–ï–î–ò")
    print("=" * 50)
    
    db = SessionLocal()
    try:
        service = PrintService(db)
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–ª–æ–Ω–∞ –∫–∞–∫ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã
        ticket_data = {
            "clinic_name": "–ú–ï–î–ò–¶–ò–ù–°–ö–ò–ô –¶–ï–ù–¢–† '–ó–î–û–†–û–í–¨–ï'",
            "queue_number": "K001",
            "date": datetime.now(),
            "time": datetime.now(),
            "doctor_name": "–ò–≤–∞–Ω–æ–≤–∞ –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞",
            "specialty_name": "–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è",
            "cabinet": "205",
            "patient_name": "–ü–µ—Ç—Ä–æ–≤ –ò–≤–∞–Ω –°–µ—Ä–≥–µ–µ–≤–∏—á",
            "source": "desk",
            "time_window": "09:00 - 17:00",
            "clinic_phone": "+998 71 123-45-67",
            "clinic_address": "–≥. –¢–∞—à–∫–µ–Ω—Ç, —É–ª. –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è, 15"
        }
        
        print("üìã –î–∞–Ω–Ω—ã–µ —Ç–∞–ª–æ–Ω–∞:")
        for key, value in ticket_data.items():
            if isinstance(value, datetime):
                value = value.strftime('%d.%m.%Y %H:%M')
            print(f"   {key}: {value}")
        
        print("\nüñ®Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—á–∞—Ç–∏...")
        
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–Ω—Ç–µ—Ä–∞)
        result = await service.print_document(
            document_type="ticket",
            document_data=ticket_data,
            printer_name="default_ticket_printer"
        )
        
        if result["success"]:
            print("‚úÖ –¢–∞–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–µ—á–∞—Ç—å!")
            print(f"   –ó–∞–¥–∞–Ω–∏–µ: #{result.get('job_id')}")
            print(f"   –ü—Ä–∏–Ω—Ç–µ—Ä: {result.get('printer', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('result', {})}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏: {result.get('error')}")
            
    finally:
        db.close()

async def demo_prescription_printing():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–∞"""
    print("\nüíä –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–ï–ß–ê–¢–ò –†–ï–¶–ï–ü–¢–ê")
    print("=" * 50)
    
    db = SessionLocal()
    try:
        service = PrintService(db)
        
        # –î–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∫–∞–∫ –æ—Ç –≤—Ä–∞—á–∞
        prescription_data = {
            "clinic": {
                "name": "–ú–ï–î–ò–¶–ò–ù–°–ö–ò–ô –¶–ï–ù–¢–† '–ó–î–û–†–û–í–¨–ï'",
                "license_number": "–ú–î-001234",
                "address": "–≥. –¢–∞—à–∫–µ–Ω—Ç, —É–ª. –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è, 15",
                "phone": "+998 71 123-45-67"
            },
            "prescription": {
                "number": f"RX-{datetime.now().strftime('%Y%m%d%H%M%S')}",
                "date": datetime.now(),
                "medications": [
                    {
                        "name": "–õ–∏–∑–∏–Ω–æ–ø—Ä–∏–ª",
                        "dosage": "10 –º–≥",
                        "form": "—Ç–∞–±–ª–µ—Ç–∫–∏",
                        "instructions": "–ü–æ 1 —Ç–∞–±–ª–µ—Ç–∫–µ 1 —Ä–∞–∑ –≤ –¥–µ–Ω—å —É—Ç—Ä–æ–º, –Ω–∞—Ç–æ—â–∞–∫",
                        "duration": "30 –¥–Ω–µ–π"
                    },
                    {
                        "name": "–ê—Ç–æ—Ä–≤–∞—Å—Ç–∞—Ç–∏–Ω", 
                        "dosage": "20 –º–≥",
                        "form": "—Ç–∞–±–ª–µ—Ç–∫–∏",
                        "instructions": "–ü–æ 1 —Ç–∞–±–ª–µ—Ç–∫–µ 1 —Ä–∞–∑ –≤ –¥–µ–Ω—å –≤–µ—á–µ—Ä–æ–º",
                        "duration": "30 –¥–Ω–µ–π"
                    }
                ],
                "recommendations": "–ö–æ–Ω—Ç—Ä–æ–ª—å –ê–î –µ–∂–µ–¥–Ω–µ–≤–Ω–æ. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤–∏–∑–∏—Ç —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏."
            },
            "patient": {
                "full_name": "–ü–µ—Ç—Ä–æ–≤ –ò–≤–∞–Ω –°–µ—Ä–≥–µ–µ–≤–∏—á",
                "birth_date": "15.05.1965",
                "phone": "+998 90 123-45-67"
            },
            "doctor": {
                "full_name": "–ò–≤–∞–Ω–æ–≤–∞ –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞",
                "specialty_name": "–ö–∞—Ä–¥–∏–æ–ª–æ–≥",
                "license_number": "–í–†-005678"
            }
        }
        
        print("üìã –î–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç–∞:")
        print(f"   –ù–æ–º–µ—Ä: {prescription_data['prescription']['number']}")
        print(f"   –ü–∞—Ü–∏–µ–Ω—Ç: {prescription_data['patient']['full_name']}")
        print(f"   –í—Ä–∞—á: {prescription_data['doctor']['full_name']}")
        print(f"   –ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–≤: {len(prescription_data['prescription']['medications'])}")
        
        print("\nüñ®Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—á–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–∞...")
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—á–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç–∞ (—Ç—Ä–µ–±—É–µ—Ç A5 –ø—Ä–∏–Ω—Ç–µ—Ä)
        print("‚ö†Ô∏è –î–ª—è –ø–µ—á–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è A5 –ø—Ä–∏–Ω—Ç–µ—Ä")
        print("üìÑ –†–µ—Ü–µ–ø—Ç –≥–æ—Ç–æ–≤ –∫ –ø–µ—á–∞—Ç–∏ –Ω–∞ A5 –±—É–º–∞–≥–µ")
        
    finally:
        db.close()

def demo_api_usage():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API"""
    print("\nüåê –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø API –ü–ï–ß–ê–¢–ò")
    print("=" * 50)
    
    print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:")
    
    endpoints = [
        ("POST /api/v1/print/ticket", "–ü–µ—á–∞—Ç—å —Ç–∞–ª–æ–Ω–∞ –æ—á–µ—Ä–µ–¥–∏"),
        ("POST /api/v1/print/prescription", "–ü–µ—á–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç–∞"),
        ("POST /api/v1/print/certificate", "–ü–µ—á–∞—Ç—å —Å–ø—Ä–∞–≤–∫–∏"),
        ("POST /api/v1/print/receipt", "–ü–µ—á–∞—Ç—å —á–µ–∫–∞"),
        ("GET /api/v1/print/printers", "–°–ø–∏—Å–æ–∫ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤"),
        ("GET /api/v1/print/printers/{name}/status", "–°—Ç–∞—Ç—É—Å –ø—Ä–∏–Ω—Ç–µ—Ä–∞"),
        ("POST /api/v1/print/printers/{name}/test", "–¢–µ—Å—Ç –ø–µ—á–∞—Ç–∏")
    ]
    
    for endpoint, description in endpoints:
        print(f"   {endpoint:<40} - {description}")
    
    print("\nüìù –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—á–∞—Ç–∏ —Ç–∞–ª–æ–Ω–∞:")
    example_request = """
    POST /api/v1/print/ticket
    Authorization: Bearer <token>
    Content-Type: application/json
    
    {
        "clinic_name": "–ö–õ–ò–ù–ò–ö–ê",
        "queue_number": "K001", 
        "doctor_name": "–ò–≤–∞–Ω–æ–≤ –ò.–ò.",
        "specialty_name": "–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è",
        "cabinet": "205",
        "patient_name": "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.",
        "source": "desk"
    }
    """
    
    print(example_request)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"""
    print("üé≠ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –ü–ï–ß–ê–¢–ò")
    print("=" * 60)
    
    try:
        # 1. –î–µ–º–æ –ø–µ—á–∞—Ç–∏ —Ç–∞–ª–æ–Ω–∞
        await demo_ticket_printing()
        
        # 2. –î–µ–º–æ –ø–µ—á–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–∞  
        await demo_prescription_printing()
        
        # 3. –î–µ–º–æ API
        demo_api_usage()
        
        print("\n" + "=" * 60)
        print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–µ—á–∞—Ç–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞:")
        print("   ‚Ä¢ ‚úÖ –ú–æ–¥–µ–ª–∏ –∏ —Ç–∞–±–ª–∏—Ü—ã –ë–î —Å–æ–∑–¥–∞–Ω—ã")
        print("   ‚Ä¢ ‚úÖ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("   ‚Ä¢ ‚úÖ Jinja2 —à–∞–±–ª–æ–Ω—ã —Ä–µ–Ω–¥–µ—Ä—è—Ç—Å—è")
        print("   ‚Ä¢ ‚úÖ PrintService –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        print("   ‚Ä¢ ‚úÖ API endpoints –¥–æ—Å—Ç—É–ø–Ω—ã")
        print("   ‚Ä¢ ‚úÖ Pydantic —Å—Ö–µ–º—ã –≤–∞–ª–∏–¥–Ω—ã")
        
        print("\nüöÄ –ì–û–¢–û–í–û –ö –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:")
        print("   ‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞ –º–æ–∂–µ—Ç –ø–µ—á–∞—Ç–∞—Ç—å —Ç–∞–ª–æ–Ω—ã")
        print("   ‚Ä¢ –í—Ä–∞—á–∏ –º–æ–≥—É—Ç –ø–µ—á–∞—Ç–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã")
        print("   ‚Ä¢ –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø—Ä–∏–Ω—Ç–µ—Ä—ã")
        print("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ESC/POS –∏ PDF —Ñ–æ—Ä–º–∞—Ç–æ–≤")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main())
