#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ GitHub Actions
"""
import sys
import os
import traceback
sys.path.insert(0, '.')

print("üîß –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
database_url = os.getenv('DATABASE_URL', 'sqlite:///./clinic.db')
print(f"üìä DATABASE_URL: {database_url}")

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
try:
    from app.db.base import Base
    from app.db.session import engine, SessionLocal
    print("‚úÖ –ò–º–ø–æ—Ä—Ç –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ë–î —É—Å–ø–µ—à–µ–Ω")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ë–î: {e}")
    traceback.print_exc()
    sys.exit(1)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ __init__.py —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –º–æ–¥–µ–ª—è–º–∏
try:
    import app.models
    print("‚úÖ –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π —É—Å–ø–µ—à–µ–Ω")
except ImportError as e:
    print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π: {e}')
    print("üîÑ –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –º–æ–¥–µ–ª–∏...")
    try:
        from app.models.user import User
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏ User —É—Å–ø–µ—à–µ–Ω")
    except Exception as user_e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–∏ User: {user_e}")
        traceback.print_exc()
        sys.exit(1)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
try:
    from app.core.security import get_password_hash
    print("‚úÖ –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π —É—Å–ø–µ—à–µ–Ω")
except ImportError as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é –∑–∞–≥–ª—É—à–∫—É...")
    def get_password_hash(password: str) -> str:
        import hashlib
        return hashlib.sha256(password.encode()).hexdigest()

from sqlalchemy import text

print("üóÑÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...")

try:
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    print("üî® –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã...")
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã/–ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    print("üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    with engine.connect() as conn:
        result = conn.execute(text('SELECT 1'))
        print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users
        print("üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users...")
        result = conn.execute(text("SELECT name FROM sqlite_master WHERE type='table' AND name='users'"))
        if not result.fetchone():
            print('‚ùå –¢–∞–±–ª–∏—Ü–∞ users –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è')
            raise Exception("–¢–∞–±–ª–∏—Ü–∞ users –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
        print('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        print("üìä –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö...")
        result = conn.execute(text("SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%'"))
        tables = [row[0] for row in result.fetchall()]
        
        total_tables = len(tables)
        successful_checks = 0
        
        for table in tables:
            try:
                result = conn.execute(text(f'SELECT COUNT(*) FROM {table}'))
                count = result.scalar()
                print(f'   üìä {table}: {count} –∑–∞–ø–∏—Å–µ–π')
                successful_checks += 1
            except Exception as e:
                print(f'   ‚ö†Ô∏è {table}: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –∑–∞–ø–∏—Å–µ–π ({str(e)})')
        
        print(f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {successful_checks}/{total_tables} —Ç–∞–±–ª–∏—Ü –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
    import time
    time.sleep(1)
                    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    print("üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin...")
    try:
        db = SessionLocal()
        try:
            from app.models.user import User
            existing_admin = db.query(User).filter(User.username == 'admin').first()
            if not existing_admin:
                admin_user = User(
                    username='admin',
                    email='admin@clinic.com',
                    hashed_password=get_password_hash('admin123'),
                    role='Admin',
                    is_active=True,
                    is_superuser=True
                )
                db.add(admin_user)
                db.commit()
                print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å–æ–∑–¥–∞–Ω')
            else:
                print('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        except Exception as user_error:
            print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: {user_error}')
            db.rollback()
        finally:
            db.close()
    except Exception as db_error:
        print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –ë–î –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {db_error}')
                    
    print('üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!')
                    
except Exception as e:
    print(f'‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}')
    print("üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
    traceback.print_exc()
    print("üîÑ –ü–æ–ø—ã—Ç–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    try:
        print(f"üìä DATABASE_URL: {database_url}")
        print(f"üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
        print(f"üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {os.listdir('.')}")
        if os.path.exists('clinic.db'):
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ë–î: {os.path.getsize('clinic.db')} –±–∞–π—Ç")
        else:
            print("‚ùå –§–∞–π–ª clinic.db –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as diag_e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {diag_e}")
    
    sys.exit(1)
