#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–æ–ª—å admin
"""
import sqlite3
from passlib.context import CryptContext

def check_admin_password():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–æ–ª—å admin"""
    conn = sqlite3.connect('clinic.db')
    cursor = conn.cursor()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ admin
        cursor.execute("SELECT id, username, hashed_password FROM users WHERE username = 'admin'")
        admin = cursor.fetchone()
        
        if not admin:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin –Ω–∞–π–¥–µ–Ω:")
        print(f"   ID: {admin[0]}")
        print(f"   Username: {admin[1]}")
        print(f"   Password hash: {admin[2]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
        pwd_context = CryptContext(schemes=["argon2", "bcrypt"], deprecated="auto")
        
        test_passwords = ["admin123", "admin", "password", "123456"]
        
        for password in test_passwords:
            try:
                if pwd_context.verify(password, admin[2]):
                    print(f"‚úÖ –ü–∞—Ä–æ–ª—å '{password}' –ü–†–ê–í–ò–õ–¨–ù–´–ô")
                    return
                else:
                    print(f"‚ùå –ü–∞—Ä–æ–ª—å '{password}' –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è '{password}': {e}")
        
        print("\nüîç –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è admin...")
        new_password = "admin123"
        new_hash = pwd_context.hash(new_password)
        
        cursor.execute("UPDATE users SET hashed_password = ? WHERE username = 'admin'", (new_hash,))
        conn.commit()
        
        print(f"‚úÖ –ü–∞—Ä–æ–ª—å admin –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ '{new_password}'")
        print(f"   –ù–æ–≤—ã–π —Ö–µ—à: {new_hash[:50]}...")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    check_admin_password()

