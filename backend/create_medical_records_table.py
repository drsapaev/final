#!/usr/bin/env python3
"""
–°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ MEDICAL_RECORDS
"""
import sqlite3
import os

def create_medical_records_table():
    print("üîß –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ MEDICAL_RECORDS")
    print("=" * 50)
    
    db_path = 'clinic.db'
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        print("1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã medical_records...")
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='medical_records';")
        if cursor.fetchone():
            print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ medical_records —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("   ‚ùå –¢–∞–±–ª–∏—Ü–∞ medical_records –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
            # 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É medical_records
            print("2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É medical_records...")
            cursor.execute("""
                CREATE TABLE medical_records (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    patient_id INTEGER NOT NULL,
                    appointment_id INTEGER,
                    doctor_id INTEGER NOT NULL,
                    record_type VARCHAR(50) NOT NULL DEFAULT 'general',
                    chief_complaint TEXT,
                    history_of_present_illness TEXT,
                    past_medical_history TEXT,
                    medications TEXT,
                    allergies TEXT,
                    family_history TEXT,
                    social_history TEXT,
                    review_of_systems TEXT,
                    physical_examination TEXT,
                    vital_signs TEXT,
                    assessment TEXT,
                    plan TEXT,
                    diagnosis TEXT,
                    treatment_notes TEXT,
                    follow_up_instructions TEXT,
                    additional_notes TEXT,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    created_by INTEGER NOT NULL,
                    updated_by INTEGER,
                    status VARCHAR(20) DEFAULT 'active',
                    is_confidential BOOLEAN DEFAULT 0,
                    FOREIGN KEY (patient_id) REFERENCES patients(id),
                    FOREIGN KEY (appointment_id) REFERENCES appointments(id),
                    FOREIGN KEY (doctor_id) REFERENCES users(id),
                    FOREIGN KEY (created_by) REFERENCES users(id),
                    FOREIGN KEY (updated_by) REFERENCES users(id)
                );
            """)
            print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ medical_records —Å–æ–∑–¥–∞–Ω–∞")
        
        # 3. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        print("3. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã...")
        indexes = [
            "CREATE INDEX IF NOT EXISTS idx_medical_records_patient_id ON medical_records(patient_id);",
            "CREATE INDEX IF NOT EXISTS idx_medical_records_appointment_id ON medical_records(appointment_id);",
            "CREATE INDEX IF NOT EXISTS idx_medical_records_doctor_id ON medical_records(doctor_id);",
            "CREATE INDEX IF NOT EXISTS idx_medical_records_created_at ON medical_records(created_at);",
            "CREATE INDEX IF NOT EXISTS idx_medical_records_status ON medical_records(status);"
        ]
        
        for index_sql in indexes:
            cursor.execute(index_sql)
        print("   ‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        print("4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã...")
        cursor.execute("PRAGMA table_info(medical_records);")
        columns = cursor.fetchall()
        print("   üìä –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã medical_records:")
        for col in columns:
            print(f"      - {col[1]} ({col[2]})")
        
        # 5. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("5. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        cursor.execute("SELECT COUNT(*) FROM medical_records;")
        count = cursor.fetchone()[0]
        
        if count == 0:
            # –ü–æ–ª—É—á–∞–µ–º ID –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ –≤—Ä–∞—á–∞
            cursor.execute("SELECT id FROM patients LIMIT 1;")
            patient_result = cursor.fetchone()
            cursor.execute("SELECT id FROM users WHERE role = 'doctor' LIMIT 1;")
            doctor_result = cursor.fetchone()
            
            if patient_result and doctor_result:
                patient_id = patient_result[0]
                doctor_id = doctor_result[0]
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
                cursor.execute("""
                    INSERT INTO medical_records (
                        patient_id, doctor_id, record_type, chief_complaint,
                        history_of_present_illness, physical_examination,
                        assessment, plan, diagnosis, created_by
                    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                """, (
                    patient_id, doctor_id, 'general',
                    '–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å',
                    '–ü–∞—Ü–∏–µ–Ω—Ç –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É—é –±–æ–ª—å –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –¥–Ω–µ–π',
                    '–ê–î 120/80, –ß–°–° 72, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ 36.6¬∞C',
                    '–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è',
                    '–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω –æ—Ç–¥—ã—Ö, –æ–±–∏–ª—å–Ω–æ–µ –ø–∏—Ç—å–µ',
                    '–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è',
                    doctor_id
                ))
                print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
            else:
                print("   ‚ö†Ô∏è –ù–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏–ª–∏ –≤—Ä–∞—á–µ–π –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        else:
            print(f"   ‚ÑπÔ∏è –í —Ç–∞–±–ª–∏—Ü–µ —É–∂–µ –µ—Å—Ç—å {count} –∑–∞–ø–∏—Å–µ–π")
        
        conn.commit()
        conn.close()
        
        print("\n‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã medical_records –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    create_medical_records_table()
