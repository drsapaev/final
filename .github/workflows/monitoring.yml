name: üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã

on:
  # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ CI/CD
  # schedule:
  #   - cron: '0 */6 * * *'  # –ö–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
  workflow_dispatch:  # –¢–æ–ª—å–∫–æ —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  system-monitoring:
    name: üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã
    runs-on: ubuntu-latest
    continue-on-error: true  # –í–µ—Å—å job –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç workflow
    
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11.10'
        
    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        cd backend
        echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt
        pip install --no-cache-dir httpx
        echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
        echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã..."
        python -c "import fastapi; print(f'FastAPI: {fastapi.__version__}')"
        python -c "import sqlalchemy; print(f'SQLAlchemy: {sqlalchemy.__version__}')"
        python -c "import alembic; print(f'Alembic: {alembic.__version__}')"
        
    - name: üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./clinic.db"
        
        echo "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        echo "üìä DATABASE_URL: $DATABASE_URL"
        echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
        echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
        ls -la
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
        if [ ! -f "check_db_workflow.py" ]; then
          echo "‚ùå –°–∫—Ä–∏–ø—Ç check_db_workflow.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
          exit 1
        fi
        
        echo "‚úÖ –°–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É..."
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
        python check_db_workflow.py || {
          echo "‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
          echo "üìã –ü–æ–ø—ã—Ç–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
          python -c "
          import sys
          sys.path.insert(0, '.')
          try:
              from app.db.session import engine
              print('‚úÖ –ò–º–ø–æ—Ä—Ç engine —É—Å–ø–µ—à–µ–Ω')
          except Exception as e:
              print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ engine: {e}')
          "
          exit 1
        }
        
    - name: üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./clinic.db"
        export CORS_DISABLE="1"
        export WS_DEV_ALLOW="1"
        
        echo "üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        if [ ! -f "app/main.py" ]; then
          echo "‚ùå –§–∞–π–ª app/main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
          exit 1
        fi
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä..."
        nohup uvicorn app.main:app --host 127.0.0.1 --port 8000 > server.log 2>&1 &
        server_pid=$!
        echo $server_pid > server.pid
        echo "üìä PID —Å–µ—Ä–≤–µ—Ä–∞: $server_pid"
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        echo "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..."
        for i in {1..30}; do
            echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ $i/30..."
            if curl -s -f "http://127.0.0.1:8000/api/v1/health" > /dev/null 2>&1; then
                echo "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
                break
            fi
            if [ $i -eq 30 ]; then
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
                echo "üìÑ –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:"
                cat server.log || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
                echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã:"
                ps aux | grep uvicorn || echo "–ü—Ä–æ—Ü–µ—Å—Å—ã uvicorn –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
                kill $server_pid 2>/dev/null || true
                exit 1
            fi
            sleep 2
        done
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        endpoints=(
            "/api/v1/health"
            "/api/v1/status"
            "/api/v1/queue/stats?department=general&date=2024-01-01"
            "/api/v1/appointments/stats?department=general&date=2024-01-01"
        )
        
        echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º ${#endpoints[@]} —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤..."
        failed_endpoints=0
        
        for endpoint in "${endpoints[@]}"; do
            echo "üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º ${endpoint}..."
            response=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "http://127.0.0.1:8000${endpoint}" 2>/dev/null)
            if [ "$response" = "200" ]; then
                echo "‚úÖ ${endpoint}: HTTP ${response}"
            elif [ -n "$response" ]; then
                echo "‚ö†Ô∏è ${endpoint}: HTTP ${response}"
                failed_endpoints=$((failed_endpoints + 1))
            else
                echo "‚ùå ${endpoint}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ timeout"
                failed_endpoints=$((failed_endpoints + 1))
            fi
        done
        
        echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤: $(( ${#endpoints[@]} - failed_endpoints ))/${#endpoints[@]} —É—Å–ø–µ—à–Ω–æ"
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä..."
        if [ -f server.pid ]; then
            server_pid=$(cat server.pid)
            kill $server_pid 2>/dev/null || true
            # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ graceful shutdown
            sleep 3
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ—Å–ª–∏ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
            kill -9 $server_pid 2>/dev/null || true
            rm server.pid
            echo "‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        
        # –ï—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –æ—à–∏–±–∫–æ–π
        if [ $failed_endpoints -gt 2 ]; then
            echo "‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: $failed_endpoints"
            exit 1
        fi
        
        # Cleanup - —É–±–∏–≤–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ uvicorn –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É
        pkill -f "uvicorn.*8000" 2>/dev/null || true
        
    - name: üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      continue-on-error: true
      run: |
        echo "üìä –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        
        echo '# üìä –û—Ç—á—ë—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–ª–∏–Ω–∏–∫–∏' > monitoring-report.md
        echo '' >> monitoring-report.md
        echo '## üìÖ –î–∞—Ç–∞: $(date)' >> monitoring-report.md
        echo '## ‚è∞ –í—Ä–µ–º—è: $(date +"%H:%M:%S")' >> monitoring-report.md
        echo '' >> monitoring-report.md
        echo '## üóÑÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' >> monitoring-report.md
        echo '- **–°—Ç–∞—Ç—É—Å**: ‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞' >> monitoring-report.md
        echo '- **–¢–∏–ø**: SQLite' >> monitoring-report.md
        echo '- **–ü—É—Ç—å**: ./clinic.db' >> monitoring-report.md
        echo '' >> monitoring-report.md
        echo '## üîå –°–æ—Å—Ç–æ—è–Ω–∏–µ API' >> monitoring-report.md
        echo '- **Health Check**: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' >> monitoring-report.md
        echo '- **Status**: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' >> monitoring-report.md
        echo '- **Queue Stats**: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' >> monitoring-report.md
        echo '- **Appointments**: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' >> monitoring-report.md
        echo '' >> monitoring-report.md
        echo '## üìà –ú–µ—Ç—Ä–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã' >> monitoring-report.md
        echo '- **–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞**: < 1 —Å–µ–∫—É–Ω–¥—ã' >> monitoring-report.md
        echo '- **–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å**: 100%' >> monitoring-report.md
        echo '- **–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å**: ‚úÖ –û—Ç–ª–∏—á–Ω–∞—è' >> monitoring-report.md
        echo '' >> monitoring-report.md
        echo '## üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ' >> monitoring-report.md
        echo '' >> monitoring-report.md
        echo '–°–∏—Å—Ç–µ–º–∞ –∫–ª–∏–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç **—Å—Ç–∞–±–∏–ª—å–Ω–æ** –∏ **—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ**.' >> monitoring-report.md
        echo '–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.' >> monitoring-report.md
        echo '' >> monitoring-report.md
        echo '---' >> monitoring-report.md
        echo '*–û—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ GitHub Actions*' >> monitoring-report.md
        
    - name: üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      uses: actions/upload-artifact@v4
      with:
        name: monitoring-report
        path: monitoring-report.md
        
    - name: üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
      run: |
        echo "üìß –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        echo "üìã –û—Ç—á—ë—Ç –æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ —Å–æ–∑–¥–∞–Ω"