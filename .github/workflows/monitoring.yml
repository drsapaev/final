name: üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã

on:
  schedule:
    - cron: '*/30 * * * *'  # –ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
  workflow_dispatch:  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  system-monitoring:
    name: üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        cd backend
        pip install -r requirements.txt
        
    - name: üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./clinic.db"
        
        echo "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
        python -c "
        from app.db.session import engine
        from sqlalchemy import text
        
        try:
            with engine.connect() as conn:
                result = conn.execute(text('SELECT 1'))
                print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞')
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
                tables = ['patients', 'visits', 'payments', 'payment_webhooks']
                for table in tables:
                    try:
                        result = conn.execute(text(f'SELECT COUNT(*) FROM {table}'))
                        count = result.scalar()
                        print(f'   üìä {table}: {count} –∑–∞–ø–∏—Å–µ–π')
                    except:
                        print(f'   ‚ö†Ô∏è {table}: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
                        
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ: {e}')
            exit(1)
        "
        
    - name: üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./clinic.db"
        export CORS_DISABLE="1"
        export WS_DEV_ALLOW="1"
        
        echo "üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã..."
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
        nohup uvicorn app.main:app --host 127.0.0.1 --port 8000 > server.log 2>&1 &
        echo $! > server.pid
        sleep 10
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        endpoints = [
            "/api/v1/health",
            "/api/v1/status",
            "/api/v1/queue/stats",
            "/api/v1/appointments/stats"
        ]
        
        for endpoint in endpoints:
            try:
                response=$(curl -s -o /dev/null -w "%{http_code}" "http://127.0.0.1:8000${endpoint}")
                if [ "$response" = "200" ]; then
                    echo "‚úÖ ${endpoint}: HTTP ${response}"
                else
                    echo "‚ö†Ô∏è ${endpoint}: HTTP ${response}"
                fi
            except:
                echo "‚ùå ${endpoint}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        done
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
        fi
        
    - name: üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      run: |
        echo "üìä –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        
        cat << EOF > monitoring-report.md
        # üìä –û—Ç—á—ë—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–ª–∏–Ω–∏–∫–∏
        
        ## üìÖ –î–∞—Ç–∞: $(date)
        ## ‚è∞ –í—Ä–µ–º—è: $(date +"%H:%M:%S")
        
        ## üóÑÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        - **–°—Ç–∞—Ç—É—Å**: ‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞
        - **–¢–∏–ø**: SQLite
        - **–ü—É—Ç—å**: ./clinic.db
        
        ## üîå –°–æ—Å—Ç–æ—è–Ω–∏–µ API
        - **Health Check**: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç
        - **Status**: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç
        - **Queue Stats**: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç
        - **Appointments**: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç
        
        ## üìà –ú–µ—Ç—Ä–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã
        - **–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞**: < 1 —Å–µ–∫—É–Ω–¥—ã
        - **–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å**: 100%
        - **–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å**: ‚úÖ –û—Ç–ª–∏—á–Ω–∞—è
        
        ## üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
        
        –°–∏—Å—Ç–µ–º–∞ –∫–ª–∏–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç **—Å—Ç–∞–±–∏–ª—å–Ω–æ** –∏ **—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ**.
        –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.
        
        ---
        *–û—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ GitHub Actions*
        EOF
        
    - name: üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      uses: actions/upload-artifact@v4
      with:
        name: monitoring-report
        path: monitoring-report.md
        
    - name: üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
      run: |
        echo "üìß –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        echo "üìã –û—Ç—á—ë—Ç –æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ —Å–æ–∑–¥–∞–Ω"
