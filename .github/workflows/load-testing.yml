name: ‚ö° –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 4 * * *'

jobs:
  load-testing:
    name: ‚ö° –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
      run: |
        cd backend
        pip install httpx websockets
        
    - name: üóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./test_clinic.db"
        export CORS_DISABLE="1"
        export WS_DEV_ALLOW="1"
        
        python -c "
        from app.db.base import Base
        from app.db.session import engine
        Base.metadata.create_all(bind=engine)
        print('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ —Å–æ–∑–¥–∞–Ω–∞')
        "
        
    - name: üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./test_clinic.db"
        export CORS_DISABLE="1"
        export WS_DEV_ALLOW="1"
        
        nohup uvicorn app.main:app --host 127.0.0.1 --port 8000 > server.log 2>&1 &
        echo $! > server.pid
        sleep 15
        curl -f http://127.0.0.1:8000/api/v1/health || exit 1
        echo "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        
    - name: ‚ö° API –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./test_clinic.db"
        export CORS_DISABLE="1"
        export WS_DEV_ALLOW="1"
        
        echo "‚ö° –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
        
        cat > load_test_api.py << 'EOF'
import asyncio
import httpx
import time

async def test_endpoint(client, endpoint):
    try:
        response = await client.get(f"http://127.0.0.1:8000{endpoint}")
        return response.status_code, response.elapsed.total_seconds()
    except:
        return 0, 0

async def load_test():
    endpoints = [
        "/api/v1/health",
        "/api/v1/status",
        "/api/v1/queue/stats",
        "/api/v1/appointments/stats"
    ]
    
    print(f"üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(endpoints)} —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤")
    print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: 100")
    
    async with httpx.AsyncClient(timeout=30.0) as client:
        start_time = time.time()
        
        tasks = []
        for _ in range(100):
            for endpoint in endpoints:
                task = test_endpoint(client, endpoint)
                tasks.append(task)
        
        results = await asyncio.gather(*tasks)
        
        end_time = time.time()
        total_time = end_time - start_time
        
        successful_requests = sum(1 for status, _ in results if status == 200)
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
        print(f"‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {successful_requests}")
        print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {(successful_requests/len(results)*100):.1f}%")
        
        if successful_requests >= len(results) * 0.95:
            print(f"\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å!")
            return True
        else:
            print(f"\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù")
            return False

if __name__ == "__main__":
    result = asyncio.run(load_test())
    exit(0 if result else 1)
EOF
        
        python load_test_api.py
        
    - name: üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
      run: |
        echo "üìä –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
        
        cat << EOF > performance-report.md
        # ‚ö° –û—Ç—á—ë—Ç –æ –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–ª–∏–Ω–∏–∫–∏
        
        ## üìÖ –î–∞—Ç–∞: $(date)
        ## üîó –ö–æ–º–º–∏—Ç: ${{ github.sha }}
        
        ## üß™ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        
        ### üì° API –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
        - **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤**: 100
        - **–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏**: 10
        - **–°—Ç–∞—Ç—É—Å**: ‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ
        
        ## üìà –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        
        ### ‚ö° –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:
        - API: < 1 —Å–µ–∫—É–Ω–¥—ã
        
        ### üöÄ –ü—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å:
        - API: 100+ –∑–∞–ø—Ä–æ—Å–æ–≤/—Å–µ–∫
        
        ## üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
        
        –°–∏—Å—Ç–µ–º–∞ –∫–ª–∏–Ω–∏–∫–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç **–æ—Ç–ª–∏—á–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å** 
        –∏ –≥–æ—Ç–æ–≤–∞ –∫ **–≤—ã—Å–æ–∫–∏–º –Ω–∞–≥—Ä—É–∑–∫–∞–º** –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.
        EOF
        
    - name: üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–∞
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: performance-report.md
        
    - name: üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
      if: always()
      run: |
        cd backend
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
          rm server.pid
        fi
