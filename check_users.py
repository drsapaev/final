#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ
"""

import sqlite3

def check_users():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ"""
    conn = sqlite3.connect('backend/clinic.db')
    cursor = conn.cursor()
    
    print("üë• –ü–†–û–í–ï–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –í –°–ò–°–¢–ï–ú–ï")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name LIKE '%user%'")
    user_tables = cursor.fetchall()
    print(f"üìã –¢–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {[t[0] for t in user_tables]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
    try:
        cursor.execute("SELECT id, email, username, role FROM users LIMIT 10")
        users = cursor.fetchall()
        print(f"\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò ({len(users)} –Ω–∞–π–¥–µ–Ω–æ):")
        for user in users:
            print(f"  ID: {user[0]}, Email: {user[1]}, Username: {user[2]}, Role: {user[3]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É staff
    try:
        cursor.execute("SELECT id, email, username, role FROM staff LIMIT 10")
        staff = cursor.fetchall()
        print(f"\nüë®‚Äç‚öïÔ∏è –°–¢–ê–§–§ ({len(staff)} –Ω–∞–π–¥–µ–Ω–æ):")
        for person in staff:
            print(f"  ID: {person[0]}, Email: {person[1]}, Username: {person[2]}, Role: {person[3]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Å—Ç–∞—Ñ—Ñ–∞: {e}")
    
    conn.close()

if __name__ == "__main__":
    check_users()