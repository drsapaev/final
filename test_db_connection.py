"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞
"""
import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'backend'))

from backend.app.db.session import get_db
from sqlalchemy import text

def test_db_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º get_db –∫–∞–∫ –≤ —Å–µ—Ä–≤–µ—Ä–µ
        db_gen = get_db()
        db = next(db_gen)
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è mcp_test
        result = db.execute(text("""
            SELECT id, username, email, full_name, role, is_active, is_superuser, hashed_password
            FROM users 
            WHERE username = :username
        """), {"username": "mcp_test"})
        
        user_row = result.fetchone()
        
        if user_row:
            user_id, username, email, full_name, role, is_active, is_superuser, hashed_password = user_row
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å mcp_test –Ω–∞–π–¥–µ–Ω:")
            print(f"   ID: {user_id}")
            print(f"   Username: {username}")
            print(f"   Email: {email}")
            print(f"   Role: {role}")
            print(f"   Is Active: {is_active}")
            print(f"   Is Superuser: {is_superuser}")
            print(f"   Password Hash: {hashed_password[:50]}...")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å mcp_test –ù–ï –Ω–∞–π–¥–µ–Ω!")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        db.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_db_connection()
