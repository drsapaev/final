import requests
import json

# –¢–æ–∫–µ–Ω –∏–∑ –ª–æ–≥–æ–≤
token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyMCIsInVzZXJfaWQiOjIwLCJ1c2VybmFtZSI6InJlZ2lzdHJhckBleGFtcGxlLmNvbSIsImV4cCI6MTc1OTMzMzY1OH0.kSlNwHRz0LzXZ6u4AXfLeY41zuJHXhIFqWtXEd_FLMg"

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
test_data = {
    "patient_id": 1,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    "visits": [
        {
            "doctor_id": None,
            "services": [
                {
                    "service_id": 1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è —É—Å–ª—É–≥–∞
                    "quantity": 1
                }
            ],
            "visit_date": "2025-10-01",
            "visit_time": "10:00",
            "department": "cardiology",
            "notes": None
        }
    ],
    "discount_mode": "none",
    "payment_method": "cash",
    "all_free": False,
    "notes": None
}

try:
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏...")

    response = requests.post(
        'http://localhost:8000/api/v1/registrar/cart',
        headers={
            'Authorization': f'Bearer {token}',
            'Content-Type': 'application/json'
        },
        json=test_data
    )

    print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")

    if response.status_code == 200:
        data = response.json()
        print("‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"        print(f"   Visit IDs: {data.get('visit_ids', [])}")
        print(f"   Invoice ID: {data.get('invoice_id')}")
        print(f"   Total amount: {data.get('total_amount')}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏:"        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        try:
            error_data = response.json()
            print(f"   –î–µ—Ç–∞–ª–∏: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
        except:
            print(f"   –¢–µ–∫—Å—Ç: {response.text}")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

