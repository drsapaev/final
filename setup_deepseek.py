#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DeepSeek AI - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ Gemini
"""
import os
import sys

def setup_deepseek_api():
    print("=" * 60)
    print("üîß –ù–ê–°–¢–†–û–ô–ö–ê DEEPSEEK AI")
    print("=" * 60)
    print("\nüí° DeepSeek - —ç—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Å –æ—Ç–ª–∏—á–Ω—ã–º")
    print("   –∫–∞—á–µ—Å—Ç–≤–æ–º –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∑–∞–¥–∞—á –∏ –ë–ï–ó –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫!")
    
    env_path = os.path.join("backend", ".env")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists(env_path):
        with open(env_path, "w", encoding="utf-8") as f:
            f.write("# AI Provider API Keys\n")
        print(f"‚úÖ –§–∞–π–ª {env_path} —Å–æ–∑–¥–∞–Ω")
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    with open(env_path, "r", encoding="utf-8") as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ DeepSeek
    if "DEEPSEEK_API_KEY=" in content and "DEEPSEEK_API_KEY=sk-" in content:
        print("\n‚úÖ DEEPSEEK_API_KEY —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        for line in content.split("\n"):
            if line.startswith("DEEPSEEK_API_KEY="):
                key = line.split("=")[1].strip()
                if key and key != "":
                    print(f"   –¢–µ–∫—É—â–∏–π –∫–ª—é—á: {key[:20]}...")
                    update = input("\nüîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫–ª—é—á? (y/n): ").strip().lower()
                    if update != 'y':
                        print("\n‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª—é—á")
                        return
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á
    print("\n" + "=" * 60)
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
    print("=" * 60)
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://platform.deepseek.com/api_keys")
    print("2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–ª–∏)")
    print("3. –ù–∞–∂–º–∏—Ç–µ 'Create API Key'")
    print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–ª—é—á (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å sk-...)")
    print("=" * 60)
    
    api_key = input("\nüîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à DEEPSEEK_API_KEY: ").strip()
    
    if not api_key:
        print("\n‚ùå –ö–ª—é—á –Ω–µ –≤–≤–µ–¥–µ–Ω. –û—Ç–º–µ–Ω–∞.")
        return
    
    if not api_key.startswith("sk-"):
        print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ö–ª—é—á –æ–±—ã—á–Ω–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'sk-'")
        confirm = input("   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—Å–µ —Ä–∞–≤–Ω–æ? (y/n): ").strip().lower()
        if confirm != 'y':
            print("\n‚ùå –û—Ç–º–µ–Ω–∞.")
            return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª .env
    lines = content.split("\n")
    updated_lines = []
    key_updated = False
    
    for line in lines:
        if line.startswith("DEEPSEEK_API_KEY="):
            updated_lines.append(f"DEEPSEEK_API_KEY={api_key}")
            key_updated = True
        else:
            updated_lines.append(line)
    
    if not key_updated:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –≤ –∫–æ–Ω–µ—Ü
        if not content.endswith("\n"):
            updated_lines.append("")
        updated_lines.append(f"DEEPSEEK_API_KEY={api_key}")
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(env_path, "w", encoding="utf-8") as f:
        f.write("\n".join(updated_lines))
    
    print("\n" + "=" * 60)
    print("‚úÖ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 60)
    print(f"üìÅ –§–∞–π–ª: {env_path}")
    print(f"üîë –ö–ª—é—á: {api_key[:20]}...")
    print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ backend —Å–µ—Ä–≤–µ—Ä")
    print("2. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å DeepSeek AI")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ HTML —Ç–µ—Å—Ç–µ—Ä–µ")
    print("\nüí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê DEEPSEEK:")
    print("   ‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π API")
    print("   ‚úÖ –ù–ï–¢ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    print("   ‚úÖ –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤")
    print("   ‚úÖ –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞")
    print("=" * 60)

if __name__ == "__main__":
    try:
        setup_deepseek_api()
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

