{
  "openapi": "3.1.0",
  "info": {
    "title": "Clinic Manager API",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "OAuth2 password flow (token endpoint).\n\nAccepts form fields:\n  - username\n  - password\n  - scope (ignored)\nReturns:\n  {\"access_token\": \"<jwt>\", \"token_type\": \"bearer\"}\n\nWorks with both async and sync SQLAlchemy sessions returned by get_db().",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Login Api V1 Auth Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Me",
        "description": "Return current authenticated user profile as plain JSON.",
        "operationId": "me_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/patients/": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "List Patients",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0438\u0441\u043a\u0430 \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438",
        "operationId": "list_patients_api_v1_patients__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0424\u0418\u041e, \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \u0438\u043b\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443",
              "title": "Q"
            },
            "description": "\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0424\u0418\u041e, \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \u0438\u043b\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Patient"
                  },
                  "title": "Response List Patients Api V1 Patients  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Create Patient",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "create_patient_api_v1_patients__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/{patient_id}": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Get Patient",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u043f\u043e ID",
        "operationId": "get_patient_api_v1_patients__patient_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "patients"
        ],
        "summary": "Update Patient",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "update_patient_api_v1_patients__patient_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "patients"
        ],
        "summary": "Delete Patient",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "delete_patient_api_v1_patients__patient_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/{patient_id}/appointments": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Get Patient Appointments",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_patient_appointments_api_v1_patients__patient_id__appointments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits": {
      "get": {
        "tags": [
          "visits"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0438\u0437\u0438\u0442\u043e\u0432",
        "operationId": "list_visits_api_v1_visits_visits_get",
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doctor Id"
            }
          },
          {
            "name": "status_q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Q"
            }
          },
          {
            "name": "planned_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Planned Date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VisitOut"
                  },
                  "title": "Response List Visits Api V1 Visits Visits Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u0438\u0437\u0438\u0442",
        "operationId": "create_visit_api_v1_visits_visits_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}": {
      "get": {
        "tags": [
          "visits"
        ],
        "summary": "\u041a\u0430\u0440\u0442\u043e\u0447\u043a\u0430 \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "get_visit_api_v1_visits_visits__visit_id__get",
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitWithServices"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}/services": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0443 \u043a \u0432\u0438\u0437\u0438\u0442\u0443",
        "operationId": "add_service_api_v1_visits_visits__visit_id__services_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitServiceIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}/status": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u0421\u043c\u0435\u043d\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "set_status_api_v1_visits_visits__visit_id__status_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "status_new",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Status New"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}/reschedule": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u041f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432\u0438\u0437\u0438\u0442 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0434\u0430\u0442\u0443 (new_date \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD)",
        "description": "\u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u0432\u0438\u0437\u0438\u0442\u0430 \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443 (\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 planned_date).\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442, \u0447\u0442\u043e\u0431\u044b \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 visits \u0431\u044b\u043b\u0430 \u043a\u043e\u043b\u043e\u043d\u043a\u0430 planned_date.",
        "operationId": "reschedule_visit_api_v1_visits_visits__visit_id__reschedule_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "new_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "New Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/visits/visits/{visit_id}/reschedule/tomorrow": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "\u041f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432\u0438\u0437\u0438\u0442 \u043d\u0430 \u0437\u0430\u0432\u0442\u0440\u0430 (planned_date = today + 1)",
        "operationId": "reschedule_visit_tomorrow_api_v1_visits_visits__visit_id__reschedule_tomorrow_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/services": {
      "get": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "\u041a\u0430\u0442\u0430\u043b\u043e\u0433 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "list_services_api_v1_services_services_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 120
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOut"
                  },
                  "title": "Response List Services Api V1 Services Services Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/payments": {
      "get": {
        "tags": [
          "payments",
          "payments"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "list_payments_api_v1_payments_payments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Visit Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentOut"
                  },
                  "title": "Response List Payments Api V1 Payments Payments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "payments",
          "payments"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043b\u0430\u0442\u0451\u0436",
        "operationId": "create_payment_api_v1_payments_payments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreateIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queues/stats": {
      "get": {
        "tags": [
          "queues",
          "queues"
        ],
        "summary": "Stats",
        "operationId": "stats_api_v1_queues_stats_get",
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queues/next-ticket": {
      "post": {
        "tags": [
          "queues",
          "queues"
        ],
        "summary": "Next Ticket",
        "operationId": "next_ticket_api_v1_queues_next_ticket_post",
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "List Appointments",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043d\u0430 \u043f\u0440\u0438\u0435\u043c \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438",
        "operationId": "list_appointments_api_v1_appointments__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
              "title": "Patient Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0440\u0430\u0447\u0430"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e",
              "title": "Department"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  },
                  "title": "Response List Appointments Api V1 Appointments  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Create Appointment",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c",
        "operationId": "create_appointment_api_v1_appointments__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Get Appointment",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c \u043f\u043e ID",
        "operationId": "get_appointment_api_v1_appointments__appointment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Update Appointment",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c",
        "operationId": "update_appointment_api_v1_appointments__appointment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Delete Appointment",
        "description": "\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u043f\u0440\u0438\u0435\u043c",
        "operationId": "delete_appointment_api_v1_appointments__appointment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/doctor/{doctor_id}/schedule": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Get Doctor Schedule",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0440\u0430\u0447\u0430 \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "get_doctor_schedule_api_v1_appointments_doctor__doctor_id__schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/department/{department}/schedule": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Get Department Schedule",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "get_department_schedule_api_v1_appointments_department__department__schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/open-day": {
      "post": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Open Day",
        "description": "\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u043d\u044c \u0434\u043b\u044f \u043e\u043d\u043b\u0430\u0439\u043d-\u043e\u0447\u0435\u0440\u0435\u0434\u0438:\n- queue::{dep}::{date}::open = 1\n- queue::{dep}::{date}::start_number = {start_number}\n(last_ticket \u043d\u0435 \u0442\u0440\u043e\u0433\u0430\u0435\u043c; \u0431\u0443\u0434\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e \u043c\u0435\u0440\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0442\u0430\u043b\u043e\u043d\u043e\u0432)",
        "operationId": "open_day_api_v1_appointments_open_day_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ENT",
              "title": "Department"
            },
            "description": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ENT"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "YYYY-MM-DD",
              "title": "Date Str"
            },
            "description": "YYYY-MM-DD"
          },
          {
            "name": "start_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "title": "Start Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/stats": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Stats",
        "operationId": "stats_api_v1_appointments_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "date_str",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Str"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/close": {
      "post": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Close Day",
        "description": "\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u043e\u043d\u043b\u0430\u0439\u043d-\u043d\u0430\u0431\u043e\u0440 (\u043a\u043d\u043e\u043f\u043a\u0430 \u00ab\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u0451\u043c \u0441\u0435\u0439\u0447\u0430\u0441\u00bb).\n\u0424\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 OnlineDay.is_open = False \u0434\u043b\u044f department+date.",
        "operationId": "close_day_api_v1_appointments_close_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ENT",
              "title": "Department"
            },
            "description": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ENT"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "YYYY-MM-DD",
              "title": "Date Str"
            },
            "description": "YYYY-MM-DD"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/qrcode": {
      "get": {
        "tags": [
          "appointments",
          "appointments"
        ],
        "summary": "Qrcode Png",
        "description": "\u041c\u0430\u0440\u0448\u0440\u0443\u0442-\u0437\u0430\u0433\u043b\u0443\u0448\u043a\u0430: \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0430, \u0433\u0434\u0435 \u0443\u0436\u0435 \u0440\u0438\u0441\u0443\u0435\u0442\u0441\u044f QR\n(\u0435\u0441\u043b\u0438 \u0443 \u0442\u0435\u0431\u044f \u0435\u0441\u0442\u044c \u0440\u0435\u0430\u043b\u044c\u043d\u0430\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f PNG \u2014 \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043c\u0435\u043d\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0442\u0443\u0442).",
        "operationId": "qrcode_png_api_v1_appointments_qrcode_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "date_str",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Str"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/open": {
      "post": {
        "tags": [
          "online-queue-new"
        ],
        "summary": "Open Queue",
        "description": "\u041e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u0440\u0438\u0435\u043c\u0430 \u0438 \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u043e\u043d\u043b\u0430\u0439\u043d-\u043d\u0430\u0431\u043e\u0440\u0430\n\u0418\u0437 detail.md \u0441\u0442\u0440. 253: \u041a\u043d\u043e\u043f\u043a\u0430 \u00ab\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u0451\u043c \u0441\u0435\u0439\u0447\u0430\u0441\u00bb \u2192 \u043f\u0440\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f opened_at \u2192 \u043e\u043d\u043b\u0430\u0439\u043d \u043d\u0430\u0431\u043e\u0440 \u0437\u0430\u043a\u0440\u044b\u0442",
        "operationId": "open_queue_api_v1_online_queue_open_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0430\u0442\u0430",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueOpenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/stats": {
      "get": {
        "tags": [
          "online-queue-new"
        ],
        "summary": "Get Queue Stats",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043e\u043d\u043b\u0430\u0439\u043d-\u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "get_queue_stats_api_v1_online_queue_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 30,
              "minimum": 1,
              "description": "\u0414\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434",
              "default": 7,
              "title": "Days Back"
            },
            "description": "\u0414\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/qrcode": {
      "get": {
        "tags": [
          "online-queue",
          "online-queue"
        ],
        "summary": "Online Queue Qrcode",
        "operationId": "online_queue_qrcode_api_v1_online_queue_qrcode_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "date_str",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Str"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "online-queue-new"
        ],
        "summary": "Generate Qr Token",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f QR \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043b\u044f \u043e\u043d\u043b\u0430\u0439\u043d-\u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\u0418\u0437 detail.md \u0441\u0442\u0440. 228: POST /api/online-queue/qrcode?day=YYYY-MM-DD&specialist_id=X \u2192 token",
        "operationId": "generate_qr_token_api_v1_online_queue_qrcode_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 YYYY-MM-DD"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0432\u0440\u0430\u0447\u0430/\u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0432\u0440\u0430\u0447\u0430/\u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/close": {
      "post": {
        "tags": [
          "online-queue",
          "online-queue"
        ],
        "summary": "Online Queue Close",
        "operationId": "online_queue_close_api_v1_online_queue_close_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "date_str",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Str"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          },
          {
            "name": "d",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/join": {
      "post": {
        "tags": [
          "online-queue-new"
        ],
        "summary": "Join Queue",
        "description": "\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u043e\u043d\u043b\u0430\u0439\u043d-\u043e\u0447\u0435\u0440\u0435\u0434\u044c\n\u0418\u0437 detail.md \u0441\u0442\u0440. 235: POST /api/online-queue/join { token, phone?, telegram_id? } \u2192 \u043d\u043e\u043c\u0435\u0440",
        "operationId": "join_queue_api_v1_online_queue_join_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueJoinRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/status": {
      "get": {
        "tags": [
          "online-queue-new"
        ],
        "summary": "Check Queue Status",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438",
        "operationId": "check_queue_status_api_v1_online_queue_status_get",
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0430\u0442\u0430",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/online-queue/today": {
      "get": {
        "tags": [
          "online-queue-new"
        ],
        "summary": "Get Today Queue",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f",
        "operationId": "get_today_queue_api_v1_online_queue_today_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialist_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/services": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Registrar Services",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0438 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b \u0438\u0437 \u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0430 \u0430\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u0438\n\u0418\u0437 detail.md \u0441\u0442\u0440. 112: \"\u0423\u0441\u043b\u0443\u0433\u0438 (\u0447\u0435\u043a\u2011\u043b\u0438\u0441\u0442, \u0433\u0440\u0443\u043f\u043f\u0430\u043c\u0438 \u2014 \u0434\u0435\u0440\u043c\u0430/\u043a\u043e\u0441\u043c\u0435\u0442\u043e\u043b\u043e\u0433\u0438\u044f/\u043a\u0430\u0440\u0434\u0438\u043e/\u042d\u041a\u0413/\u042d\u0445\u043e\u041a\u0413/\u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u044f/\u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u0438\u044f)\"",
        "operationId": "get_registrar_services_api_v1_registrar_services_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438"
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0443\u0441\u043b\u0443\u0433\u0438",
              "default": true,
              "title": "Active Only"
            },
            "description": "\u0422\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0443\u0441\u043b\u0443\u0433\u0438"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/doctors": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Registrar Doctors",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0435\u0439 \u0441 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 106: \"\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442/\u041a\u0430\u0431\u0438\u043d\u0435\u0442\"",
        "operationId": "get_registrar_doctors_api_v1_registrar_doctors_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
              "title": "Specialty"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438"
          },
          {
            "name": "with_schedule",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
              "default": true,
              "title": "With Schedule"
            },
            "description": "\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/queue-settings": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Registrar Queue Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 303-338: \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "get_registrar_queue_settings_api_v1_registrar_queue_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/appointments": {
      "post": {
        "tags": [
          "registrar"
        ],
        "summary": "Create Registrar Appointment",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0447\u0435\u0440\u0435\u0437 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u0443\n\u0418\u0437 detail.md \u0441\u0442\u0440. 366-376: POST /api/visits",
        "operationId": "create_registrar_appointment_api_v1_registrar_appointments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Appointment Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/generate-qr": {
      "post": {
        "tags": [
          "registrar"
        ],
        "summary": "Generate Qr For Registrar",
        "description": "\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f QR \u043a\u043e\u0434\u0430 \u0438\u0437 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 355: POST /api/online-queue/qrcode?day&specialist_id",
        "operationId": "generate_qr_for_registrar_api_v1_registrar_generate_qr_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0430\u0442\u0430",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/open-reception": {
      "post": {
        "tags": [
          "registrar"
        ],
        "summary": "Open Reception",
        "description": "\u041e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u0440\u0438\u0435\u043c\u0430 \u0438\u0437 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 253: \u041a\u043d\u043e\u043f\u043a\u0430 \u00ab\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0438\u0451\u043c \u0441\u0435\u0439\u0447\u0430\u0441\u00bb",
        "operationId": "open_reception_api_v1_registrar_open_reception_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u0414\u0430\u0442\u0430",
              "title": "Day"
            },
            "description": "\u0414\u0430\u0442\u0430"
          },
          {
            "name": "specialist_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430",
              "title": "Specialist Id"
            },
            "description": "ID \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registrar/queues/today": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Today Queues",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 363: GET /api/queue/today?specialist_id",
        "operationId": "get_today_queues_api_v1_registrar_queues_today_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/registrar/calendar": {
      "get": {
        "tags": [
          "registrar"
        ],
        "summary": "Get Registrar Calendar",
        "description": "\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u0443\u0440\u044b\n\u0418\u0437 detail.md \u0441\u0442\u0440. 174-181: \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0441 \u0446\u0432\u0435\u0442\u043e\u0432\u044b\u043c\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043c\u0438",
        "operationId": "get_registrar_calendar_api_v1_registrar_calendar_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0432\u0440\u0430\u0447\u0443",
              "title": "Doctor Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0432\u0440\u0430\u0447\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/{specialty}/queue/today": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Queue Today",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0432\u0440\u0430\u0447\u0430 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1419: GET /api/doctor/cardiology/queue/today",
        "operationId": "get_doctor_queue_today_api_v1_doctor__specialty__queue_today_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/queue/{entry_id}/call": {
      "post": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Call Patient",
        "description": "\u0412\u044b\u0437\u0432\u0430\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0432 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1425: POST /api/visits/:id/complete",
        "operationId": "call_patient_api_v1_doctor_queue__entry_id__call_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/queue/{entry_id}/start-visit": {
      "post": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Start Patient Visit",
        "description": "\u041d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u0438\u0435\u043c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 (\u0441\u0442\u0430\u0442\u0443\u0441 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435)",
        "operationId": "start_patient_visit_api_v1_doctor_queue__entry_id__start_visit_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/queue/{entry_id}/complete": {
      "post": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Complete Patient Visit",
        "description": "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u0438\u0435\u043c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1425: POST /api/visits/:id/complete",
        "operationId": "complete_patient_visit_api_v1_doctor_queue__entry_id__complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Visit Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/{specialty}/services": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Services",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0438 \u0434\u043b\u044f \u0432\u0440\u0430\u0447\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1254: \u0443\u0441\u043b\u0443\u0433\u0438 \u0432\u0438\u0437\u0438\u0442\u0430 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
        "operationId": "get_doctor_services_api_v1_doctor__specialty__services_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/my-info": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0432\u0440\u0430\u0447\u0435",
        "operationId": "get_doctor_info_api_v1_doctor_my_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/doctor/calendar": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Calendar",
        "description": "\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0432\u0440\u0430\u0447\u0430 \u0441 \u0431\u0443\u0434\u0443\u0449\u0438\u043c\u0438 \u0437\u0430\u043f\u0438\u0441\u044f\u043c\u0438\n\u0418\u0437 passport.md \u0441\u0442\u0440. 1223: \u0431\u0443\u0434\u0443\u0449\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0441 \u0446\u0432\u0435\u0442\u0430\u043c\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u0432",
        "operationId": "get_doctor_calendar_api_v1_doctor_calendar_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/stats": {
      "get": {
        "tags": [
          "doctor-integration"
        ],
        "summary": "Get Doctor Stats",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0432\u0440\u0430\u0447\u0430",
        "operationId": "get_doctor_stats_api_v1_doctor_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 30,
              "minimum": 1,
              "description": "\u0414\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434",
              "default": 7,
              "title": "Days Back"
            },
            "description": "\u0414\u043d\u0435\u0439 \u043d\u0430\u0437\u0430\u0434"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Print Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "get_print_templates_api_v1_print_templates_templates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Type"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Language"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrintTemplateOut"
                  },
                  "title": "Response Get Print Templates Api V1 Print Templates Templates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "print-templates"
        ],
        "summary": "Create Print Template",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "create_print_template_api_v1_print_templates_templates_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintTemplateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/{template_id}": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Print Template",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u0435\u0447\u0430\u0442\u0438 \u043f\u043e ID",
        "operationId": "get_print_template_api_v1_print_templates_templates__template_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "print-templates"
        ],
        "summary": "Update Print Template",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "update_print_template_api_v1_print_templates_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintTemplateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "print-templates"
        ],
        "summary": "Delete Print Template",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "delete_print_template_api_v1_print_templates_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/upload/{template_type}": {
      "post": {
        "tags": [
          "print-templates"
        ],
        "summary": "Upload Template File",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
        "operationId": "upload_template_file_api_v1_print_templates_templates_upload__template_type__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Type"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ru",
              "title": "Language"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_template_file_api_v1_print_templates_templates_upload__template_type__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/{template_id}/preview": {
      "post": {
        "tags": [
          "print-templates"
        ],
        "summary": "Preview Template",
        "description": "\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0441 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438",
        "operationId": "preview_template_api_v1_print_templates_templates__template_id__preview_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Preview Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/default/{template_type}": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Default Template",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u043e \u0442\u0438\u043f\u0443",
        "operationId": "get_default_template_api_v1_print_templates_templates_default__template_type__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Type"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ru",
              "title": "Language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/templates/templates/types": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Template Types",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432",
        "operationId": "get_template_types_api_v1_print_templates_templates_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/templates/jobs": {
      "get": {
        "tags": [
          "print-templates"
        ],
        "summary": "Get Print Jobs",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u043f\u0435\u0447\u0430\u0442\u0438",
        "operationId": "get_print_jobs_api_v1_print_templates_jobs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Document Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrintJobOut"
                  },
                  "title": "Response Get Print Jobs Api V1 Print Templates Jobs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/ticket": {
      "post": {
        "tags": [
          "print",
          "print"
        ],
        "summary": "\u041f\u0435\u0447\u0430\u0442\u044c \u0442\u0430\u043b\u043e\u043d\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 (ESC/POS)",
        "operationId": "ticket_escpos_api_v1_print_ticket_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "title": "Department"
            }
          },
          {
            "name": "ticket_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Ticket Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/prescription": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Print Prescription",
        "description": "\u041f\u0435\u0447\u0430\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442\u0430",
        "operationId": "print_prescription_api_v1_print_prescription_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintPrescriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/certificate": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Print Medical Certificate",
        "description": "\u041f\u0435\u0447\u0430\u0442\u044c \u043c\u0435\u0434\u0438\u0446\u0438\u043d\u0441\u043a\u043e\u0439 \u0441\u043f\u0440\u0430\u0432\u043a\u0438",
        "operationId": "print_medical_certificate_api_v1_print_certificate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintCertificateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/receipt": {
      "post": {
        "tags": [
          "print",
          "print"
        ],
        "summary": "\u041f\u0435\u0447\u0430\u0442\u044c \u0447\u0435\u043a\u0430 (ESC/POS)",
        "operationId": "receipt_escpos_api_v1_print_receipt_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Visit Id"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "exclusiveMinimum": 0,
              "title": "Amount"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 8,
              "default": "UZS",
              "title": "Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/lab-results": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Print Lab Results",
        "description": "\u041f\u0435\u0447\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "print_lab_results_api_v1_print_lab_results_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintLabResultsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/printers": {
      "get": {
        "tags": [
          "print-api"
        ],
        "summary": "Get Printers",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u0432",
        "operationId": "get_printers_api_v1_print_printers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/printers/{printer_name}/status": {
      "get": {
        "tags": [
          "print-api"
        ],
        "summary": "Get Printer Status",
        "description": "\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430",
        "operationId": "get_printer_status_api_v1_print_printers__printer_name__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "printer_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Printer Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/printers/{printer_name}/test": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Test Printer",
        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c",
        "operationId": "test_printer_api_v1_print_printers__printer_name__test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "printer_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Printer Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/quick/queue-ticket": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Quick Print Ticket",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c \u0442\u0430\u043b\u043e\u043d\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "quick_print_ticket_api_v1_print_quick_queue_ticket_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickTicketRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/quick/payment-receipt": {
      "post": {
        "tags": [
          "print-api"
        ],
        "summary": "Quick Print Receipt",
        "description": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u043f\u0435\u0447\u0430\u0442\u044c \u0447\u0435\u043a\u0430 \u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u0435",
        "operationId": "quick_print_receipt_api_v1_print_quick_payment_receipt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickReceiptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/print/ticket.pdf": {
      "get": {
        "tags": [
          "print",
          "print"
        ],
        "summary": "\u041f\u0435\u0447\u0430\u0442\u044c \u0442\u0430\u043b\u043e\u043d\u0430 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 (PDF)",
        "operationId": "ticket_pdf_api_v1_print_ticket_pdf_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "title": "Department"
            }
          },
          {
            "name": "ticket_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Ticket Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/print/invoice.pdf": {
      "get": {
        "tags": [
          "print",
          "print"
        ],
        "summary": "\u0421\u0447\u0451\u0442/\u043a\u0432\u0438\u0442\u0430\u043d\u0446\u0438\u044f \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443 (PDF)",
        "operationId": "invoice_pdf_api_v1_print_invoice_pdf_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Visit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/board/state": {
      "get": {
        "tags": [
          "board",
          "board"
        ],
        "summary": "\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u043e",
        "operationId": "board_state_api_v1_board_state_get",
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "title": "Department"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "YYYY-MM-DD",
              "title": "Date"
            },
            "description": "YYYY-MM-DD"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/summary": {
      "get": {
        "tags": [
          "reports",
          "reports"
        ],
        "summary": "\u0421\u0432\u043e\u0434\u043a\u0430 \u0434\u043e\u0445\u043e\u0434\u043e\u0432 \u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "summary_api_v1_reports_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/payme": {
      "post": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Payme Webhook",
        "description": "\u0412\u0435\u0431\u0445\u0443\u043a \u043e\u0442 Payme \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "payme_webhook_api_v1_webhooks_payment_payme_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/click": {
      "post": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Click Webhook",
        "description": "\u0412\u0435\u0431\u0445\u0443\u043a \u043e\u0442 Click \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "click_webhook_api_v1_webhooks_payment_click_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/providers": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "List Providers",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "list_providers_api_v1_webhooks_payment_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderOut"
                  },
                  "type": "array",
                  "title": "Response List Providers Api V1 Webhooks Payment Providers Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Create Provider",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "create_provider_api_v1_webhooks_payment_providers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/payment/providers/{provider_id}": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Get Provider",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043e ID",
        "operationId": "get_provider_api_v1_webhooks_payment_providers__provider_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Update Provider",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "update_provider_api_v1_webhooks_payment_providers__provider_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Delete Provider",
        "description": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "delete_provider_api_v1_webhooks_payment_providers__provider_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "List Webhooks",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0435\u0431\u0445\u0443\u043a\u043e\u0432 \u043e\u043f\u043b\u0430\u0442",
        "operationId": "list_webhooks_api_v1_webhooks_payment_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443",
              "title": "Provider"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443",
              "title": "Status"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentWebhookOut"
                  },
                  "title": "Response List Webhooks Api V1 Webhooks Payment Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/transactions": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "List Transactions",
        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u043e\u043f\u043b\u0430\u0442",
        "operationId": "list_transactions_api_v1_webhooks_payment_transactions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443",
              "title": "Provider"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443",
              "title": "Status"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443"
          },
          {
            "name": "visit_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0438\u0437\u0438\u0442\u0430",
              "title": "Visit Id"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e ID \u0432\u0438\u0437\u0438\u0442\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentTransactionOut"
                  },
                  "title": "Response List Transactions Api V1 Webhooks Payment Transactions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/summary": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Webhook Summary",
        "description": "\u0421\u0432\u043e\u0434\u043a\u0430 \u043f\u043e \u0432\u0435\u0431\u0445\u0443\u043a\u0430\u043c \u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c",
        "operationId": "webhook_summary_api_v1_webhooks_payment_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443",
              "title": "Provider"
            },
            "description": "\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Get Transaction",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043f\u043e ID",
        "operationId": "get_transaction_api_v1_webhooks_payment_transactions__transaction_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTransactionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/payment/{webhook_id}": {
      "get": {
        "tags": [
          "webhooks",
          "payment_webhooks"
        ],
        "summary": "Get Webhook",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0435\u0431\u0445\u0443\u043a\u0430 \u043f\u043e ID",
        "operationId": "get_webhook_api_v1_webhooks_payment__webhook_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentWebhookOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/providers": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Providers",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "operationId": "get_ai_providers_api_v1_admin_ai_providers_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AIProviderOut"
                  },
                  "title": "Response Get Ai Providers Api V1 Admin Ai Providers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Ai Provider",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "create_ai_provider_api_v1_admin_ai_providers_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIProviderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/providers/{provider_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Provider",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043f\u043e ID",
        "operationId": "get_ai_provider_api_v1_admin_ai_providers__provider_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Ai Provider",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "update_ai_provider_api_v1_admin_ai_providers__provider_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Ai Provider",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "delete_ai_provider_api_v1_admin_ai_providers__provider_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/providers/{provider_id}/test": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Test Ai Provider",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "operationId": "test_ai_provider_api_v1_admin_ai_providers__provider_id__test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIProviderTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AITestResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/settings": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 AI \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "get_ai_settings_api_v1_admin_ai_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Ai Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 AI \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
        "operationId": "update_ai_settings_api_v1_admin_ai_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AISystemSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/ai/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI",
        "operationId": "get_ai_stats_api_v1_admin_ai_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Days Back"
            }
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            }
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/ai/usage-logs": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ai Usage Logs",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043b\u043e\u0433\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI",
        "operationId": "get_ai_usage_logs_api_v1_admin_ai_usage_logs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            }
          },
          {
            "name": "task_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Task Type"
            }
          },
          {
            "name": "success_only",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Success Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AIUsageLogOut"
                  },
                  "title": "Response Get Ai Usage Logs Api V1 Admin Ai Usage Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/clinic/settings": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Clinic Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043b\u0438\u043d\u0438\u043a\u0438 \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438",
        "operationId": "get_clinic_settings_api_v1_admin_clinic_settings_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "clinic",
              "title": "Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClinicSettingsOut"
                  },
                  "title": "Response Get Clinic Settings Api V1 Admin Clinic Settings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Clinic Settings Batch",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043a\u043b\u0438\u043d\u0438\u043a\u0438",
        "operationId": "update_clinic_settings_batch_api_v1_admin_clinic_settings_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicSettingsBatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClinicSettingsOut"
                  },
                  "title": "Response Update Clinic Settings Batch Api V1 Admin Clinic Settings Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Clinic Setting",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443",
        "operationId": "create_clinic_setting_api_v1_admin_clinic_settings_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicSettingsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSettingsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/clinic/settings/{key}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Clinic Setting",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u043f\u043e \u043a\u043b\u044e\u0447\u0443",
        "operationId": "get_clinic_setting_api_v1_admin_clinic_settings__key__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSettingsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Clinic Setting",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443",
        "operationId": "update_clinic_setting_api_v1_admin_clinic_settings__key__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicSettingsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSettingsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/clinic/logo": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Upload Clinic Logo",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043b\u043e\u0433\u043e\u0442\u0438\u043f \u043a\u043b\u0438\u043d\u0438\u043a\u0438",
        "operationId": "upload_clinic_logo_api_v1_admin_clinic_logo_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_clinic_logo_api_v1_admin_clinic_logo_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/queue/settings": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Queue Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "get_queue_settings_api_v1_admin_queue_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Queue Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "update_queue_settings_api_v1_admin_queue_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueSettingsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/queue/test": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Test Queue Generation",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 QR \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043b\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "test_queue_generation_api_v1_admin_queue_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/system/info": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get System Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0435",
        "operationId": "get_system_info_api_v1_admin_system_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/service-categories": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Service Categories",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "get_service_categories_api_v1_admin_service_categories_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Specialty"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceCategoryOut"
                  },
                  "title": "Response Get Service Categories Api V1 Admin Service Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/boards": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Boards",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_boards_api_v1_admin_display_boards_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/boards/{board_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Board",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_board_api_v1_admin_display_boards__board_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Display Board",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0442\u0430\u0431\u043b\u043e",
        "operationId": "update_display_board_api_v1_admin_display_boards__board_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Board Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/boards/{board_id}/banners": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Banners",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u0430\u043d\u043d\u0435\u0440\u044b \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_banners_api_v1_admin_display_boards__board_id__banners_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Display Banner",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0431\u0430\u043d\u043d\u0435\u0440 \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u043e",
        "operationId": "create_display_banner_api_v1_admin_display_boards__board_id__banners_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Banner Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/upload-banner": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Upload Banner Image",
        "description": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0431\u0430\u043d\u043d\u0435\u0440\u0430",
        "operationId": "upload_banner_image_api_v1_admin_display_upload_banner_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_banner_image_api_v1_admin_display_upload_banner_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/display/themes": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Themes",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043c\u044b \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_themes_api_v1_admin_display_themes_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/boards/{board_id}/test": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Test Display Board",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u043e",
        "operationId": "test_display_board_api_v1_admin_display_boards__board_id__test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Board Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Test Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/display/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Display Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u0442\u0430\u0431\u043b\u043e",
        "operationId": "get_display_stats_api_v1_admin_display_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days Back"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/doctors": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Doctors",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0440\u0430\u0447\u0435\u0439",
        "operationId": "get_doctors_api_v1_admin_doctors_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          },
          {
            "name": "specialty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorOut"
                  },
                  "title": "Response Get Doctors Api V1 Admin Doctors Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Doctor",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u0440\u0430\u0447\u0430",
        "operationId": "create_doctor_api_v1_admin_doctors_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/doctors/{doctor_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Doctor",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0430 \u043f\u043e ID",
        "operationId": "get_doctor_api_v1_admin_doctors__doctor_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Doctor",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0430",
        "operationId": "update_doctor_api_v1_admin_doctors__doctor_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Doctor",
        "description": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u0440\u0430\u0447\u0430 (\u043c\u044f\u0433\u043a\u043e\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435)",
        "operationId": "delete_doctor_api_v1_admin_doctors__doctor_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/doctors/{doctor_id}/schedule": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Doctor Schedule",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0440\u0430\u0447\u0430",
        "operationId": "get_doctor_schedule_api_v1_admin_doctors__doctor_id__schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleOut"
                  },
                  "title": "Response Get Doctor Schedule Api V1 Admin Doctors  Doctor Id  Schedule Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Doctor Schedule",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0440\u0430\u0447\u0430",
        "operationId": "update_doctor_schedule_api_v1_admin_doctors__doctor_id__schedule_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeeklyScheduleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleOut"
                  },
                  "title": "Response Update Doctor Schedule Api V1 Admin Doctors  Doctor Id  Schedule Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Schedule",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u0440\u0430\u0447\u0430",
        "operationId": "create_schedule_api_v1_admin_doctors__doctor_id__schedule_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Doctor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/specialties": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Specialties",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439",
        "operationId": "get_specialties_api_v1_admin_specialties_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/doctors/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Doctors Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u043e \u0432\u0440\u0430\u0447\u0430\u043c",
        "operationId": "get_doctors_stats_api_v1_admin_doctors_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/providers": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432 \u043e\u043f\u043b\u0430\u0442\u044b (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "list_providers_api_v1_admin_providers_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderOut"
                  },
                  "title": "Response List Providers Api V1 Admin Providers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u043e\u043f\u043b\u0430\u0442\u044b (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "create_new_provider_api_v1_admin_providers_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/providers/{provider_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "get_provider_api_v1_admin_providers__provider_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "update_existing_provider_api_v1_admin_providers__provider_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "description": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "delete_existing_provider_api_v1_admin_providers__provider_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/providers/{provider_id}/test": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0422\u0435\u0441\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "test_provider_connection_api_v1_admin_providers__provider_id__test_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/providers/{provider_id}/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0443 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "get_provider_stats_api_v1_admin_providers__provider_id__stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/providers/bulk-update": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "bulk_update_providers_api_v1_admin_providers_bulk_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array",
                "title": "Updates"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/telegram/settings": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 Telegram",
        "operationId": "get_telegram_settings_api_v1_admin_telegram_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Telegram Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 Telegram",
        "operationId": "update_telegram_settings_api_v1_admin_telegram_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Settings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/telegram/test-bot": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Test Telegram Bot",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a Telegram \u0431\u043e\u0442\u0443",
        "operationId": "test_telegram_bot_api_v1_admin_telegram_test_bot_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/telegram/set-webhook": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Set Telegram Webhook",
        "description": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c webhook \u0434\u043b\u044f Telegram \u0431\u043e\u0442\u0430",
        "operationId": "set_telegram_webhook_api_v1_admin_telegram_set_webhook_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/webhook-info": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Webhook Info",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e webhook",
        "operationId": "get_telegram_webhook_info_api_v1_admin_telegram_webhook_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/telegram/templates": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439",
        "operationId": "get_telegram_templates_api_v1_admin_telegram_templates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ru",
              "title": "Language"
            }
          },
          {
            "name": "template_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/send-test-message": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Send Test Message",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
        "operationId": "send_test_message_api_v1_admin_telegram_send_test_message_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Chat Id"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 Telegram",
        "operationId": "get_telegram_stats_api_v1_admin_telegram_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days Back"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Telegram Users",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 Telegram",
        "operationId": "get_telegram_users_api_v1_admin_telegram_users_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/telegram/broadcast": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Send Broadcast Message",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0448\u0438\u0440\u043e\u043a\u043e\u0432\u0435\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
        "operationId": "send_broadcast_message_api_v1_admin_telegram_broadcast_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ru",
              "title": "Language"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Target Groups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u041e\u0431\u0449\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438",
        "description": "\u0410\u0433\u0440\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438.",
        "operationId": "get_admin_stats_api_v1_admin_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Admin Stats Api V1 Admin Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/quick-stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043b\u044f \u0434\u0430\u0448\u0431\u043e\u0440\u0434\u0430",
        "operationId": "get_quick_stats_api_v1_admin_quick_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Quick Stats Api V1 Admin Quick Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Users",
        "operationId": "list_users_api_v1_admin_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/schedule": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0439",
        "operationId": "list_templates_api_v1_schedule_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 64
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department"
            }
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doctor Id"
            }
          },
          {
            "name": "weekday",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 6,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Weekday"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleRowOut"
                  },
                  "title": "Response List Templates Api V1 Schedule Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
        "operationId": "create_template_api_v1_schedule_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCreateIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRowOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/{id}": {
      "delete": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435",
        "operationId": "delete_template_api_v1_schedule__id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/weekly": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 \u043d\u0435\u0434\u0435\u043b\u044e",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 \u043d\u0435\u0434\u0435\u043b\u044e \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u0438\u043b\u0438 \u0432\u0440\u0430\u0447\u0443",
        "operationId": "get_weekly_schedule_api_v1_schedule_weekly_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "ID \u0432\u0440\u0430\u0447\u0430"
          },
          {
            "name": "week_start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041d\u0430\u0447\u0430\u043b\u043e \u043d\u0435\u0434\u0435\u043b\u0438 (YYYY-MM-DD)",
              "title": "Week Start"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u043e \u043d\u0435\u0434\u0435\u043b\u0438 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/daily": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 \u0434\u0435\u043d\u044c",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
        "operationId": "get_daily_schedule_api_v1_schedule_daily_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "ID \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/available-slots": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0441\u043b\u043e\u0442\u044b \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0441\u043b\u043e\u0442\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "get_available_slots_api_v1_schedule_available_slots_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "doctor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID \u0432\u0440\u0430\u0447\u0430",
              "title": "Doctor Id"
            },
            "description": "ID \u0432\u0440\u0430\u0447\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/doctors": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0440\u0430\u0447\u0435\u0439 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u043c",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0440\u0430\u0447\u0435\u0439, \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u043c",
        "operationId": "get_doctors_by_department_api_v1_schedule_doctors_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/departments": {
      "get": {
        "tags": [
          "schedule",
          "schedule"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439 \u0441 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c",
        "operationId": "get_departments_api_v1_schedule_departments_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/queue/queue/status": {
      "get": {
        "tags": [
          "queue",
          "queue"
        ],
        "summary": "\u0421\u0442\u0430\u0442\u0443\u0441 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0434\u043b\u044f \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "get_queue_status_api_v1_queue_queue_status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/queue/open": {
      "post": {
        "tags": [
          "queue",
          "queue"
        ],
        "summary": "\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c",
        "description": "\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0434\u043b\u044f \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "open_queue_api_v1_queue_queue_open_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "start_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0442\u0430\u043b\u043e\u043d\u0430",
              "default": 1,
              "title": "Start Number"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0442\u0430\u043b\u043e\u043d\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/queue/close": {
      "post": {
        "tags": [
          "queue",
          "queue"
        ],
        "summary": "\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c",
        "description": "\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0434\u043b\u044f \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0434\u0430\u0442\u0443",
        "operationId": "close_queue_api_v1_queue_queue_close_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/queue/next": {
      "post": {
        "tags": [
          "queue",
          "queue"
        ],
        "summary": "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043f\u0430\u0446\u0438\u0435\u043d\u0442",
        "description": "\u0412\u044b\u0437\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0438\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "call_next_patient_api_v1_queue_queue_next_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/queue/complete": {
      "post": {
        "tags": [
          "queue",
          "queue"
        ],
        "summary": "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u0438\u0435\u043c",
        "description": "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u0438\u0435\u043c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "complete_patient_api_v1_queue_queue_complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/queue/add": {
      "post": {
        "tags": [
          "queue",
          "queue"
        ],
        "summary": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c",
        "description": "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c",
        "operationId": "add_to_queue_api_v1_queue_queue_add_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "date_str",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "patient_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0418\u043c\u044f \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
              "title": "Patient Name"
            },
            "description": "\u0418\u043c\u044f \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u0430\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u044c",
              "default": false,
              "title": "Priority"
            },
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u0430\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u044c"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/queue/departments": {
      "get": {
        "tags": [
          "queue",
          "queue"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439 \u0441 \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u043c\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u0445",
        "operationId": "get_queue_departments_api_v1_queue_queue_departments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_str",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Date Str"
            },
            "description": "\u0414\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/queue/history": {
      "get": {
        "tags": [
          "queue",
          "queue"
        ],
        "summary": "\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "get_queue_history_api_v1_queue_queue_history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)",
              "title": "Date From"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)",
              "title": "Date To"
            },
            "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cardio/ecg": {
      "get": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u042d\u041a\u0413 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u042d\u041a\u0413 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439",
        "operationId": "get_ecg_results_api_v1_cardio_ecg_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Ecg Results Api V1 Cardio Ecg Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u042d\u041a\u0413 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u042d\u041a\u0413 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "operationId": "create_ecg_api_v1_cardio_ecg_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Ecg Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Ecg Api V1 Cardio Ecg Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cardio/blood-tests": {
      "get": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u0410\u043d\u0430\u043b\u0438\u0437\u044b \u043a\u0440\u043e\u0432\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432 \u043a\u0440\u043e\u0432\u0438",
        "operationId": "get_blood_tests_api_v1_cardio_blood_tests_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Blood Tests Api V1 Cardio Blood Tests Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0437 \u043a\u0440\u043e\u0432\u0438",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u043a\u0440\u043e\u0432\u0438",
        "operationId": "create_blood_test_api_v1_cardio_blood_tests_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Blood Test Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Blood Test Api V1 Cardio Blood Tests Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cardio/risk-assessment": {
      "get": {
        "tags": [
          "cardio",
          "cardio"
        ],
        "summary": "\u041e\u0446\u0435\u043d\u043a\u0430 \u0440\u0438\u0441\u043a\u043e\u0432",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u043a\u0430\u0440\u0434\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0438\u0441\u043a\u043e\u0432",
        "operationId": "get_risk_assessment_api_v1_cardio_risk_assessment_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Risk Assessment Api V1 Cardio Risk Assessment Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/derma/examinations": {
      "get": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u041e\u0441\u043c\u043e\u0442\u0440\u044b \u043a\u043e\u0436\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432 \u043a\u043e\u0436\u0438",
        "operationId": "get_skin_examinations_api_v1_derma_examinations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Skin Examinations Api V1 Derma Examinations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u0436\u0438",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u0436\u0438",
        "operationId": "create_skin_examination_api_v1_derma_examinations_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Examination Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Skin Examination Api V1 Derma Examinations Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/derma/procedures": {
      "get": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u041a\u043e\u0441\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u0441\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440",
        "operationId": "get_cosmetic_procedures_api_v1_derma_procedures_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Cosmetic Procedures Api V1 Derma Procedures Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u0441\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0443",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u0441\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0443",
        "operationId": "create_cosmetic_procedure_api_v1_derma_procedures_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Procedure Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Cosmetic Procedure Api V1 Derma Procedures Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/derma/photo-gallery": {
      "get": {
        "tags": [
          "derma",
          "derma"
        ],
        "summary": "\u0424\u043e\u0442\u043e\u0433\u0430\u043b\u0435\u0440\u0435\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0444\u043e\u0442\u043e\u0433\u0430\u043b\u0435\u0440\u0435\u044e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_photo_gallery_api_v1_derma_photo_gallery_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Photo Gallery Api V1 Derma Photo Gallery Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/examinations": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0421\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0441\u043c\u043e\u0442\u0440\u044b",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432",
        "operationId": "get_dental_examinations_api_v1_dental_examinations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Dental Examinations Api V1 Dental Examinations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043e\u0441\u043c\u043e\u0442\u0440",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043e\u0441\u043c\u043e\u0442\u0440",
        "operationId": "create_dental_examination_api_v1_dental_examinations_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Examination Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Dental Examination Api V1 Dental Examinations Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/treatments": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u041f\u043b\u0430\u043d\u044b \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u043d\u043e\u0432 \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "operationId": "get_treatment_plans_api_v1_dental_treatments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Treatment Plans Api V1 Dental Treatments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043b\u0430\u043d \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u043b\u0430\u043d \u043b\u0435\u0447\u0435\u043d\u0438\u044f",
        "operationId": "create_treatment_plan_api_v1_dental_treatments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Treatment Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Treatment Plan Api V1 Dental Treatments Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/prosthetics": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u041f\u0440\u043e\u0442\u0435\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0442\u0435\u0437\u043e\u0432",
        "operationId": "get_prosthetics_api_v1_dental_prosthetics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Prosthetics Api V1 Dental Prosthetics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0442\u0435\u0437",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u0442\u0435\u0437",
        "operationId": "create_prosthetic_api_v1_dental_prosthetics_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Prosthetic Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Prosthetic Api V1 Dental Prosthetics Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dental/xray": {
      "get": {
        "tags": [
          "dental",
          "dental"
        ],
        "summary": "\u0420\u0435\u043d\u0442\u0433\u0435\u043d\u043e\u0432\u0441\u043a\u0438\u0435 \u0441\u043d\u0438\u043c\u043a\u0438",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u043d\u0442\u0433\u0435\u043d\u043e\u0432\u0441\u043a\u0438\u0435 \u0441\u043d\u0438\u043c\u043a\u0438 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430",
        "operationId": "get_xray_images_api_v1_dental_xray_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Xray Images Api V1 Dental Xray Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lab/tests": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439",
        "operationId": "get_lab_tests_api_v1_lab_tests_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Lab Tests Api V1 Lab Tests Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "operationId": "create_lab_test_api_v1_lab_tests_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Test Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Lab Test Api V1 Lab Tests Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lab/results": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "get_lab_results_api_v1_lab_results_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Lab Results Api V1 Lab Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
        "operationId": "create_lab_result_api_v1_lab_results_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Result Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Lab Result Api V1 Lab Results Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lab/reports": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u043e\u0442\u0447\u0435\u0442\u044b",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u043e\u0442\u0447\u0435\u0442\u044b \u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434",
        "operationId": "get_lab_reports_api_v1_lab_reports_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Lab Reports Api V1 Lab Reports Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lab/reference-ranges": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u0420\u0435\u0444\u0435\u0440\u0435\u043d\u0441\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u0444\u0435\u0440\u0435\u043d\u0441\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432",
        "operationId": "get_reference_ranges_api_v1_lab_reference_ranges_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Reference Ranges Api V1 Lab Reference Ranges Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/lab/equipment": {
      "get": {
        "tags": [
          "lab_specialized",
          "lab_specialized"
        ],
        "summary": "\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f",
        "operationId": "get_lab_equipment_api_v1_lab_equipment_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Lab Equipment Api V1 Lab Equipment Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/appointments/{appointment_id}/start-visit": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Start Visit",
        "description": "\u041d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u0438\u0435\u043c (\u043f\u0435\u0440\u0435\u0445\u043e\u0434 paid -> in_visit)",
        "operationId": "start_visit_api_v1_appointments__appointment_id__start_visit_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/emr": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Create Or Update Emr",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c EMR",
        "operationId": "create_or_update_emr_api_v1_appointments__appointment_id__emr_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EMRCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMR"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Get Emr",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c EMR \u043f\u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "get_emr_api_v1_appointments__appointment_id__emr_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EMR"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Emr Api V1 Appointments  Appointment Id  Emr Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/emr/save": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Save Emr",
        "description": "\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c EMR (\u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0438\u0437 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430)",
        "operationId": "save_emr_api_v1_appointments__appointment_id__emr_save_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMR"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/prescription": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Create Or Update Prescription",
        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442",
        "operationId": "create_or_update_prescription_api_v1_appointments__appointment_id__prescription_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Get Prescription",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442 \u043f\u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "get_prescription_api_v1_appointments__appointment_id__prescription_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Prescription"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Prescription Api V1 Appointments  Appointment Id  Prescription Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/prescription/save": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Save Prescription",
        "description": "\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0440\u0435\u0446\u0435\u043f\u0442 (\u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0438\u0437 \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a\u0430)",
        "operationId": "save_prescription_api_v1_appointments__appointment_id__prescription_save_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/complete": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Complete Visit",
        "description": "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u0438\u0435\u043c (\u043f\u0435\u0440\u0435\u0445\u043e\u0434 in_visit -> completed)",
        "operationId": "complete_visit_api_v1_appointments__appointment_id__complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/mark-paid": {
      "post": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Mark Appointment Paid",
        "description": "\u041e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u043a\u0430\u043a \u043e\u043f\u043b\u0430\u0447\u0435\u043d\u043d\u0443\u044e (\u043f\u0435\u0440\u0435\u0445\u043e\u0434 pending -> paid)",
        "operationId": "mark_appointment_paid_api_v1_appointments__appointment_id__mark_paid_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/status": {
      "get": {
        "tags": [
          "appointment_flow"
        ],
        "summary": "Get Appointment Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
        "operationId": "get_appointment_status_api_v1_appointments__appointment_id__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Appointment Status Api V1 Appointments  Appointment Id  Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/visits": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Visit Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438 \u0432\u0438\u0437\u0438\u0442\u043e\u0432",
        "operationId": "get_visit_analytics_api_v1_analytics_visits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/patients": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Patient Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432",
        "operationId": "get_patient_analytics_api_v1_analytics_patients_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/revenue": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Revenue Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438 \u0434\u043e\u0445\u043e\u0434\u043e\u0432",
        "operationId": "get_revenue_analytics_api_v1_analytics_revenue_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/services": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Service Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438 \u0443\u0441\u043b\u0443\u0433",
        "operationId": "get_service_analytics_api_v1_analytics_services_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/queues": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Queue Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439",
        "operationId": "get_queue_analytics_api_v1_analytics_queues_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/comprehensive": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Comprehensive Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0447\u0451\u0442\u0430",
        "operationId": "get_comprehensive_analytics_api_v1_analytics_comprehensive_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/trends": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Trends Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0440\u0435\u043d\u0434\u043e\u0432 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 N \u0434\u043d\u0435\u0439",
        "operationId": "get_trends_analytics_api_v1_analytics_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430",
              "default": 30,
              "title": "Days"
            },
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/dashboard": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Dashboard Data",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0434\u0430\u0448\u0431\u043e\u0440\u0434\u0430",
        "operationId": "get_dashboard_data_api_v1_analytics_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/payment-providers": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Payment Provider Analytics",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430 \u043f\u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430\u043c \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439",
        "operationId": "get_payment_provider_analytics_api_v1_analytics_payment_providers_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/appointment-flow": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Appointment Flow Analytics",
        "description": "\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430 \u043f\u043e\u0442\u043e\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 (appointments)",
        "operationId": "get_appointment_flow_analytics_api_v1_analytics_appointment_flow_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/revenue-breakdown": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Revenue Breakdown Analytics",
        "description": "\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430 \u0434\u043e\u0445\u043e\u0434\u043e\u0432",
        "operationId": "get_revenue_breakdown_analytics_api_v1_analytics_revenue_breakdown_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 (YYYY-MM-DD)"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/quick-stats": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Quick Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438",
        "operationId": "get_quick_stats_api_v1_analytics_quick_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/send-appointment-reminder": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Appointment Reminder",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043e \u0437\u0430\u043f\u0438\u0441\u0438",
        "operationId": "send_appointment_reminder_api_v1_notifications_send_appointment_reminder_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "appointment_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Appointment Date"
            }
          },
          {
            "name": "doctor_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doctor Name"
            }
          },
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-visit-confirmation": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Visit Confirmation",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0432\u0438\u0437\u0438\u0442\u0430",
        "operationId": "send_visit_confirmation_api_v1_notifications_send_visit_confirmation_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "queue_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Queue Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-payment-notification": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Payment Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u0435",
        "operationId": "send_payment_notification_api_v1_notifications_send_payment_notification_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Visit Id"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Amount"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-queue-update": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Queue Update",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
        "operationId": "send_queue_update_api_v1_notifications_send_queue_update_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Department"
            }
          },
          {
            "name": "current_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Current Number"
            }
          },
          {
            "name": "estimated_wait",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Estimated Wait"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send-system-alert": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send System Alert",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u0432)",
        "operationId": "send_system_alert_api_v1_notifications_send_system_alert_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "alert_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Type"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/test-notifications": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Test Notifications",
        "description": "\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0442\u0438\u043f\u043e\u0432 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "test_notifications_api_v1_notifications_test_notifications_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/notification-status": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Status",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_status_api_v1_notifications_notification_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/templates": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Templates",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_templates_api_v1_notifications_templates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationTemplate"
                  },
                  "type": "array",
                  "title": "Response Get Notification Templates Api V1 Notifications Templates Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Create Notification Template",
        "description": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
        "operationId": "create_notification_template_api_v1_notifications_templates_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/templates/{template_id}": {
      "put": {
        "tags": [
          "notifications"
        ],
        "summary": "Update Notification Template",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
        "operationId": "update_notification_template_api_v1_notifications_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notifications"
        ],
        "summary": "Delete Notification Template",
        "description": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
        "operationId": "delete_notification_template_api_v1_notifications_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/history": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_history_api_v1_notifications_history_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "recipient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Recipient Id"
            }
          },
          {
            "name": "recipient_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Recipient Type"
            }
          },
          {
            "name": "notification_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notification Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHistory"
                  },
                  "title": "Response Get Notification History Api V1 Notifications History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/history/stats": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Stats",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_notification_stats_api_v1_notifications_history_stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "default": 7,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/settings/{user_id}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get User Notification Settings",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "get_user_notification_settings_api_v1_notifications_settings__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "user_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: patient, doctor, admin",
              "title": "User Type"
            },
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: patient, doctor, admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notifications"
        ],
        "summary": "Update User Notification Settings",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
        "operationId": "update_user_notification_settings_api_v1_notifications_settings__user_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "user_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
              "title": "User Type"
            },
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettingsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/send": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Notification",
        "description": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
        "operationId": "send_notification_api_v1_notifications_send_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationHistory"
                  },
                  "type": "array",
                  "title": "Response Send Notification Api V1 Notifications Send Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/send-bulk": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Bulk Notification",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
        "operationId": "send_bulk_notification_api_v1_notifications_send_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Send Bulk Notification Api V1 Notifications Send Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/docs/api-docs": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Get Api Docs",
        "description": "\u041f\u043e\u043b\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API \u0441 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c\u0438",
        "operationId": "get_api_docs_api_v1_docs_api_docs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/docs/api-schema": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Get Api Schema",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c JSON \u0441\u0445\u0435\u043c\u0443 API",
        "operationId": "get_api_schema_api_v1_docs_api_schema_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/docs/endpoints-summary": {
      "get": {
        "tags": [
          "documentation"
        ],
        "summary": "Get Endpoints Summary",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432",
        "operationId": "get_endpoints_summary_api_v1_docs_endpoints_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/documentation/documentation/endpoints": {
      "get": {
        "tags": [
          "api-docs"
        ],
        "summary": "Get Detailed Endpoints Documentation",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u043e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430\u043c",
        "operationId": "get_detailed_endpoints_documentation_api_v1_documentation_documentation_endpoints_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432",
              "title": "Category"
            },
            "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documentation/documentation/examples": {
      "get": {
        "tags": [
          "api-docs"
        ],
        "summary": "Get Api Examples",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f API",
        "operationId": "get_api_examples_api_v1_documentation_documentation_examples_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442",
              "title": "Endpoint"
            },
            "description": "\u041a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documentation/documentation/status-codes": {
      "get": {
        "tags": [
          "api-docs"
        ],
        "summary": "Get Status Codes Documentation",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u043e \u043a\u043e\u0434\u0430\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u0432",
        "operationId": "get_status_codes_documentation_api_v1_documentation_documentation_status_codes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/documentation/documentation/authentication": {
      "get": {
        "tags": [
          "api-docs"
        ],
        "summary": "Get Authentication Documentation",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u043e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438",
        "operationId": "get_authentication_documentation_api_v1_documentation_documentation_authentication_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/cardiology/patients": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Cardiology Patients",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432 \u043a\u0430\u0440\u0434\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_cardiology_patients_api_v1_specialized_cardiology_patients_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/cardiology/visits": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Cardiology Visits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0438\u0442\u044b \u043a\u0430\u0440\u0434\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_cardiology_visits_api_v1_specialized_cardiology_visits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/cardiology/analytics": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Cardiology Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u043a\u0430\u0440\u0434\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_cardiology_analytics_api_v1_specialized_cardiology_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/dentistry/patients": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Dentistry Patients",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u043e\u0432 \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_dentistry_patients_api_v1_specialized_dentistry_patients_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/dentistry/visits": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Dentistry Visits",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0438\u0437\u0438\u0442\u044b \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_dentistry_visits_api_v1_specialized_dentistry_visits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/dentistry/analytics": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Dentistry Analytics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0441\u0442\u043e\u043c\u0430\u0442\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f",
        "operationId": "get_dentistry_analytics_api_v1_specialized_dentistry_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/specialized/services": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Specialized Services",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0441\u043b\u0443\u0433\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0439",
        "operationId": "get_specialized_services_api_v1_specialized_specialized_services_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435: cardiology, dentistry",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435: cardiology, dentistry"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/specialized/patient-history/{patient_id}": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Specialized Patient History",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430 \u0432 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0438",
        "operationId": "get_specialized_patient_history_api_v1_specialized_specialized_patient_history__patient_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Patient Id"
            }
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435: cardiology, dentistry",
              "title": "Department"
            },
            "description": "\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435: cardiology, dentistry"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/specialized/specialized/statistics": {
      "get": {
        "tags": [
          "specialized-panels"
        ],
        "summary": "Get Specialized Statistics",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u0449\u0443\u044e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0443 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u043c",
        "operationId": "get_specialized_statistics_api_v1_specialized_specialized_statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "\u041f\u0440\u043e\u0441\u0442\u043e\u0439 healthcheck + \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0411\u0414",
        "operationId": "get_health_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/status": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "\u041a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
        "operationId": "get_status_api_v1_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/activation/issue": {
      "post": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u0412\u044b\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043a\u043b\u044e\u0447 (Admin)",
        "operationId": "activation_issue_api_v1_activation_issue_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationIssueIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationIssueOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/activation/activate": {
      "post": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u044e\u0447 \u043d\u0430 \u044d\u0442\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435",
        "operationId": "activation_activate_api_v1_activation_activate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationActivateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationActivateOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activation/status": {
      "get": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u0421\u0442\u0430\u0442\u0443\u0441 \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
        "operationId": "activation_status_api_v1_activation_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationStatusOut"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activation/list": {
      "get": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u0421\u043f\u0438\u0441\u043e\u043a \u0432\u044b\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 (Admin)",
        "operationId": "activation_list_api_v1_activation_list_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "issued|trial|active|expired|revoked",
              "title": "Status"
            },
            "description": "issued|trial|active|expired|revoked"
          },
          {
            "name": "key_like",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "\u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \u043a\u043b\u044e\u0447\u0430",
              "title": "Key Like"
            },
            "description": "\u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \u043a\u043b\u044e\u0447\u0430"
          },
          {
            "name": "machine_hash",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Machine Hash"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationListOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activation/revoke": {
      "post": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u041e\u0442\u043e\u0437\u0432\u0430\u0442\u044c \u043a\u043b\u044e\u0447 (Admin)",
        "operationId": "activation_revoke_api_v1_activation_revoke_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationRevokeIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/activation/extend": {
      "post": {
        "tags": [
          "activation",
          "activation"
        ],
        "summary": "\u041f\u0440\u043e\u0434\u043b\u0438\u0442\u044c \u043a\u043b\u044e\u0447 (Admin)",
        "operationId": "activation_extend_api_v1_activation_extend_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationExtendIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/_routes": {
      "get": {
        "summary": " Routes",
        "operationId": "_routes__routes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "title": "Name",
            "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "display_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Display Name",
            "description": "\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0435 \u0438\u043c\u044f"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "API \u043a\u043b\u044e\u0447"
          },
          "api_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Url",
            "description": "\u0411\u0430\u0437\u043e\u0432\u044b\u0439 URL API"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "\u041c\u043e\u0434\u0435\u043b\u044c AI"
          },
          "temperature": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Temperature",
            "description": "\u0422\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438",
            "default": 0.2
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 8000.0,
            "minimum": 1.0,
            "title": "Max Tokens",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0442\u043e\u043a\u0435\u043d\u043e\u0432",
            "default": 1000
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
            "default": false
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e",
            "default": false
          },
          "capabilities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Capabilities",
            "description": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438: text, vision, ocr"
          },
          "limits": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limits",
            "description": "\u041b\u0438\u043c\u0438\u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f"
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name"
        ],
        "title": "AIProviderCreate"
      },
      "AIProviderOut": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "title": "Name",
            "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "display_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Display Name",
            "description": "\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0435 \u0438\u043c\u044f"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "\u0421\u043a\u0440\u044b\u0442 \u0438\u0437 \u0441\u043e\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438"
          },
          "api_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Url",
            "description": "\u0411\u0430\u0437\u043e\u0432\u044b\u0439 URL API"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "\u041c\u043e\u0434\u0435\u043b\u044c AI"
          },
          "temperature": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Temperature",
            "description": "\u0422\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438",
            "default": 0.2
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 8000.0,
            "minimum": 1.0,
            "title": "Max Tokens",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0442\u043e\u043a\u0435\u043d\u043e\u0432",
            "default": 1000
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
            "default": false
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e",
            "default": false
          },
          "capabilities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Capabilities",
            "description": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438: text, vision, ocr"
          },
          "limits": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limits",
            "description": "\u041b\u0438\u043c\u0438\u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name",
          "id"
        ],
        "title": "AIProviderOut"
      },
      "AIProviderTestRequest": {
        "properties": {
          "test_prompt": {
            "type": "string",
            "title": "Test Prompt",
            "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u043c\u043f\u0442",
            "default": "\u041f\u0440\u0438\u0432\u0435\u0442, \u043a\u0430\u043a \u0434\u0435\u043b\u0430?"
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "description": "\u0422\u0438\u043f \u0437\u0430\u0434\u0430\u0447\u0438: text, vision, ocr",
            "default": "text"
          }
        },
        "type": "object",
        "title": "AIProviderTestRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
      },
      "AIProviderUpdate": {
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key"
          },
          "api_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Url"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 8000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          },
          "is_default": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Default"
          },
          "capabilities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Capabilities"
          },
          "limits": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limits"
          }
        },
        "type": "object",
        "title": "AIProviderUpdate"
      },
      "AIStatsResponse": {
        "properties": {
          "total_requests": {
            "type": "integer",
            "title": "Total Requests"
          },
          "successful_requests": {
            "type": "integer",
            "title": "Successful Requests"
          },
          "failed_requests": {
            "type": "integer",
            "title": "Failed Requests"
          },
          "total_tokens_used": {
            "type": "integer",
            "title": "Total Tokens Used"
          },
          "average_response_time_ms": {
            "type": "number",
            "title": "Average Response Time Ms"
          },
          "cache_hit_rate": {
            "type": "number",
            "title": "Cache Hit Rate"
          },
          "by_provider": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "By Provider"
          },
          "by_task_type": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "By Task Type"
          },
          "by_specialty": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "By Specialty"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End"
          }
        },
        "type": "object",
        "required": [
          "total_requests",
          "successful_requests",
          "failed_requests",
          "total_tokens_used",
          "average_response_time_ms",
          "cache_hit_rate",
          "by_provider",
          "by_task_type",
          "by_specialty",
          "period_start",
          "period_end"
        ],
        "title": "AIStatsResponse",
        "description": "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f AI"
      },
      "AISystemSettings": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u043b\u0438 AI \u0441\u0438\u0441\u0442\u0435\u043c\u0430",
            "default": true
          },
          "default_provider": {
            "type": "string",
            "title": "Default Provider",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e",
            "default": "openai"
          },
          "fallback_chain": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Fallback Chain",
            "description": "\u0426\u0435\u043f\u043e\u0447\u043a\u0430 fallback \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432",
            "default": [
              "openai",
              "gemini",
              "deepseek"
            ]
          },
          "cache_enabled": {
            "type": "boolean",
            "title": "Cache Enabled",
            "description": "\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043b\u0438 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435",
            "default": true
          },
          "cache_ttl_hours": {
            "type": "integer",
            "maximum": 168.0,
            "minimum": 1.0,
            "title": "Cache Ttl Hours",
            "description": "TTL \u043a\u044d\u0448\u0430 \u0432 \u0447\u0430\u0441\u0430\u0445",
            "default": 24
          },
          "global_limits": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Global Limits",
            "description": "\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043b\u0438\u043c\u0438\u0442\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b",
            "default": {
              "requests_per_minute": 60,
              "tokens_per_day": 50000,
              "max_file_size_mb": 10
            }
          },
          "require_consent_for_files": {
            "type": "boolean",
            "title": "Require Consent For Files",
            "description": "\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0433\u043b\u0430\u0441\u0438\u0435 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432",
            "default": true
          },
          "anonymize_data": {
            "type": "boolean",
            "title": "Anonymize Data",
            "description": "\u0410\u043d\u043e\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435",
            "default": true
          },
          "audit_all_requests": {
            "type": "boolean",
            "title": "Audit All Requests",
            "description": "\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b",
            "default": true
          }
        },
        "type": "object",
        "title": "AISystemSettings",
        "description": "\u041e\u0431\u0449\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 AI \u0441\u0438\u0441\u0442\u0435\u043c\u044b"
      },
      "AITestResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "response_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Text"
          },
          "response_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time Ms"
          },
          "tokens_used": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens Used"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "provider_info": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provider Info",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "AITestResult",
        "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f AI \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
      },
      "AIUsageLogOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "provider_id": {
            "type": "integer",
            "title": "Provider Id"
          },
          "task_type": {
            "type": "string",
            "title": "Task Type"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "tokens_used": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens Used"
          },
          "response_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time Ms"
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "cached_response": {
            "type": "boolean",
            "title": "Cached Response"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "provider_id",
          "task_type",
          "success",
          "cached_response"
        ],
        "title": "AIUsageLogOut"
      },
      "ActivationActivateIn": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 64,
            "minLength": 8,
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "ActivationActivateIn"
      },
      "ActivationActivateOut": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "machine_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Hash"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "issued",
                  "trial",
                  "active",
                  "expired",
                  "revoked"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "ok"
        ],
        "title": "ActivationActivateOut"
      },
      "ActivationExtendIn": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 64,
            "minLength": 8,
            "title": "Key"
          },
          "days": {
            "type": "integer",
            "maximum": 3650.0,
            "minimum": 1.0,
            "title": "Days"
          }
        },
        "type": "object",
        "required": [
          "key",
          "days"
        ],
        "title": "ActivationExtendIn"
      },
      "ActivationIssueIn": {
        "properties": {
          "days": {
            "type": "integer",
            "maximum": 3650.0,
            "minimum": 1.0,
            "title": "Days",
            "default": 365
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "issued",
                  "trial",
                  "active",
                  "expired",
                  "revoked"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "meta": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "title": "ActivationIssueIn"
      },
      "ActivationIssueOut": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "status": {
            "type": "string",
            "enum": [
              "issued",
              "trial",
              "active",
              "expired",
              "revoked"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "key",
          "status"
        ],
        "title": "ActivationIssueOut"
      },
      "ActivationListOut": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ActivationListRow"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "ActivationListOut"
      },
      "ActivationListRow": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "machine_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Hash"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "status": {
            "type": "string",
            "enum": [
              "issued",
              "trial",
              "active",
              "expired",
              "revoked"
            ],
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "meta": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "key",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "ActivationListRow"
      },
      "ActivationRevokeIn": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 64,
            "minLength": 8,
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "ActivationRevokeIn"
      },
      "ActivationStatusOut": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "issued",
                  "trial",
                  "active",
                  "expired",
                  "revoked"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "machine_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Hash"
          }
        },
        "type": "object",
        "required": [
          "ok"
        ],
        "title": "ActivationStatusOut"
      },
      "Appointment": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "appointment_date": {
            "type": "string",
            "format": "date",
            "title": "Appointment Date"
          },
          "appointment_time": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "type": "string",
            "maxLength": 16,
            "title": "Status",
            "default": "scheduled"
          },
          "payment_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Amount"
          },
          "payment_currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Currency",
            "default": "UZS"
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider"
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id"
          },
          "payment_webhook_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Webhook Id"
          },
          "payment_processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Processed At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "appointment_date",
          "id",
          "created_at"
        ],
        "title": "Appointment"
      },
      "AppointmentCreate": {
        "properties": {
          "patient_id": {
            "type": "integer",
            "title": "Patient Id"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "appointment_date": {
            "type": "string",
            "format": "date",
            "title": "Appointment Date"
          },
          "appointment_time": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "type": "string",
            "maxLength": 16,
            "title": "Status",
            "default": "scheduled"
          },
          "payment_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Amount"
          },
          "payment_currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Currency",
            "default": "UZS"
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider"
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id"
          },
          "payment_webhook_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Webhook Id"
          },
          "payment_processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Processed At"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "appointment_date"
        ],
        "title": "AppointmentCreate"
      },
      "AppointmentUpdate": {
        "properties": {
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "appointment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Date"
          },
          "appointment_time": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "payment_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Amount"
          },
          "payment_currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Currency"
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider"
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id"
          },
          "payment_webhook_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Webhook Id"
          },
          "payment_processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Processed At"
          }
        },
        "type": "object",
        "title": "AppointmentUpdate"
      },
      "Body_login_api_v1_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "format": "password",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_api_v1_auth_login_post"
      },
      "Body_upload_banner_image_api_v1_admin_display_upload_banner_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_banner_image_api_v1_admin_display_upload_banner_post"
      },
      "Body_upload_clinic_logo_api_v1_admin_clinic_logo_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_clinic_logo_api_v1_admin_clinic_logo_post"
      },
      "Body_upload_template_file_api_v1_print_templates_templates_upload__template_type__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_template_file_api_v1_print_templates_templates_upload__template_type__post"
      },
      "BulkNotificationRequest": {
        "properties": {
          "recipient_type": {
            "type": "string",
            "title": "Recipient Type",
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439"
          },
          "recipient_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Recipient Ids",
            "description": "ID \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439"
          },
          "notification_type": {
            "type": "string",
            "title": "Notification Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Channels",
            "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
            "default": [
              "email"
            ]
          },
          "template_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Template Data",
            "description": "\u041e\u0431\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
            "default": {}
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442",
            "default": "normal"
          }
        },
        "type": "object",
        "required": [
          "recipient_type",
          "recipient_ids",
          "notification_type"
        ],
        "title": "BulkNotificationRequest"
      },
      "ClinicSettingsBatch": {
        "properties": {
          "settings": {
            "additionalProperties": true,
            "type": "object",
            "title": "Settings",
            "description": "\u0421\u043b\u043e\u0432\u0430\u0440\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a {key: value}"
          }
        },
        "type": "object",
        "required": [
          "settings"
        ],
        "title": "ClinicSettingsBatch",
        "description": "\u041c\u0430\u0441\u0441\u043e\u0432\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a"
      },
      "ClinicSettingsCreate": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 100,
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "ClinicSettingsCreate"
      },
      "ClinicSettingsOut": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 100,
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "id"
        ],
        "title": "ClinicSettingsOut"
      },
      "ClinicSettingsUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "ClinicSettingsUpdate"
      },
      "DoctorCreate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "specialty": {
            "type": "string",
            "maxLength": 100,
            "title": "Specialty",
            "description": "cardiology, dermatology, stomatology"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "price_default": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Default"
          },
          "start_number_online": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Start Number Online",
            "default": 1
          },
          "max_online_per_day": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Max Online Per Day",
            "default": 15
          },
          "auto_close_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Close Time",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0430\u0432\u0442\u043e\u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "specialty"
        ],
        "title": "DoctorCreate"
      },
      "DoctorOut": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "specialty": {
            "type": "string",
            "maxLength": 100,
            "title": "Specialty",
            "description": "cardiology, dermatology, stomatology"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "price_default": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Default"
          },
          "start_number_online": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Start Number Online",
            "default": 1
          },
          "max_online_per_day": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Max Online Per Day",
            "default": 15
          },
          "auto_close_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Close Time",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0430\u0432\u0442\u043e\u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "user": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "schedules": {
            "items": {
              "$ref": "#/components/schemas/ScheduleOut"
            },
            "type": "array",
            "title": "Schedules",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "specialty",
          "id"
        ],
        "title": "DoctorOut"
      },
      "DoctorUpdate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "price_default": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Default"
          },
          "start_number_online": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Number Online"
          },
          "max_online_per_day": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Online Per Day"
          },
          "auto_close_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Close Time"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          }
        },
        "type": "object",
        "title": "DoctorUpdate"
      },
      "EMR": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "complaints": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Complaints"
          },
          "anamnesis": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Anamnesis"
          },
          "examination": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Examination"
          },
          "diagnosis": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Diagnosis"
          },
          "icd10": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Icd10"
          },
          "recommendations": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendations"
          },
          "procedures": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Procedures"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "saved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saved At"
          }
        },
        "type": "object",
        "required": [
          "appointment_id",
          "id",
          "created_at"
        ],
        "title": "EMR",
        "description": "\u041f\u043e\u043b\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 EMR"
      },
      "EMRCreate": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "complaints": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Complaints"
          },
          "anamnesis": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Anamnesis"
          },
          "examination": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Examination"
          },
          "diagnosis": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Diagnosis"
          },
          "icd10": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Icd10"
          },
          "recommendations": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendations"
          },
          "procedures": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Procedures"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "appointment_id"
        ],
        "title": "EMRCreate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f EMR"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MedicationItem": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "dosage": {
            "type": "string",
            "maxLength": 100,
            "title": "Dosage"
          },
          "frequency": {
            "type": "string",
            "maxLength": 100,
            "title": "Frequency"
          },
          "duration": {
            "type": "string",
            "maxLength": 100,
            "title": "Duration"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Quantity",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "name",
          "dosage",
          "frequency",
          "duration"
        ],
        "title": "MedicationItem",
        "description": "\u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u0440\u0435\u043f\u0430\u0440\u0430\u0442\u0430 \u0432 \u0440\u0435\u0446\u0435\u043f\u0442\u0435"
      },
      "NotificationHistory": {
        "properties": {
          "recipient_type": {
            "type": "string",
            "maxLength": 20,
            "title": "Recipient Type",
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "recipient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Id",
            "description": "ID \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "recipient_contact": {
            "type": "string",
            "maxLength": 255,
            "title": "Recipient Contact",
            "description": "\u041a\u043e\u043d\u0442\u0430\u043a\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "notification_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Notification Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channel": {
            "type": "string",
            "maxLength": 20,
            "title": "Channel",
            "description": "\u041a\u0430\u043d\u0430\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "ID \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "\u0422\u0435\u043c\u0430"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435"
          },
          "status": {
            "type": "string",
            "maxLength": 20,
            "title": "Status",
            "description": "\u0421\u0442\u0430\u0442\u0443\u0441",
            "default": "pending"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435"
          },
          "related_entity_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Type",
            "description": "\u0422\u0438\u043f \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438"
          },
          "related_entity_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Id",
            "description": "ID \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438"
          },
          "notification_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Metadata",
            "description": "\u041c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At"
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At"
          }
        },
        "type": "object",
        "required": [
          "recipient_type",
          "recipient_contact",
          "notification_type",
          "channel",
          "content",
          "id",
          "created_at",
          "sent_at",
          "delivered_at"
        ],
        "title": "NotificationHistory"
      },
      "NotificationSettings": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id",
            "description": "ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
          },
          "user_type": {
            "type": "string",
            "maxLength": 20,
            "title": "User Type",
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
          },
          "email_enabled": {
            "type": "boolean",
            "title": "Email Enabled",
            "description": "Email \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b",
            "default": true
          },
          "sms_enabled": {
            "type": "boolean",
            "title": "Sms Enabled",
            "description": "SMS \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b",
            "default": true
          },
          "telegram_enabled": {
            "type": "boolean",
            "title": "Telegram Enabled",
            "description": "Telegram \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b",
            "default": false
          },
          "appointment_reminders": {
            "type": "boolean",
            "title": "Appointment Reminders",
            "description": "\u041d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u043e \u0437\u0430\u043f\u0438\u0441\u044f\u0445",
            "default": true
          },
          "payment_notifications": {
            "type": "boolean",
            "title": "Payment Notifications",
            "description": "\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e \u043f\u043b\u0430\u0442\u0435\u0436\u0430\u0445",
            "default": true
          },
          "queue_updates": {
            "type": "boolean",
            "title": "Queue Updates",
            "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
            "default": true
          },
          "system_alerts": {
            "type": "boolean",
            "title": "System Alerts",
            "description": "\u0421\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f",
            "default": false
          },
          "reminder_hours_before": {
            "type": "integer",
            "maximum": 168.0,
            "minimum": 1.0,
            "title": "Reminder Hours Before",
            "description": "\u0417\u0430 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u043e\u0432 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0442\u044c",
            "default": 24
          },
          "notification_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Email",
            "description": "Email \u0434\u043b\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"
          },
          "notification_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Phone",
            "description": "\u0422\u0435\u043b\u0435\u0444\u043e\u043d \u0434\u043b\u044f SMS"
          },
          "telegram_chat_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Chat Id",
            "description": "Telegram chat ID"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "user_type",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationSettings"
      },
      "NotificationSettingsUpdate": {
        "properties": {
          "email_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Enabled"
          },
          "sms_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Enabled"
          },
          "telegram_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Enabled"
          },
          "appointment_reminders": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Reminders"
          },
          "payment_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Notifications"
          },
          "queue_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue Updates"
          },
          "system_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Alerts"
          },
          "reminder_hours_before": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 168.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder Hours Before"
          },
          "notification_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Email"
          },
          "notification_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Phone"
          },
          "telegram_chat_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Chat Id"
          }
        },
        "type": "object",
        "title": "NotificationSettingsUpdate"
      },
      "NotificationStatsResponse": {
        "properties": {
          "total_sent": {
            "type": "integer",
            "title": "Total Sent"
          },
          "successful": {
            "type": "integer",
            "title": "Successful"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "pending": {
            "type": "integer",
            "title": "Pending"
          },
          "by_channel": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Channel"
          },
          "by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Type"
          },
          "recent_activity": {
            "items": {
              "$ref": "#/components/schemas/NotificationHistory"
            },
            "type": "array",
            "title": "Recent Activity"
          }
        },
        "type": "object",
        "required": [
          "total_sent",
          "successful",
          "failed",
          "pending",
          "by_channel",
          "by_type",
          "recent_activity"
        ],
        "title": "NotificationStatsResponse"
      },
      "NotificationTemplate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "type": {
            "type": "string",
            "maxLength": 50,
            "title": "Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channel": {
            "type": "string",
            "maxLength": 20,
            "title": "Channel",
            "description": "\u041a\u0430\u043d\u0430\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "\u0422\u0435\u043c\u0430 (\u0434\u043b\u044f email)"
          },
          "template": {
            "type": "string",
            "title": "Template",
            "description": "\u0428\u0430\u0431\u043b\u043e\u043d \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "channel",
          "template",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationTemplate"
      },
      "NotificationTemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "type": {
            "type": "string",
            "maxLength": 50,
            "title": "Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channel": {
            "type": "string",
            "maxLength": 20,
            "title": "Channel",
            "description": "\u041a\u0430\u043d\u0430\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "\u0422\u0435\u043c\u0430 (\u0434\u043b\u044f email)"
          },
          "template": {
            "type": "string",
            "title": "Template",
            "description": "\u0428\u0430\u0431\u043b\u043e\u043d \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "channel",
          "template"
        ],
        "title": "NotificationTemplateCreate"
      },
      "NotificationTemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "NotificationTemplateUpdate"
      },
      "OnlineJoinRequest": {
        "properties": {
          "department": {
            "type": "string",
            "maxLength": 64,
            "title": "Department"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "tg_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Tg Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "department",
          "date"
        ],
        "title": "OnlineJoinRequest"
      },
      "OnlineJoinResponse": {
        "properties": {
          "queue_entry_id": {
            "type": "integer",
            "title": "Queue Entry Id"
          },
          "ticket_number": {
            "type": "integer",
            "title": "Ticket Number"
          },
          "department": {
            "type": "string",
            "title": "Department"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          }
        },
        "type": "object",
        "required": [
          "queue_entry_id",
          "ticket_number",
          "department",
          "date"
        ],
        "title": "OnlineJoinResponse"
      },
      "Patient": {
        "properties": {
          "last_name": {
            "type": "string",
            "maxLength": 128,
            "title": "Last Name"
          },
          "first_name": {
            "type": "string",
            "maxLength": 128,
            "title": "First Name"
          },
          "middle_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "sex": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Sex"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "document_no": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Document No"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "last_name",
          "first_name",
          "id",
          "created_at"
        ],
        "title": "Patient"
      },
      "PatientCreate": {
        "properties": {
          "last_name": {
            "type": "string",
            "maxLength": 128,
            "title": "Last Name"
          },
          "first_name": {
            "type": "string",
            "maxLength": 128,
            "title": "First Name"
          },
          "middle_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "sex": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Sex"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "document_no": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Document No"
          }
        },
        "type": "object",
        "required": [
          "last_name",
          "first_name"
        ],
        "title": "PatientCreate"
      },
      "PatientUpdate": {
        "properties": {
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "middle_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Middle Name"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "sex": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Sex"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "document_no": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Document No"
          }
        },
        "type": "object",
        "title": "PatientUpdate"
      },
      "PaymentCreateIn": {
        "properties": {
          "visit_id": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Visit Id"
          },
          "amount": {
            "type": "number",
            "minimum": 0.0,
            "title": "Amount"
          },
          "method": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          }
        },
        "type": "object",
        "required": [
          "visit_id",
          "amount"
        ],
        "title": "PaymentCreateIn"
      },
      "PaymentOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "default": 0.0
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "PaymentOut"
      },
      "PaymentProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "\u041a\u043e\u0434 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
            "default": true
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url",
            "description": "URL \u0434\u043b\u044f \u0432\u0435\u0431\u0445\u0443\u043a\u043e\u0432"
          },
          "commission_percent": {
            "type": "integer",
            "title": "Commission Percent",
            "description": "\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445",
            "default": 0
          },
          "min_amount": {
            "type": "integer",
            "title": "Min Amount",
            "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
            "default": 0
          },
          "max_amount": {
            "type": "integer",
            "title": "Max Amount",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
            "default": 100000000
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "API \u043a\u043b\u044e\u0447"
          },
          "secret_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Key",
            "description": "\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "\u0412\u0440\u0435\u043c\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code"
        ],
        "title": "PaymentProviderCreate"
      },
      "PaymentProviderOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "\u041a\u043e\u0434 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440",
            "default": true
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url",
            "description": "URL \u0434\u043b\u044f \u0432\u0435\u0431\u0445\u0443\u043a\u043e\u0432"
          },
          "commission_percent": {
            "type": "integer",
            "title": "Commission Percent",
            "description": "\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445",
            "default": 0
          },
          "min_amount": {
            "type": "integer",
            "title": "Min Amount",
            "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
            "default": 0
          },
          "max_amount": {
            "type": "integer",
            "title": "Max Amount",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
            "default": 100000000
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "PaymentProviderOut"
      },
      "PaymentProviderUpdate": {
        "properties": {
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440"
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url",
            "description": "URL \u0434\u043b\u044f \u0432\u0435\u0431\u0445\u0443\u043a\u043e\u0432"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "API \u043a\u043b\u044e\u0447"
          },
          "secret_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Key",
            "description": "\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447"
          },
          "commission_percent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commission Percent",
            "description": "\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445"
          },
          "min_amount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Amount",
            "description": "\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430"
          },
          "max_amount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Amount",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430"
          }
        },
        "type": "object",
        "title": "PaymentProviderUpdate"
      },
      "PaymentTransactionOut": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "title": "Transaction Id",
            "description": "ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439"
          },
          "amount": {
            "type": "integer",
            "title": "Amount",
            "description": "\u0421\u0443\u043c\u043c\u0430 \u0432 \u0442\u0438\u0439\u0438\u043d\u0430\u0445"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "\u0412\u0430\u043b\u044e\u0442\u0430",
            "default": "UZS"
          },
          "commission": {
            "type": "integer",
            "title": "Commission",
            "description": "\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "\u0421\u0442\u0430\u0442\u0443\u0441 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438",
            "default": "pending"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id",
            "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "webhook_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "transaction_id",
          "provider",
          "amount",
          "id",
          "webhook_id",
          "created_at",
          "updated_at"
        ],
        "title": "PaymentTransactionOut"
      },
      "PaymentWebhookOut": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439 (payme, click, etc.)"
          },
          "webhook_id": {
            "type": "string",
            "title": "Webhook Id",
            "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 ID \u0432\u0435\u0431\u0445\u0443\u043a\u0430"
          },
          "transaction_id": {
            "type": "string",
            "title": "Transaction Id",
            "description": "ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438"
          },
          "amount": {
            "type": "integer",
            "title": "Amount",
            "description": "\u0421\u0443\u043c\u043c\u0430 \u0432 \u0442\u0438\u0439\u0438\u043d\u0430\u0445"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "\u0412\u0430\u043b\u044e\u0442\u0430",
            "default": "UZS"
          },
          "visit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Id",
            "description": "ID \u0432\u0438\u0437\u0438\u0442\u0430"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id",
            "description": "ID \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "raw_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Raw Data"
          },
          "signature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "webhook_id",
          "transaction_id",
          "amount",
          "id",
          "status",
          "raw_data",
          "signature",
          "created_at",
          "processed_at",
          "error_message"
        ],
        "title": "PaymentWebhookOut"
      },
      "Prescription": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "emr_id": {
            "type": "integer",
            "title": "Emr Id"
          },
          "medications": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MedicationItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Medications"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "doctor_notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Notes"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "saved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saved At"
          },
          "printed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printed At"
          }
        },
        "type": "object",
        "required": [
          "appointment_id",
          "emr_id",
          "id",
          "created_at"
        ],
        "title": "Prescription",
        "description": "\u041f\u043e\u043b\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u0440\u0435\u0446\u0435\u043f\u0442\u0430"
      },
      "PrescriptionCreate": {
        "properties": {
          "appointment_id": {
            "type": "integer",
            "title": "Appointment Id"
          },
          "emr_id": {
            "type": "integer",
            "title": "Emr Id"
          },
          "medications": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MedicationItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Medications"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "doctor_notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Notes"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "appointment_id",
          "emr_id"
        ],
        "title": "PrescriptionCreate",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u0446\u0435\u043f\u0442\u0430"
      },
      "PrintCertificateRequest": {
        "properties": {
          "certificate": {
            "additionalProperties": true,
            "type": "object",
            "title": "Certificate",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0441\u043f\u0440\u0430\u0432\u043a\u0438"
          },
          "patient": {
            "additionalProperties": true,
            "type": "object",
            "title": "Patient",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "visit": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit"
          },
          "clinic": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "certificate",
          "patient"
        ],
        "title": "PrintCertificateRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0441\u043f\u0440\u0430\u0432\u043a\u0438"
      },
      "PrintJobOut": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "printer_id": {
            "type": "integer",
            "title": "Printer Id",
            "description": "ID \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "ID \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "document_type": {
            "type": "string",
            "title": "Document Type",
            "description": "\u0422\u0438\u043f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430"
          },
          "document_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Id",
            "description": "ID \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "\u0421\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u044f",
            "default": "pending"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435"
          },
          "print_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Print Data",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "printer_id",
          "document_type",
          "id",
          "created_at"
        ],
        "title": "PrintJobOut"
      },
      "PrintLabResultsRequest": {
        "properties": {
          "lab_order": {
            "additionalProperties": true,
            "type": "object",
            "title": "Lab Order",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043a\u0430\u0437\u0430"
          },
          "lab_results": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Lab Results",
            "description": "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432"
          },
          "patient": {
            "additionalProperties": true,
            "type": "object",
            "title": "Patient",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "clinic": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "lab_order",
          "lab_results",
          "patient"
        ],
        "title": "PrintLabResultsRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0430\u043d\u0430\u043b\u0438\u0437\u043e\u0432"
      },
      "PrintPrescriptionRequest": {
        "properties": {
          "prescription": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prescription",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0440\u0435\u0446\u0435\u043f\u0442\u0430"
          },
          "patient": {
            "additionalProperties": true,
            "type": "object",
            "title": "Patient",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "clinic": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "prescription",
          "patient"
        ],
        "title": "PrintPrescriptionRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0440\u0435\u0446\u0435\u043f\u0442\u0430"
      },
      "PrintReceiptRequest": {
        "properties": {
          "payment": {
            "additionalProperties": true,
            "type": "object",
            "title": "Payment",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u0442\u0435\u0436\u0430"
          },
          "patient": {
            "additionalProperties": true,
            "type": "object",
            "title": "Patient",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "services": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Services",
            "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0441\u043b\u0443\u0433"
          },
          "clinic": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "payment",
          "patient",
          "services"
        ],
        "title": "PrintReceiptRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0447\u0435\u043a\u0430"
      },
      "PrintResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "\u0423\u0441\u043f\u0435\u0448\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438"
          },
          "job_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id",
            "description": "ID \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u0435\u0447\u0430\u0442\u0438"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435"
          },
          "printer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer",
            "description": "\u0418\u043c\u044f \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "\u041e\u0448\u0438\u0431\u043a\u0430"
          },
          "result": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result",
            "description": "\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "PrintResponse",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u0435\u0447\u0430\u0442\u0438"
      },
      "PrintTemplateCreate": {
        "properties": {
          "printer_id": {
            "type": "integer",
            "title": "Printer Id",
            "description": "ID \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\u0418\u043c\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0435 \u0438\u043c\u044f"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type",
            "description": "\u0422\u0438\u043f \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "template_content": {
            "type": "string",
            "title": "Template Content",
            "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 Jinja2"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "\u042f\u0437\u044b\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
            "default": "ru"
          },
          "font_size": {
            "type": "integer",
            "title": "Font Size",
            "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430",
            "default": 12
          },
          "line_spacing": {
            "type": "integer",
            "title": "Line Spacing",
            "description": "\u041c\u0435\u0436\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b",
            "default": 1
          },
          "char_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Char Per Line",
            "description": "\u0421\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u043b\u044f ESC/POS"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "printer_id",
          "name",
          "display_name",
          "template_type",
          "template_content"
        ],
        "title": "PrintTemplateCreate"
      },
      "PrintTemplateOut": {
        "properties": {
          "printer_id": {
            "type": "integer",
            "title": "Printer Id",
            "description": "ID \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\u0418\u043c\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u043e\u0435 \u0438\u043c\u044f"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type",
            "description": "\u0422\u0438\u043f \u0448\u0430\u0431\u043b\u043e\u043d\u0430"
          },
          "template_content": {
            "type": "string",
            "title": "Template Content",
            "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 Jinja2"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "\u042f\u0437\u044b\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0430",
            "default": "ru"
          },
          "font_size": {
            "type": "integer",
            "title": "Font Size",
            "description": "\u0420\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430",
            "default": 12
          },
          "line_spacing": {
            "type": "integer",
            "title": "Line Spacing",
            "description": "\u041c\u0435\u0436\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b",
            "default": 1
          },
          "char_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Char Per Line",
            "description": "\u0421\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u043b\u044f ESC/POS"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "\u0410\u043a\u0442\u0438\u0432\u0435\u043d \u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "printer_id",
          "name",
          "display_name",
          "template_type",
          "template_content",
          "id",
          "created_at"
        ],
        "title": "PrintTemplateOut"
      },
      "PrintTemplateUpdate": {
        "properties": {
          "printer_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "template_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Type"
          },
          "template_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Content"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "font_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Font Size"
          },
          "line_spacing": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Spacing"
          },
          "char_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Char Per Line"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          }
        },
        "type": "object",
        "title": "PrintTemplateUpdate"
      },
      "PrintTicketRequest": {
        "properties": {
          "clinic_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clinic Name"
          },
          "queue_number": {
            "type": "string",
            "title": "Queue Number",
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "doctor_name": {
            "type": "string",
            "title": "Doctor Name",
            "description": "\u0418\u043c\u044f \u0432\u0440\u0430\u0447\u0430"
          },
          "specialty_name": {
            "type": "string",
            "title": "Specialty Name",
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0437\u0430\u043f\u0438\u0441\u0438",
            "default": "desk"
          },
          "time_window": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Window"
          },
          "printer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Printer Name"
          }
        },
        "type": "object",
        "required": [
          "queue_number",
          "doctor_name",
          "specialty_name"
        ],
        "title": "PrintTicketRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0442\u0430\u043b\u043e\u043d\u0430"
      },
      "QRTokenResponse": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d \u0434\u043b\u044f QR"
          },
          "qr_url": {
            "type": "string",
            "title": "Qr Url",
            "description": "URL \u0434\u043b\u044f QR \u043a\u043e\u0434\u0430"
          },
          "specialist_name": {
            "type": "string",
            "title": "Specialist Name",
            "description": "\u0418\u043c\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430"
          },
          "specialty": {
            "type": "string",
            "title": "Specialty",
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet",
            "description": "\u041d\u043e\u043c\u0435\u0440 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430"
          },
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day",
            "description": "\u0414\u0430\u0442\u0430 \u043f\u0440\u0438\u0435\u043c\u0430"
          },
          "start_time": {
            "type": "string",
            "title": "Start Time",
            "description": "\u0412\u0440\u0435\u043c\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u043d\u043b\u0430\u0439\u043d-\u0437\u0430\u043f\u0438\u0441\u0438"
          },
          "max_slots": {
            "type": "integer",
            "title": "Max Slots",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u043c\u0435\u0441\u0442 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "current_count": {
            "type": "integer",
            "title": "Current Count",
            "description": "\u0422\u0435\u043a\u0443\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0432\u0448\u0438\u0445\u0441\u044f",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "token",
          "qr_url",
          "specialist_name",
          "specialty",
          "day",
          "start_time",
          "max_slots"
        ],
        "title": "QRTokenResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u0441 QR \u0442\u043e\u043a\u0435\u043d\u043e\u043c"
      },
      "QueueJoinRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "\u0422\u043e\u043a\u0435\u043d \u0438\u0437 QR \u043a\u043e\u0434\u0430"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430"
          },
          "telegram_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Id",
            "description": "ID Telegram \u0447\u0430\u0442\u0430"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name",
            "description": "\u0418\u043c\u044f \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "QueueJoinRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c"
      },
      "QueueOpenResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "\u0423\u0441\u043f\u0435\u0448\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435"
          },
          "opened_at": {
            "type": "string",
            "format": "date-time",
            "title": "Opened At",
            "description": "\u0412\u0440\u0435\u043c\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f"
          },
          "online_entries_count": {
            "type": "integer",
            "title": "Online Entries Count",
            "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u043d\u043b\u0430\u0439\u043d-\u0437\u0430\u043f\u0438\u0441\u0435\u0439"
          },
          "closed_online_registration": {
            "type": "boolean",
            "title": "Closed Online Registration",
            "description": "\u041e\u043d\u043b\u0430\u0439\u043d-\u043d\u0430\u0431\u043e\u0440 \u0437\u0430\u043a\u0440\u044b\u0442"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "opened_at",
          "online_entries_count",
          "closed_online_registration"
        ],
        "title": "QueueOpenResponse",
        "description": "\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u0440\u0438\u0435\u043c\u0430"
      },
      "QueueSettingsUpdate": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "description": "\u0427\u0430\u0441\u043e\u0432\u043e\u0439 \u043f\u043e\u044f\u0441",
            "default": "Asia/Tashkent"
          },
          "queue_start_hour": {
            "type": "integer",
            "maximum": 23.0,
            "minimum": 0.0,
            "title": "Queue Start Hour",
            "description": "\u0427\u0430\u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u043d\u043b\u0430\u0439\u043d \u043e\u0447\u0435\u0440\u0435\u0434\u0438",
            "default": 7
          },
          "auto_close_time": {
            "type": "string",
            "title": "Auto Close Time",
            "description": "\u0412\u0440\u0435\u043c\u044f \u0430\u0432\u0442\u043e\u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f",
            "default": "09:00"
          },
          "start_numbers": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Start Numbers",
            "description": "\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044f\u043c",
            "default": {
              "cardiology": 1,
              "dermatology": 15,
              "stomatology": 3
            }
          },
          "max_per_day": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Max Per Day",
            "description": "\u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u043e\u043d\u043b\u0430\u0439\u043d \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0432 \u0434\u0435\u043d\u044c",
            "default": {
              "cardiology": 15,
              "dermatology": 20,
              "stomatology": 12
            }
          }
        },
        "type": "object",
        "title": "QueueSettingsUpdate",
        "description": "\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439"
      },
      "QueueTestRequest": {
        "properties": {
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id"
          },
          "date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          }
        },
        "type": "object",
        "required": [
          "doctor_id"
        ],
        "title": "QueueTestRequest",
        "description": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
      },
      "QuickReceiptRequest": {
        "properties": {
          "patient_name": {
            "type": "string",
            "title": "Patient Name",
            "description": "\u0424\u0418\u041e \u043f\u0430\u0446\u0438\u0435\u043d\u0442\u0430"
          },
          "services": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Services",
            "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0441\u043b\u0443\u0433"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount",
            "description": "\u041e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430"
          },
          "payment_method": {
            "type": "string",
            "title": "Payment Method",
            "description": "\u0421\u043f\u043e\u0441\u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u044b"
          }
        },
        "type": "object",
        "required": [
          "patient_name",
          "services",
          "total_amount",
          "payment_method"
        ],
        "title": "QuickReceiptRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043f\u0435\u0447\u0430\u0442\u0438 \u0447\u0435\u043a\u0430"
      },
      "QuickTicketRequest": {
        "properties": {
          "queue_number": {
            "type": "string",
            "title": "Queue Number",
            "description": "\u041d\u043e\u043c\u0435\u0440 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438"
          },
          "doctor_name": {
            "type": "string",
            "title": "Doctor Name",
            "description": "\u0418\u043c\u044f \u0432\u0440\u0430\u0447\u0430"
          },
          "specialty": {
            "type": "string",
            "title": "Specialty",
            "description": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
          },
          "patient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Name"
          },
          "cabinet": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cabinet"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0437\u0430\u043f\u0438\u0441\u0438",
            "default": "desk"
          }
        },
        "type": "object",
        "required": [
          "queue_number",
          "doctor_name",
          "specialty"
        ],
        "title": "QuickTicketRequest",
        "description": "\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043f\u0435\u0447\u0430\u0442\u0438 \u0442\u0430\u043b\u043e\u043d\u0430"
      },
      "ScheduleBase": {
        "properties": {
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday",
            "description": "0=Monday, 6=Sunday"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "breaks": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Breaks",
            "description": "[{\"start\": \"12:00\", \"end\": \"13:00\"}]"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "weekday"
        ],
        "title": "ScheduleBase"
      },
      "ScheduleCreate": {
        "properties": {
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday",
            "description": "0=Monday, 6=Sunday"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "breaks": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Breaks",
            "description": "[{\"start\": \"12:00\", \"end\": \"13:00\"}]"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id"
          }
        },
        "type": "object",
        "required": [
          "weekday",
          "doctor_id"
        ],
        "title": "ScheduleCreate"
      },
      "ScheduleCreateIn": {
        "properties": {
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday"
          },
          "start_time": {
            "type": "string",
            "pattern": "^\\d{2}:\\d{2}$",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "pattern": "^\\d{2}:\\d{2}$",
            "title": "End Time"
          },
          "room": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Room"
          },
          "capacity_per_hour": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 200.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Per Hour"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "weekday",
          "start_time",
          "end_time"
        ],
        "title": "ScheduleCreateIn"
      },
      "ScheduleOut": {
        "properties": {
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday",
            "description": "0=Monday, 6=Sunday"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "breaks": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Breaks",
            "description": "[{\"start\": \"12:00\", \"end\": \"13:00\"}]"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "doctor_id": {
            "type": "integer",
            "title": "Doctor Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "weekday",
          "id",
          "doctor_id"
        ],
        "title": "ScheduleOut"
      },
      "ScheduleRowOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "weekday": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Weekday",
            "description": "0=\u0420\u045f\u0420\u0405 \u0432\u0402\u00a6 6=\u0420\u2019\u0421\u0403"
          },
          "start_time": {
            "type": "string",
            "pattern": "^\\d{2}:\\d{2}$",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "pattern": "^\\d{2}:\\d{2}$",
            "title": "End Time"
          },
          "room": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room"
          },
          "capacity_per_hour": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 200.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity Per Hour"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "weekday",
          "start_time",
          "end_time"
        ],
        "title": "ScheduleRowOut"
      },
      "SendNotificationRequest": {
        "properties": {
          "recipient_type": {
            "type": "string",
            "title": "Recipient Type",
            "description": "\u0422\u0438\u043f \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f: patient, doctor, admin"
          },
          "recipient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Id",
            "description": "ID \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f"
          },
          "notification_type": {
            "type": "string",
            "title": "Notification Type",
            "description": "\u0422\u0438\u043f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f"
          },
          "channels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Channels",
            "description": "\u041a\u0430\u043d\u0430\u043b\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438",
            "default": [
              "email"
            ]
          },
          "template_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Template Data",
            "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d",
            "default": {}
          },
          "related_entity_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Type",
            "description": "\u0422\u0438\u043f \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438"
          },
          "related_entity_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Entity Id",
            "description": "ID \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442: low, normal, high, urgent",
            "default": "normal"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At",
            "description": "\u0412\u0440\u0435\u043c\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 (\u0434\u043b\u044f \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445)"
          }
        },
        "type": "object",
        "required": [
          "recipient_type",
          "notification_type"
        ],
        "title": "SendNotificationRequest"
      },
      "ServiceCategoryOut": {
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 50,
            "title": "Code",
            "description": "consultation.cardiology, procedure.cosmetology, etc."
          },
          "name_ru": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Ru"
          },
          "name_uz": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Uz"
          },
          "name_en": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name En"
          },
          "specialty": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialty",
            "description": "cardiology, dermatology, stomatology"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "code",
          "id"
        ],
        "title": "ServiceCategoryOut"
      },
      "ServiceOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "ServiceOut"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VisitCreate": {
        "properties": {
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "planned_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Date"
          }
        },
        "type": "object",
        "title": "VisitCreate"
      },
      "VisitOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "doctor_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doctor Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "planned_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Date"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "title": "VisitOut"
      },
      "VisitServiceIn": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "price": {
            "type": "number",
            "title": "Price",
            "default": 0.0
          },
          "qty": {
            "type": "integer",
            "title": "Qty",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "VisitServiceIn"
      },
      "VisitWithServices": {
        "properties": {
          "visit": {
            "$ref": "#/components/schemas/VisitOut"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/VisitServiceIn"
            },
            "type": "array",
            "title": "Services"
          }
        },
        "type": "object",
        "required": [
          "visit",
          "services"
        ],
        "title": "VisitWithServices"
      },
      "WeeklyScheduleUpdate": {
        "properties": {
          "schedules": {
            "items": {
              "$ref": "#/components/schemas/ScheduleBase"
            },
            "type": "array",
            "maxItems": 7,
            "title": "Schedules"
          }
        },
        "type": "object",
        "required": [
          "schedules"
        ],
        "title": "WeeklyScheduleUpdate",
        "description": "\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043d\u0430 \u0432\u0441\u044e \u043d\u0435\u0434\u0435\u043b\u044e"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/auth/login"
          }
        }
      }
    }
  }
}