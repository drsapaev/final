#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç DeepSeek API
"""
import httpx
import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv("backend/.env")

async def test_deepseek_api():
    api_key = os.getenv("DEEPSEEK_API_KEY")
    
    print("=" * 60)
    print("üîç –¢–ï–°–¢ DEEPSEEK API")
    print("=" * 60)
    print(f"\nüîë API Key: {api_key[:20]}..." if api_key else "‚ùå API Key –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    if not api_key:
        print("\n‚ùå DEEPSEEK_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ URL
    urls_to_test = [
        "https://api.deepseek.com/v1/chat/completions",
        "https://api.deepseek.com/chat/completions",
        "https://api.deepseek.ai/v1/chat/completions",
    ]
    
    for base_url in urls_to_test:
        print(f"\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL: {base_url}")
        
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        }
        
        payload = {
            "model": "deepseek-chat",
            "messages": [
                {"role": "user", "content": "Hello, test message"}
            ],
            "max_tokens": 100
        }
        
        try:
            async with httpx.AsyncClient() as client:
                response = await client.post(
                    base_url,
                    headers=headers,
                    json=payload,
                    timeout=30.0
                )
                
                print(f"   Status Code: {response.status_code}")
                print(f"   Response Headers: {dict(response.headers)}")
                
                if response.status_code == 200:
                    data = response.json()
                    print(f"   ‚úÖ –£—Å–ø–µ—Ö! –û—Ç–≤–µ—Ç: {data.get('choices', [{}])[0].get('message', {}).get('content', 'N/A')[:100]}")
                    return True
                elif response.status_code == 402:
                    print(f"   ‚ùå 402 Payment Required")
                    print(f"   Response: {response.text[:500]}")
                elif response.status_code == 401:
                    print(f"   ‚ùå 401 Unauthorized - –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
                    print(f"   Response: {response.text[:500]}")
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                    print(f"   Response: {response.text[:500]}")
                    
        except httpx.TimeoutException:
            print(f"   ‚ùå Timeout - URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {str(e)}")
    
    print("\n" + "=" * 60)
    print("‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ DeepSeek API –Ω–µ —É–¥–∞–ª–∏—Å—å")
    print("=" * 60)
    print("\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
    print("1. DeepSeek –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã")
    print("2. –ù—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ https://platform.deepseek.com")
    print("3. API –∫–ª—é—á –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    print("4. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞")
    print("\nüí° –†–ï–®–ï–ù–ò–ï:")
    print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Gemini AI - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
    print("   –°–∏—Å—Ç–µ–º–∞ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ Gemini –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä")
    
    return False

if __name__ == "__main__":
    asyncio.run(test_deepseek_api())

