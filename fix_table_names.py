#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–∞–±–ª–∏—Ü
"""
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from app.db.session import SessionLocal
from sqlalchemy import text

def fix_table_names():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü"""
    db = SessionLocal()
    try:
        print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü...")
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º user_activity –≤ user_activities
        try:
            db.execute(text("ALTER TABLE user_activity RENAME TO user_activities;"))
            print("‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ user_activity -> user_activities")
        except Exception as e:
            if "no such table" in str(e).lower():
                # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É user_activities —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
                db.execute(text("""
                    CREATE TABLE IF NOT EXISTS user_activities (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        user_id INTEGER NOT NULL,
                        activity_type VARCHAR(50) NOT NULL,
                        description TEXT,
                        ip_address VARCHAR(45),
                        user_agent TEXT,
                        extra_data TEXT,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (user_id) REFERENCES users (id)
                    );
                """))
                print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ user_activities")
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ user_activity: {e}")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è 2FA
        db.execute(text("""
            CREATE TABLE IF NOT EXISTS two_factor_auth (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL UNIQUE,
                totp_secret VARCHAR(32),
                totp_enabled BOOLEAN DEFAULT 0,
                backup_codes TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES users (id)
            );
        """))
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ two_factor_auth")
        
        db.commit()
        print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
        result = db.execute(text("SELECT name FROM sqlite_master WHERE type='table' ORDER BY name;"))
        tables = result.fetchall()
        
        print(f"\nüìä –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î:")
        for table in tables:
            print(f"  - {table[0]}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–∞–±–ª–∏—Ü...")
    fix_table_names()

