"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
"""
import os
import sys
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'backend'))

from backend.app.services.ai.ai_manager import get_ai_manager, AIProviderType

def setup_ai_providers():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
    
    ai_manager = get_ai_manager()
    
    print(f"\nüìã –¢–µ–∫—É—â–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã:")
    available_providers = ai_manager.get_available_providers()
    print(f"  –î–æ—Å—Ç—É–ø–Ω—ã–µ: {available_providers}")
    print(f"  –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: {ai_manager.default_provider}")
    
    print(f"\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π:")
    env_keys = {
        "OPENAI_API_KEY": os.getenv("OPENAI_API_KEY"),
        "GEMINI_API_KEY": os.getenv("GEMINI_API_KEY"),
        "DEEPSEEK_API_KEY": os.getenv("DEEPSEEK_API_KEY")
    }
    
    for key_name, key_value in env_keys.items():
        if key_value and key_value != "your_openai_api_key_here":
            print(f"  ‚úÖ {key_name}: {'*' * 8}...{key_value[-4:]}")
        else:
            print(f"  ‚ùå {key_name}: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    print(f"\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"1. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á–∏:")
    print(f"   - OpenAI: https://platform.openai.com/api-keys")
    print(f"   - Google Gemini: https://makersuite.google.com/app/apikey")
    print(f"   - DeepSeek: https://platform.deepseek.com/api_keys")
    print(f"")
    print(f"2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª backend/.env —Å –∫–ª—é—á–∞–º–∏:")
    print(f"   OPENAI_API_KEY=sk-your-key-here")
    print(f"   GEMINI_API_KEY=your-gemini-key-here")
    print(f"   DEEPSEEK_API_KEY=your-deepseek-key-here")
    print(f"")
    print(f"3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ backend —Å–µ—Ä–≤–µ—Ä")
    
    if not available_providers or available_providers == ["mock"]:
        print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ Mock –ø—Ä–æ–≤–∞–π–¥–µ—Ä!")
        print(f"   –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏.")
    else:
        print(f"\n‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã: {available_providers}")

if __name__ == "__main__":
    setup_ai_providers()
