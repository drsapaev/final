#!/usr/bin/env python3
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.db.session import SessionLocal
from app.models.user import User
from app.models.role_permission import Role, user_roles_table
from sqlalchemy import select

def check_user_roles():
    with SessionLocal() as db:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin@example.com
        user = db.query(User).filter(User.username == 'admin@example.com').first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin@example.com –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        print(f"   ID: {user.id}")
        print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {user.is_active}")
        print(f"   –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {getattr(user, 'is_superuser', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ —Ç–∞–±–ª–∏—Ü—É —Å–≤—è–∑–∏
        user_roles_query = select(user_roles_table).where(user_roles_table.c.user_id == user.id)
        user_roles = db.execute(user_roles_query).fetchall()
        if not user_roles:
            print("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ä–æ–ª–µ–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–æ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
            all_roles = db.query(Role).all()
            if not all_roles:
                print("‚ùå –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç —Ä–æ–ª–µ–π")
                print("üîß –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏...")
                
                # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏
                admin_role = Role(name="Admin", description="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã")
                registrar_role = Role(name="Registrar", description="–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                doctor_role = Role(name="Doctor", description="–í—Ä–∞—á")
                
                db.add_all([admin_role, registrar_role, doctor_role])
                db.commit()
                
                # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é admin@example.com
                insert_stmt = user_roles_table.insert().values(user_id=user.id, role_id=admin_role.id)
                db.execute(insert_stmt)
                db.commit()
                
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å Admin –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}")
            else:
                print("‚úÖ –†–æ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –µ—Å—Ç—å:")
                for role in all_roles:
                    print(f"   - {role.name}: {role.description}")
                
                # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å Admin –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
                admin_role = db.query(Role).filter(Role.name == "Admin").first()
                if admin_role:
                    insert_stmt = user_roles_table.insert().values(user_id=user.id, role_id=admin_role.id)
                    db.execute(insert_stmt)
                    db.commit()
                    print(f"‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}")
        else:
            print("‚úÖ –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
            for ur in user_roles:
                role = db.query(Role).filter(Role.id == ur.role_id).first()
                if role:
                    print(f"   - {role.name}: {role.description}")

if __name__ == "__main__":
    check_user_roles()
