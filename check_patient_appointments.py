#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∫–æ–¥–æ–≤ —É—Å–ª—É–≥
"""

import sqlite3

def check_patient_appointments():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∫–æ–¥—ã —É—Å–ª—É–≥"""
    conn = sqlite3.connect('backend/clinic.db')
    cursor = conn.cursor()
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–ò–°–ï–ô –ü–ê–¶–ò–ï–ù–¢–û–í")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å –∑–∞–ø–∏—Å—è–º–∏
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name LIKE '%appointment%'")
    appointment_tables = cursor.fetchall()
    print(f"üìã –¢–∞–±–ª–∏—Ü—ã –∑–∞–ø–∏—Å–µ–π: {[t[0] for t in appointment_tables]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É appointments
    try:
        cursor.execute("SELECT id, patient_id, service_codes, created_at FROM appointments ORDER BY created_at DESC LIMIT 10")
        appointments = cursor.fetchall()
        print(f"\nüìÖ –ü–û–°–õ–ï–î–ù–ò–ï –ó–ê–ü–ò–°–ò ({len(appointments)} –Ω–∞–π–¥–µ–Ω–æ):")
        for appt in appointments:
            print(f"  ID: {appt[0]}, –ü–∞—Ü–∏–µ–Ω—Ç: {appt[1]}, –ö–æ–¥—ã —É—Å–ª—É–≥: {appt[2]}, –î–∞—Ç–∞: {appt[3]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É patient_appointments
    try:
        cursor.execute("SELECT id, patient_id, service_codes, created_at FROM patient_appointments ORDER BY created_at DESC LIMIT 10")
        patient_appointments = cursor.fetchall()
        print(f"\nüë§ –ó–ê–ü–ò–°–ò –ü–ê–¶–ò–ï–ù–¢–û–í ({len(patient_appointments)} –Ω–∞–π–¥–µ–Ω–æ):")
        for appt in patient_appointments:
            print(f"  ID: {appt[0]}, –ü–∞—Ü–∏–µ–Ω—Ç: {appt[1]}, –ö–æ–¥—ã —É—Å–ª—É–≥: {appt[2]}, –î–∞—Ç–∞: {appt[3]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É queue_appointments
    try:
        cursor.execute("SELECT id, patient_id, service_codes, created_at FROM queue_appointments ORDER BY created_at DESC LIMIT 10")
        queue_appointments = cursor.fetchall()
        print(f"\n‚è∞ –ó–ê–ü–ò–°–ò –í –û–ß–ï–†–ï–î–ò ({len(queue_appointments)} –Ω–∞–π–¥–µ–Ω–æ):")
        for appt in queue_appointments:
            print(f"  ID: {appt[0]}, –ü–∞—Ü–∏–µ–Ω—Ç: {appt[1]}, –ö–æ–¥—ã —É—Å–ª—É–≥: {appt[2]}, –î–∞—Ç–∞: {appt[3]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π –æ—á–µ—Ä–µ–¥–∏: {e}")
    
    conn.close()

if __name__ == "__main__":
    check_patient_appointments()
