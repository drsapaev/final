import React, { useState, useEffect } from 'react';

const DentistPanel = () => {
  const [activeTab, setActiveTab] = useState('patients');
  const [patients, setPatients] = useState([]);
  const [dentalExaminations, setDentalExaminations] = useState([]);
  const [treatmentPlans, setTreatmentPlans] = useState([]);
  const [prosthetics, setProsthetics] = useState([]);
  const [loading, setLoading] = useState(false);
  const [selectedPatient, setSelectedPatient] = useState(null);
  const [showExaminationForm, setShowExaminationForm] = useState(false);
  const [showTreatmentForm, setShowTreatmentForm] = useState(false);
  const [showProstheticForm, setShowProstheticForm] = useState(false);

  const [examinationForm, setExaminationForm] = useState({
    patient_id: '',
    examination_date: '',
    oral_hygiene: '',
    caries_status: '',
    periodontal_status: '',
    occlusion: '',
    missing_teeth: '',
    dental_plaque: '',
    gingival_bleeding: '',
    diagnosis: '',
    recommendations: ''
  });

  const [treatmentForm, setTreatmentForm] = useState({
    patient_id: '',
    treatment_date: '',
    treatment_type: '',
    teeth_involved: '',
    procedure_description: '',
    materials_used: '',
    anesthesia: '',
    complications: '',
    follow_up_date: '',
    cost: ''
  });

  const [prostheticForm, setProstheticForm] = useState({
    patient_id: '',
    prosthetic_date: '',
    prosthetic_type: '',
    teeth_replaced: '',
    material: '',
    shade: '',
    fit_quality: '',
    patient_satisfaction: '',
    warranty_period: '',
    cost: ''
  });

  useEffect(() => {
    loadPatients();
    loadDentalExaminations();
    loadTreatmentPlans();
    loadProsthetics();
  }, []);

  const authHeader = () => ({
    Authorization: `Bearer ${localStorage.getItem('auth_token') || ''}`,
  });

  const loadPatients = async () => {
    try {
      setLoading(true);
      const response = await fetch('/api/v1/patients?department=Dental&limit=100', { headers: authHeader() });
      if (response.ok) {
        const data = await response.json();
        setPatients(Array.isArray(data) ? data : []);
      }
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤:', e);
    } finally {
      setLoading(false);
    }
  };

  const loadDentalExaminations = async () => {
    try {
      const res = await fetch('/api/v1/dental/examinations?limit=100', { headers: authHeader() });
      if (res.ok) setDentalExaminations(await res.json());
    } catch {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
    }
  };

  const loadTreatmentPlans = async () => {
    try {
      const res = await fetch('/api/v1/dental/treatments?limit=100', { headers: authHeader() });
      if (res.ok) setTreatmentPlans(await res.json());
    } catch {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–æ–≤ –ª–µ—á–µ–Ω–∏—è
    }
  };

  const loadProsthetics = async () => {
    try {
      const res = await fetch('/api/v1/dental/prosthetics?limit=100', { headers: authHeader() });
      if (res.ok) setProsthetics(await res.json());
    } catch {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏—è
    }
  };

  const handleExaminationSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await fetch('/api/v1/dental/examinations', {
        method: 'POST', headers: { 'Content-Type': 'application/json', ...authHeader() }, body: JSON.stringify(examinationForm)
      });
      if (res.ok) {
        setShowExaminationForm(false);
        setExaminationForm({ patient_id: '', examination_date: '', oral_hygiene: '', caries_status: '', periodontal_status: '', occlusion: '', missing_teeth: '', dental_plaque: '', gingival_bleeding: '', diagnosis: '', recommendations: '' });
        loadDentalExaminations();
      }
    } catch (e) { console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Å–º–æ—Ç—Ä–∞:', e); }
  };

  const handleTreatmentSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await fetch('/api/v1/dental/treatments', {
        method: 'POST', headers: { 'Content-Type': 'application/json', ...authHeader() }, body: JSON.stringify(treatmentForm)
      });
      if (res.ok) {
        setShowTreatmentForm(false);
        setTreatmentForm({ patient_id: '', treatment_date: '', treatment_type: '', teeth_involved: '', procedure_description: '', materials_used: '', anesthesia: '', complications: '', follow_up_date: '', cost: '' });
        loadTreatmentPlans();
      }
    } catch (e) { console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–µ—á–µ–Ω–∏—è:', e); }
  };

  const handleProstheticSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await fetch('/api/v1/dental/prosthetics', {
        method: 'POST', headers: { 'Content-Type': 'application/json', ...authHeader() }, body: JSON.stringify(prostheticForm)
      });
      if (res.ok) {
        setShowProstheticForm(false);
        setProstheticForm({ patient_id: '', prosthetic_date: '', prosthetic_type: '', teeth_replaced: '', material: '', shade: '', fit_quality: '', patient_satisfaction: '', warranty_period: '', cost: '' });
        loadProsthetics();
      }
    } catch (e) { console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ç–µ–∑–∞:', e); }
  };

  const pageStyle = { padding: '20px', maxWidth: '1400px', margin: '0 auto', fontFamily: 'system-ui, -apple-system, sans-serif' };
  const cardStyle = { background: '#fff', border: '1px solid #e5e5e5', borderRadius: '8px', marginBottom: '20px', boxShadow: '0 1px 3px rgba(0,0,0,0.1)' };
  const cardHeaderStyle = { padding: '20px', borderBottom: '1px solid #e5e5e5', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: '#007bff', color: 'white', borderRadius: '8px 8px 0 0' };
  const cardContentStyle = { padding: '20px' };
  const buttonStyle = { padding: '8px 16px', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer', marginRight: '8px', fontSize: '14px' };
  const buttonSecondaryStyle = { ...buttonStyle, backgroundColor: '#6c757d' };
  const buttonSuccessStyle = { ...buttonStyle, backgroundColor: '#28a745' };
  const tabsStyle = { display: 'flex', borderBottom: '1px solid #e5e5e5', marginBottom: '20px' };
  const tabStyle = { padding: '12px 20px', border: 'none', background: 'none', cursor: 'pointer', fontSize: '14px', borderBottom: '2px solid transparent' };
  const activeTabStyle = { padding: '12px 20px', border: 'none', background: 'none', cursor: 'pointer', fontSize: '14px', borderBottom: '2px solid #007bff', color: '#007bff' };
  const patientItemStyle = { display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '16px', border: '1px solid #e5e5e5', borderRadius: '4px', marginBottom: '12px' };
  const formStyle = { display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px' };
  const inputStyle = { width: '100%', padding: '8px 12px', border: '1px solid #ddd', borderRadius: '4px', fontSize: '14px', marginBottom: '12px' };
  const labelStyle = { display: 'block', marginBottom: '4px', fontWeight: '500', fontSize: '14px' };

  return (
    <div style={pageStyle}>
      <div style={{ marginBottom: '30px' }}>
        <h1 style={{ fontSize: '28px', fontWeight: 'bold', marginBottom: '8px', color: '#007bff' }}>ü¶∑ –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–∞–Ω–µ–ª—å</h1>
        <p style={{ color: '#666', fontSize: '14px' }}>–û—Å–º–æ—Ç—Ä—ã, –ª–µ—á–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ</p>
      </div>

      <div style={tabsStyle}>
        <button style={activeTab === 'patients' ? activeTabStyle : tabStyle} onClick={() => setActiveTab('patients')}>üë• –ü–∞—Ü–∏–µ–Ω—Ç—ã</button>
        <button style={activeTab === 'examinations' ? activeTabStyle : tabStyle} onClick={() => setActiveTab('examinations')}>üîç –û—Å–º–æ—Ç—Ä—ã</button>
        <button style={activeTab === 'treatments' ? activeTabStyle : tabStyle} onClick={() => setActiveTab('treatments')}>ü¶∑ –õ–µ—á–µ–Ω–∏–µ</button>
        <button style={activeTab === 'prosthetics' ? activeTabStyle : tabStyle} onClick={() => setActiveTab('prosthetics')}>ü¶ø –ü—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ</button>
      </div>

      {activeTab === 'patients' && (
        <div>
          <div style={cardStyle}>
            <div style={cardHeaderStyle}>
              <h2 style={{ margin: 0, fontSize: '18px' }}>–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã</h2>
              <span style={{ fontSize: '14px' }}>–í—Å–µ–≥–æ: {patients.length} –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤</span>
            </div>
            <div style={cardContentStyle}>
              {loading ? (
                <div style={{ textAlign: 'center', padding: '40px' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤...</div>
              ) : (
                <div>
                  {patients.map((patient) => (
                    <div key={patient.id} style={patientItemStyle}>
                      <div style={{ flex: 1 }}>
                        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>
                          <h3 style={{ margin: 0, fontSize: '16px' }}>{patient.last_name} {patient.first_name} {patient.middle_name}</h3>
                          <span style={{ padding: '4px 8px', fontSize: '12px', borderRadius: '12px', backgroundColor: '#e3f2fd', color: '#1976d2', marginLeft: '8px' }}>–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è</span>
                        </div>
                        <div style={{ fontSize: '12px', color: '#666' }}>üì± {patient.phone} | üìÖ {patient.birth_date} | üÜî ID: {patient.id}</div>
                      </div>
                      <div>
                        <button style={buttonStyle} onClick={() => { setSelectedPatient(patient); setExaminationForm({ ...examinationForm, patient_id: patient.id }); setShowExaminationForm(true); }}>üîç –û—Å–º–æ—Ç—Ä</button>
                        <button style={buttonStyle} onClick={() => { setSelectedPatient(patient); setTreatmentForm({ ...treatmentForm, patient_id: patient.id }); setShowTreatmentForm(true); }}>ü¶∑ –õ–µ—á–µ–Ω–∏–µ</button>
                        <button style={buttonStyle} onClick={() => { setSelectedPatient(patient); setProstheticForm({ ...prostheticForm, patient_id: patient.id }); setShowProstheticForm(true); }}>ü¶ø –ü—Ä–æ—Ç–µ–∑</button>
                        <button style={buttonSuccessStyle} onClick={() => setSelectedPatient(patient)}>üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä</button>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      {activeTab === 'examinations' && (
        <div>
          <div style={cardStyle}>
            <div style={cardHeaderStyle}>
              <h2 style={{ margin: 0, fontSize: '18px' }}>–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Å–º–æ—Ç—Ä—ã</h2>
              <button style={{ ...buttonStyle, backgroundColor: 'white', color: '#007bff' }} onClick={() => setShowExaminationForm(true)}>‚ûï –ù–æ–≤—ã–π –æ—Å–º–æ—Ç—Ä</button>
            </div>
            <div style={cardContentStyle}>
              <div>
                {dentalExaminations.map((exam) => (
                  <div key={exam.id} style={patientItemStyle}>
                    <div style={{ flex: 1 }}>
                      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>
                        <h3 style={{ margin: 0, fontSize: '16px' }}>–û—Å–º–æ—Ç—Ä #{exam.id} ‚Äî –ü–∞—Ü–∏–µ–Ω—Ç ID: {exam.patient_id}</h3>
                        <span style={{ padding: '4px 8px', fontSize: '12px', borderRadius: '12px', backgroundColor: '#e8f5e8', color: '#2e7d32', marginLeft: '8px' }}>{exam.examination_date}</span>
                      </div>
                      <div style={{ fontSize: '12px', color: '#666' }}>ü¶∑ –ö–∞—Ä–∏–µ—Å: {exam.caries_status} | ü¶∑ –ü–∞—Ä–æ–¥–æ–Ω—Ç: {exam.periodontal_status} | ü¶∑ –ü—Ä–∏–∫—É—Å: {exam.occlusion}</div>
                      <div style={{ fontSize: '12px', color: '#666', marginTop: '4px' }}>ü¶∑ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑—É–±—ã: {exam.missing_teeth} | ü¶∑ –ù–∞–ª–µ—Ç: {exam.dental_plaque} | ü©∏ –ö—Ä–æ–≤–æ—Ç–æ—á–∏–≤–æ—Å—Ç—å: {exam.gingival_bleeding}</div>
                    </div>
                    <div>
                      <button style={buttonStyle}>üìã –û—Ç—á–µ—Ç</button>
                      <button style={buttonSuccessStyle}>üì∏ –§–æ—Ç–æ</button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      )}

      {activeTab === 'treatments' && (
        <div>
          <div style={cardStyle}>
            <div style={cardHeaderStyle}>
              <h2 style={{ margin: 0, fontSize: '18px' }}>–ü–ª–∞–Ω—ã –ª–µ—á–µ–Ω–∏—è</h2>
              <button style={{ ...buttonStyle, backgroundColor: 'white', color: '#007bff' }} onClick={() => setShowTreatmentForm(true)}>‚ûï –ù–æ–≤—ã–π –ø–ª–∞–Ω</button>
            </div>
            <div style={cardContentStyle}>
              <div>
                {treatmentPlans.map((treatment) => (
                  <div key={treatment.id} style={patientItemStyle}>
                    <div style={{ flex: 1 }}>
                      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>
                        <h3 style={{ margin: 0, fontSize: '16px' }}>–õ–µ—á–µ–Ω–∏–µ #{treatment.id} ‚Äî –ü–∞—Ü–∏–µ–Ω—Ç ID: {treatment.patient_id}</h3>
                        <span style={{ padding: '4px 8px', fontSize: '12px', borderRadius: '12px', backgroundColor: '#fff3cd', color: '#856404', marginLeft: '8px' }}>{treatment.treatment_date}</span>
                      </div>
                      <div style={{ fontSize: '12px', color: '#666' }}>ü¶∑ –¢–∏–ø: {treatment.treatment_type} | ü¶∑ –ó—É–±—ã: {treatment.teeth_involved} | üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {treatment.cost}</div>
                      <div style={{ fontSize: '12px', color: '#666', marginTop: '4px' }}>üß™ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: {treatment.materials_used} | üíâ –ê–Ω–µ—Å—Ç–µ–∑–∏—è: {treatment.anesthesia}</div>
                      <div style={{ fontSize: '12px', color: '#666', marginTop: '4px' }}>üìÖ –ö–æ–Ω—Ç—Ä–æ–ª—å: {treatment.follow_up_date}</div>
                    </div>
                    <div>
                      <button style={buttonStyle}>üìã –û—Ç—á–µ—Ç</button>
                      <button style={buttonSuccessStyle}>üìä –ü—Ä–æ–≥—Ä–µ—Å—Å</button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      )}

      {activeTab === 'prosthetics' && (
        <div>
          <div style={cardStyle}>
            <div style={cardHeaderStyle}>
              <h2 style={{ margin: 0, fontSize: '18px' }}>–ü—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
              <button style={{ ...buttonStyle, backgroundColor: 'white', color: '#007bff' }} onClick={() => setShowProstheticForm(true)}>‚ûï –ù–æ–≤—ã–π –ø—Ä–æ—Ç–µ–∑</button>
            </div>
            <div style={cardContentStyle}>
              <div>
                {prosthetics.map((prosthetic) => (
                  <div key={prosthetic.id} style={patientItemStyle}>
                    <div style={{ flex: 1 }}>
                      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>
                        <h3 style={{ margin: 0, fontSize: '16px' }}>–ü—Ä–æ—Ç–µ–∑ #{prosthetic.id} ‚Äî –ü–∞—Ü–∏–µ–Ω—Ç ID: {prosthetic.patient_id}</h3>
                        <span style={{ padding: '4px 8px', fontSize: '12px', borderRadius: '12px', backgroundColor: '#f8d7da', color: '#721c24', marginLeft: '8px' }}>{prosthetic.prosthetic_date}</span>
                      </div>
                      <div style={{ fontSize: '12px', color: '#666' }}>üß© –¢–∏–ø: {prosthetic.prosthetic_type} | ü¶∑ –ó—É–±—ã: {prosthetic.teeth_replaced} | üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {prosthetic.cost}</div>
                      <div style={{ fontSize: '12px', color: '#666', marginTop: '4px' }}>üß± –ú–∞—Ç–µ—Ä–∏–∞–ª: {prosthetic.material} | üé® –û—Ç—Ç–µ–Ω–æ–∫: {prosthetic.shade}</div>
                      <div style={{ fontSize: '12px', color: '#666', marginTop: '4px' }}>‚úÖ –ü–æ—Å–∞–¥–∫–∞: {prosthetic.fit_quality} | üòä –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {prosthetic.patient_satisfaction}</div>
                    </div>
                    <div>
                      <button style={buttonStyle}>üìã –û—Ç—á–µ—Ç</button>
                      <button style={buttonSuccessStyle}>üì∏ –§–æ—Ç–æ</button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      )}

      {showExaminationForm && (
        <div style={cardStyle}>
          <div style={cardHeaderStyle}>
            <h2 style={{ margin: 0, fontSize: '18px' }}>–ù–æ–≤—ã–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ—Å–º–æ—Ç—Ä {selectedPatient ? `‚Äî ${selectedPatient.last_name} ${selectedPatient.first_name}` : ''}</h2>
          </div>
          <div style={cardContentStyle}>
            <form onSubmit={handleExaminationSubmit}>
              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–î–∞—Ç–∞ –æ—Å–º–æ—Ç—Ä–∞ *</label>
                  <input style={inputStyle} type="date" value={examinationForm.examination_date} onChange={(e) => setExaminationForm({ ...examinationForm, examination_date: e.target.value })} required />
                </div>
                <div>
                  <label style={labelStyle}>–ì–∏–≥–∏–µ–Ω–∞ –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞</label>
                  <select style={inputStyle} value={examinationForm.oral_hygiene} onChange={(e) => setExaminationForm({ ...examinationForm, oral_hygiene: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="excellent">–û—Ç–ª–∏—á–Ω–∞—è</option>
                    <option value="good">–•–æ—Ä–æ—à–∞—è</option>
                    <option value="fair">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–∞—è</option>
                    <option value="poor">–ü–ª–æ—Ö–∞—è</option>
                  </select>
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–°—Ç–∞—Ç—É—Å –∫–∞—Ä–∏–µ—Å–∞</label>
                  <select style={inputStyle} value={examinationForm.caries_status} onChange={(e) => setExaminationForm({ ...examinationForm, caries_status: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="none">–ù–µ—Ç –∫–∞—Ä–∏–µ—Å–∞</option>
                    <option value="initial">–ù–∞—á–∞–ª—å–Ω—ã–π</option>
                    <option value="superficial">–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–π</option>
                    <option value="medium">–°—Ä–µ–¥–Ω–∏–π</option>
                    <option value="deep">–ì–ª—É–±–æ–∫–∏–π</option>
                  </select>
                </div>
                <div>
                  <label style={labelStyle}>–°—Ç–∞—Ç—É—Å –ø–∞—Ä–æ–¥–æ–Ω—Ç–∞</label>
                  <select style={inputStyle} value={examinationForm.periodontal_status} onChange={(e) => setExaminationForm({ ...examinationForm, periodontal_status: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="healthy">–ó–¥–æ—Ä–æ–≤—ã–π</option>
                    <option value="gingivitis">–ì–∏–Ω–≥–∏–≤–∏—Ç</option>
                    <option value="periodontitis">–ü–∞—Ä–æ–¥–æ–Ω—Ç–∏—Ç</option>
                    <option value="advanced">–¢—è–∂–µ–ª—ã–π</option>
                  </select>
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–ü—Ä–∏–∫—É—Å</label>
                  <select style={inputStyle} value={examinationForm.occlusion} onChange={(e) => setExaminationForm({ ...examinationForm, occlusion: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="normal">–ù–æ—Ä–º–∞–ª—å–Ω—ã–π</option>
                    <option value="open_bite">–û—Ç–∫—Ä—ã—Ç—ã–π</option>
                    <option value="deep_bite">–ì–ª—É–±–æ–∫–∏–π</option>
                    <option value="cross_bite">–ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–Ω—ã–π</option>
                    <option value="crowding">–°–∫—É—á–µ–Ω–Ω–æ—Å—Ç—å</option>
                  </select>
                </div>
                <div>
                  <label style={labelStyle}>–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑—É–±—ã</label>
                  <input style={inputStyle} value={examinationForm.missing_teeth} onChange={(e) => setExaminationForm({ ...examinationForm, missing_teeth: e.target.value })} placeholder="–ù–æ–º–µ—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑—É–±–æ–≤" />
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–ó—É–±–Ω–æ–π –Ω–∞–ª–µ—Ç</label>
                  <select style={inputStyle} value={examinationForm.dental_plaque} onChange={(e) => setExaminationForm({ ...examinationForm, dental_plaque: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="none">–ù–µ—Ç</option>
                    <option value="minimal">–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π</option>
                    <option value="moderate">–£–º–µ—Ä–µ–Ω–Ω—ã–π</option>
                    <option value="heavy">–¢—è–∂–µ–ª—ã–π</option>
                  </select>
                </div>
                <div>
                  <label style={labelStyle}>–ö—Ä–æ–≤–æ—Ç–æ—á–∏–≤–æ—Å—Ç—å –¥–µ—Å–µ–Ω</label>
                  <select style={inputStyle} value={examinationForm.gingival_bleeding} onChange={(e) => setExaminationForm({ ...examinationForm, gingival_bleeding: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="none">–ù–µ—Ç</option>
                    <option value="mild">–õ–µ–≥–∫–∞—è</option>
                    <option value="moderate">–£–º–µ—Ä–µ–Ω–Ω–∞—è</option>
                    <option value="severe">–¢—è–∂–µ–ª–∞—è</option>
                  </select>
                </div>
              </div>

              <div>
                <label style={labelStyle}>–î–∏–∞–≥–Ω–æ–∑</label>
                <textarea style={{ ...inputStyle, minHeight: '80px', resize: 'vertical' }} value={examinationForm.diagnosis} onChange={(e) => setExaminationForm({ ...examinationForm, diagnosis: e.target.value })} placeholder="–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –¥–∏–∞–≥–Ω–æ–∑" />
              </div>

              <div>
                <label style={labelStyle}>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</label>
                <textarea style={{ ...inputStyle, minHeight: '80px', resize: 'vertical' }} value={examinationForm.recommendations} onChange={(e) => setExaminationForm({ ...examinationForm, recommendations: e.target.value })} placeholder="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ª–µ—á–µ–Ω–∏—é –∏ —É—Ö–æ–¥—É" />
              </div>

              <div>
                <button type="submit" style={buttonStyle}>üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Å–º–æ—Ç—Ä</button>
                <button type="button" style={buttonSecondaryStyle} onClick={() => setShowExaminationForm(false)}>–û—Ç–º–µ–Ω–∞</button>
              </div>
            </form>
          </div>
        </div>
      )}

      {showTreatmentForm && (
        <div style={cardStyle}>
          <div style={cardHeaderStyle}>
            <h2 style={{ margin: 0, fontSize: '18px' }}>–ù–æ–≤—ã–π –ø–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è {selectedPatient ? `‚Äî ${selectedPatient.last_name} ${selectedPatient.first_name}` : ''}</h2>
          </div>
          <div style={cardContentStyle}>
            <form onSubmit={handleTreatmentSubmit}>
              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–î–∞—Ç–∞ –ª–µ—á–µ–Ω–∏—è *</label>
                  <input style={inputStyle} type="date" value={treatmentForm.treatment_date} onChange={(e) => setTreatmentForm({ ...treatmentForm, treatment_date: e.target.value })} required />
                </div>
                <div>
                  <label style={labelStyle}>–¢–∏–ø –ª–µ—á–µ–Ω–∏—è *</label>
                  <select style={inputStyle} value={treatmentForm.treatment_type} onChange={(e) => setTreatmentForm({ ...treatmentForm, treatment_type: e.target.value })} required>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                    <option value="filling">–ü–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏–µ</option>
                    <option value="root_canal">–ö–∞–Ω–∞–ª—ã</option>
                    <option value="extraction">–£–¥–∞–ª–µ–Ω–∏–µ</option>
                    <option value="cleaning">–ß–∏—Å—Ç–∫–∞</option>
                    <option value="whitening">–û—Ç–±–µ–ª–∏–≤–∞–Ω–∏–µ</option>
                    <option value="orthodontics">–û—Ä—Ç–æ–¥–æ–Ω—Ç–∏—è</option>
                  </select>
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–í–æ–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∑—É–±—ã</label>
                  <input style={inputStyle} value={treatmentForm.teeth_involved} onChange={(e) => setTreatmentForm({ ...treatmentForm, teeth_involved: e.target.value })} placeholder="–ù–æ–º–µ—Ä–∞ –∑—É–±–æ–≤" />
                </div>
                <div>
                  <label style={labelStyle}>–°—Ç–æ–∏–º–æ—Å—Ç—å</label>
                  <input style={inputStyle} type="number" value={treatmentForm.cost} onChange={(e) => setTreatmentForm({ ...treatmentForm, cost: e.target.value })} placeholder="–°—É–º–º–∞" />
                </div>
              </div>

              <div>
                <label style={labelStyle}>–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã</label>
                <textarea style={{ ...inputStyle, minHeight: '80px', resize: 'vertical' }} value={treatmentForm.procedure_description} onChange={(e) => setTreatmentForm({ ...treatmentForm, procedure_description: e.target.value })} placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ" />
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–ú–∞—Ç–µ—Ä–∏–∞–ª—ã</label>
                  <input style={inputStyle} value={treatmentForm.materials_used} onChange={(e) => setTreatmentForm({ ...treatmentForm, materials_used: e.target.value })} placeholder="–ù–∞–∑–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤" />
                </div>
                <div>
                  <label style={labelStyle}>–ê–Ω–µ—Å—Ç–µ–∑–∏—è</label>
                  <select style={inputStyle} value={treatmentForm.anesthesia} onChange={(e) => setTreatmentForm({ ...treatmentForm, anesthesia: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="none">–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è</option>
                    <option value="local">–ú–µ—Å—Ç–Ω–∞—è</option>
                    <option value="sedation">–°–µ–¥–∞—Ü–∏—è</option>
                    <option value="general">–û–±—â–∞—è</option>
                  </select>
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–û—Å–ª–æ–∂–Ω–µ–Ω–∏—è</label>
                  <input style={inputStyle} value={treatmentForm.complications} onChange={(e) => setTreatmentForm({ ...treatmentForm, complications: e.target.value })} placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π" />
                </div>
                <div>
                  <label style={labelStyle}>–î–∞—Ç–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è</label>
                  <input style={inputStyle} type="date" value={treatmentForm.follow_up_date} onChange={(e) => setTreatmentForm({ ...treatmentForm, follow_up_date: e.target.value })} />
                </div>
              </div>

              <div>
                <button type="submit" style={buttonStyle}>ü¶∑ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–µ—á–µ–Ω–∏–µ</button>
                <button type="button" style={buttonSecondaryStyle} onClick={() => setShowTreatmentForm(false)}>–û—Ç–º–µ–Ω–∞</button>
              </div>
            </form>
          </div>
        </div>
      )}

      {showProstheticForm && (
        <div style={cardStyle}>
          <div style={cardHeaderStyle}>
            <h2 style={{ margin: 0, fontSize: '18px' }}>–ù–æ–≤—ã–π –ø—Ä–æ—Ç–µ–∑ {selectedPatient ? `‚Äî ${selectedPatient.last_name} ${selectedPatient.first_name}` : ''}</h2>
          </div>
          <div style={cardContentStyle}>
            <form onSubmit={handleProstheticSubmit}>
              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–î–∞—Ç–∞ –ø—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏—è *</label>
                  <input style={inputStyle} type="date" value={prostheticForm.prosthetic_date} onChange={(e) => setProstheticForm({ ...prostheticForm, prosthetic_date: e.target.value })} required />
                </div>
                <div>
                  <label style={labelStyle}>–¢–∏–ø –ø—Ä–æ—Ç–µ–∑–∞ *</label>
                  <select style={inputStyle} value={prostheticForm.prosthetic_type} onChange={(e) => setProstheticForm({ ...prostheticForm, prosthetic_type: e.target.value })} required>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                    <option value="crown">–ö–æ—Ä–æ–Ω–∫–∞</option>
                    <option value="bridge">–ú–æ—Å—Ç</option>
                    <option value="implant">–ò–º–ø–ª–∞–Ω—Ç</option>
                    <option value="partial_denture">–ß–∞—Å—Ç–∏—á–Ω—ã–π –ø—Ä–æ—Ç–µ–∑</option>
                    <option value="full_denture">–ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ç–µ–∑</option>
                    <option value="veneer">–í–∏–Ω–∏—Ä</option>
                  </select>
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–ó–∞–º–µ–Ω—è–µ–º—ã–µ –∑—É–±—ã</label>
                  <input style={inputStyle} value={prostheticForm.teeth_replaced} onChange={(e) => setProstheticForm({ ...prostheticForm, teeth_replaced: e.target.value })} placeholder="–ù–æ–º–µ—Ä–∞ –∑—É–±–æ–≤" />
                </div>
                <div>
                  <label style={labelStyle}>–ú–∞—Ç–µ—Ä–∏–∞–ª</label>
                  <select style={inputStyle} value={prostheticForm.material} onChange={(e) => setProstheticForm({ ...prostheticForm, material: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª</option>
                    <option value="porcelain">–§–∞—Ä—Ñ–æ—Ä</option>
                    <option value="metal">–ú–µ—Ç–∞–ª–ª</option>
                    <option value="ceramic">–ö–µ—Ä–∞–º–∏–∫–∞</option>
                    <option value="composite">–ö–æ–º–ø–æ–∑–∏—Ç</option>
                    <option value="zirconia">–î–∏–æ–∫—Å–∏–¥ —Ü–∏—Ä–∫–æ–Ω–∏—è</option>
                  </select>
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–û—Ç—Ç–µ–Ω–æ–∫</label>
                  <input style={inputStyle} value={prostheticForm.shade} onChange={(e) => setProstheticForm({ ...prostheticForm, shade: e.target.value })} placeholder="A1, B2, C3 –∏ —Ç.–¥." />
                </div>
                <div>
                  <label style={labelStyle}>–°—Ç–æ–∏–º–æ—Å—Ç—å</label>
                  <input style={inputStyle} type="number" value={prostheticForm.cost} onChange={(e) => setProstheticForm({ ...prostheticForm, cost: e.target.value })} placeholder="–°—É–º–º–∞" />
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–ö–∞—á–µ—Å—Ç–≤–æ –ø–æ—Å–∞–¥–∫–∏</label>
                  <select style={inputStyle} value={prostheticForm.fit_quality} onChange={(e) => setProstheticForm({ ...prostheticForm, fit_quality: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="excellent">–û—Ç–ª–∏—á–Ω–∞—è</option>
                    <option value="good">–•–æ—Ä–æ—à–∞—è</option>
                    <option value="fair">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–∞—è</option>
                    <option value="poor">–ü–ª–æ—Ö–∞—è</option>
                  </select>
                </div>
                <div>
                  <label style={labelStyle}>–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞</label>
                  <select style={inputStyle} value={prostheticForm.patient_satisfaction} onChange={(e) => setProstheticForm({ ...prostheticForm, patient_satisfaction: e.target.value })}>
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                    <option value="very_satisfied">–û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω</option>
                    <option value="satisfied">–î–æ–≤–æ–ª–µ–Ω</option>
                    <option value="neutral">–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ</option>
                    <option value="dissatisfied">–ù–µ –¥–æ–≤–æ–ª–µ–Ω</option>
                    <option value="very_dissatisfied">–û—á–µ–Ω—å –Ω–µ –¥–æ–≤–æ–ª–µ–Ω</option>
                  </select>
                </div>
              </div>

              <div style={formStyle}>
                <div>
                  <label style={labelStyle}>–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –ø–µ—Ä–∏–æ–¥</label>
                  <input style={inputStyle} value={prostheticForm.warranty_period} onChange={(e) => setProstheticForm({ ...prostheticForm, warranty_period: e.target.value })} placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 2 –≥–æ–¥–∞" />
                </div>
              </div>

              <div>
                <button type="submit" style={buttonStyle}>üß© –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ç–µ–∑</button>
                <button type="button" style={buttonSecondaryStyle} onClick={() => setShowProstheticForm(false)}>–û—Ç–º–µ–Ω–∞</button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default DentistPanel;


