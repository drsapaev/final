// Helper for opening Queue WS with correct base and protocol.
// Falls back gracefully if WS not available or activation guard closes the socket.

import { getApiBase } from "./client.js";

/**
 * Open queue websocket.
 * @param {string} department
 * @param {string} dateStr YYYY-MM-DD
 * @param {(msg: any) => void} onMessage
 * @returns {() => void} unsubscribe/close function
 */
export function openQueueWS(department, dateStr, onMessage) {
  let ws = null;
  try {
    const base = new URL(getApiBase());
    const proto = base.protocol === "https:" ? "wss:" : "ws:";
    const host = base.host; // includes port
    const url = `${proto}//${host}/ws/queue?department=${encodeURIComponent(
      department
    )}&date_str=${encodeURIComponent(dateStr)}`;

    ws = new WebSocket(url);
    ws.onmessage = (ev) => {
      try {
        const msg = JSON.parse(ev.data);
        onMessage && onMessage(msg);
      } catch {
        // ignore malformed
      }
    };
    ws.onerror = () => {};
    ws.onclose = () => {};
  } catch {
    // ignore
  }

  return function close() {
    try { ws && ws.close(1000, "bye"); } catch {}
    ws = null;
  };
}
