/**
 * –¢–µ—Å—Ç MCP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ frontend
 */
import { mcpAPI } from '../api/mcpClient';

export const testMCPIntegration = async () => {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ frontend...');
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MCP
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MCP...');
    const healthResponse = await mcpAPI.getMcpHealth();
    console.log('‚úÖ MCP Health:', healthResponse.data);
    
    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    console.log('2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ MCP...');
    const statusResponse = await mcpAPI.getMcpStatus();
    console.log('‚úÖ MCP Status:', statusResponse.data);
    
    // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
    console.log('3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π MCP...');
    const capabilitiesResponse = await mcpAPI.getMcpCapabilities();
    console.log('‚úÖ MCP Capabilities:', capabilitiesResponse.data);
    
    // –¢–µ—Å—Ç 4: –ê–Ω–∞–ª–∏–∑ –∂–∞–ª–æ–±—ã
    console.log('4Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∂–∞–ª–æ–±—ã...');
    const complaintResponse = await mcpAPI.analyzeComplaint({
      complaint: '–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å –∏ —Ç–æ—à–Ω–æ—Ç–∞ —É–∂–µ 2 –¥–Ω—è',
      patientInfo: { age: 35, gender: 'female' },
      provider: 'openai'
    });
    console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ –∂–∞–ª–æ–±—ã:', complaintResponse.data);
    
    // –¢–µ—Å—Ç 5: –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ú–ö–ë-10
    console.log('5Ô∏è‚É£ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ú–ö–ë-10...');
    const icd10Response = await mcpAPI.suggestIcd10({
      symptoms: ['–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å', '—Ç–æ—à–Ω–æ—Ç–∞', '—Å–≤–µ—Ç–æ–±–æ—è–∑–Ω—å'],
      diagnosis: '–ú–∏–≥—Ä–µ–Ω—å',
      provider: 'openai'
    });
    console.log('‚úÖ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ú–ö–ë-10:', icd10Response.data);
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã MCP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MCP:', error);
    return false;
  }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
if (typeof window !== 'undefined') {
  window.testMCPIntegration = testMCPIntegration;
  console.log('üîß MCP —Ç–µ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ window.testMCPIntegration()');
}
