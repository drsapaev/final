// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–æ–ª–µ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç–æ–≤
import React from 'react';
import { Navigate, useLocation } from 'react-router-dom';
import { useRoleAccess } from '../common/RoleGuard';
import { Loading } from '../common/Loading';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —Ä–æ–ª–µ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
 */
export function RequireAuth({ 
  children, 
  roles = [], 
  permissions = [],
  fallback = null,
  redirectTo = '/login'
}) {
  const location = useLocation();
  const { profile, hasRole, hasPermission } = useRoleAccess();

  // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω
  if (!profile) {
    return <Navigate to={redirectTo} state={{ from: location }} replace />;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏
  if (roles.length > 0 && !hasRole(roles)) {
    return fallback || <Navigate to="/unauthorized" replace />;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
  if (permissions.length > 0 && !hasPermission(permissions)) {
    return fallback || <Navigate to="/unauthorized" replace />;
  }

  return children;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export function RequireAuthOnly({ children, redirectTo = '/login' }) {
  const location = useLocation();
  const { profile } = useRoleAccess();

  if (!profile) {
    return <Navigate to={redirectTo} state={{ from: location }} replace />;
  }

  return children;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export function RequireRoles({ children, roles = [], fallback = null }) {
  const { profile, hasRole } = useRoleAccess();

  if (!profile) {
    return <Loading text="–ó–∞–≥—Ä—É–∑–∫–∞..." />;
  }

  if (roles.length > 0 && !hasRole(roles)) {
    return fallback || <Navigate to="/unauthorized" replace />;
  }

  return children;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
 */
export function RequirePermissions({ children, permissions = [], fallback = null }) {
  const { profile, hasPermission } = useRoleAccess();

  if (!profile) {
    return <Loading text="–ó–∞–≥—Ä—É–∑–∫–∞..." />;
  }

  if (permissions.length > 0 && !hasPermission(permissions)) {
    return fallback || <Navigate to="/unauthorized" replace />;
  }

  return children;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–µ–π
 */
export function RoleBasedRender({ 
  children, 
  roles = [], 
  permissions = [],
  fallback = null,
  requireAll = false
}) {
  const { profile, hasRole, hasPermission } = useRoleAccess();

  if (!profile) {
    return <Loading text="–ó–∞–≥—Ä—É–∑–∫–∞..." />;
  }

  let hasAccess = true;

  if (roles.length > 0) {
    hasAccess = requireAll ? 
      roles.every(role => hasRole([role])) : 
      hasRole(roles);
  }

  if (permissions.length > 0) {
    const hasPerms = requireAll ? 
      permissions.every(permission => hasPermission([permission])) : 
      hasPermission(permissions);
    
    hasAccess = hasAccess && hasPerms;
  }

  return hasAccess ? children : (fallback || null);
}

/**
 * HOC –¥–ª—è —Ä–æ–ª–µ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
 */
export function withRoleAuth(WrappedComponent, authProps = {}) {
  return function WithRoleAuthComponent(props) {
    return (
      <RequireAuth {...authProps}>
        <WrappedComponent {...props} />
      </RequireAuth>
    );
  };
}

/**
 * HOC –¥–ª—è —Ä–æ–ª–µ–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
 */
export function withRoleRender(WrappedComponent, renderProps = {}) {
  return function WithRoleRenderComponent(props) {
    return (
      <RoleBasedRender {...renderProps}>
        <WrappedComponent {...props} />
      </RoleBasedRender>
    );
  };
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
 */
export function UnauthorizedPage() {
  const theme = useTheme();
  const { getColor, getSpacing, getFontSize } = theme;

  const containerStyle = {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    minHeight: '100vh',
    padding: getSpacing('lg'),
    textAlign: 'center'
  };

  const iconStyle = {
    fontSize: getFontSize('xxl'),
    marginBottom: getSpacing('lg'),
    color: getColor('error', 'main')
  };

  const titleStyle = {
    fontSize: getFontSize('xl'),
    fontWeight: '600',
    color: getColor('text', 'primary'),
    marginBottom: getSpacing('md')
  };

  const messageStyle = {
    fontSize: getFontSize('md'),
    color: getColor('text', 'secondary'),
    marginBottom: getSpacing('lg'),
    maxWidth: '500px',
    lineHeight: 1.6
  };

  const buttonStyle = {
    padding: `${getSpacing('sm')} ${getSpacing('lg')}`,
    backgroundColor: getColor('primary', 'main'),
    color: getColor('primary', 'contrast'),
    border: 'none',
    borderRadius: '8px',
    fontSize: getFontSize('md'),
    fontWeight: '500',
    cursor: 'pointer',
    textDecoration: 'none',
    display: 'inline-block'
  };

  return (
    <div style={containerStyle}>
      <div style={iconStyle}>üö´</div>
      <h1 style={titleStyle}>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h1>
      <p style={messageStyle}>
        –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. 
        –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π.
      </p>
      <a href="/" style={buttonStyle}>
        –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
      </a>
    </div>
  );
}

// –ò–º–ø–æ—Ä—Ç useTheme –¥–ª—è UnauthorizedPage
import { useTheme } from '../../contexts/ThemeContext';

