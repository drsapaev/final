import React, { useState } from 'react';
import { Button, Card, Badge } from '../../design-system/components';
import { useTheme } from '../../contexts/ThemeContext';

const SimpleUserManagement = () => {
  const { getColor, getSpacing } = useTheme();
  const [users, setUsers] = useState([
    { id: 1, name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', role: '–í—Ä–∞—á', email: 'ivan@clinic.com', status: '–ê–∫—Ç–∏–≤–µ–Ω' },
    { id: 2, name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', role: '–ú–µ–¥—Å–µ—Å—Ç—Ä–∞', email: 'maria@clinic.com', status: '–ê–∫—Ç–∏–≤–µ–Ω' },
    { id: 3, name: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', role: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', email: 'alex@clinic.com', status: '–ê–∫—Ç–∏–≤–µ–Ω' },
    { id: 4, name: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞', role: '–õ–∞–±–æ—Ä–∞–Ω—Ç', email: 'elena@clinic.com', status: '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω' }
  ]);

  const [newUser, setNewUser] = useState({ name: '', role: '–í—Ä–∞—á', email: '' });
  const [showAddForm, setShowAddForm] = useState(false);

  const handleAddUser = () => {
    if (newUser.name && newUser.email) {
      const user = {
        id: users.length + 1,
        name: newUser.name,
        role: newUser.role,
        email: newUser.email,
        status: '–ê–∫—Ç–∏–≤–µ–Ω'
      };
      setUsers([...users, user]);
      setNewUser({ name: '', role: '–í—Ä–∞—á', email: '' });
      setShowAddForm(false);
    }
  };

  const toggleUserStatus = (id) => {
    setUsers(users.map(user => 
      user.id === id 
        ? { ...user, status: user.status === '–ê–∫—Ç–∏–≤–µ–Ω' ? '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω' : '–ê–∫—Ç–∏–≤–µ–Ω' }
        : user
    ));
  };

  const deleteUser = (id) => {
    setUsers(users.filter(user => user.id !== id));
  };

  return (
    <div className="clinic-page clinic-p-lg">
      <div className="clinic-header">
        <h1>üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h1>
      </div>

      <div className="clinic-m-md">
        <Button 
          variant="primary"
          onClick={() => setShowAddForm(!showAddForm)}
        >
          {showAddForm ? '–û—Ç–º–µ–Ω–∞' : '+ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}
        </Button>
      </div>

      {showAddForm && (
        <Card className="clinic-m-md">
          <h3>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h3>
          <div className="clinic-flex clinic-gap-md clinic-m-md">
            <input
              type="text"
              placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
              value={newUser.name}
              onChange={(e) => setNewUser({...newUser, name: e.target.value})}
              className="clinic-input"
              style={{ width: '200px' }}
            />
            <input
              type="email"
              placeholder="Email"
              value={newUser.email}
              onChange={(e) => setNewUser({...newUser, email: e.target.value})}
              className="clinic-input"
              style={{ width: '200px' }}
            />
            <select
              value={newUser.role}
              onChange={(e) => setNewUser({...newUser, role: e.target.value})}
              className="clinic-input"
            >
              <option value="–í—Ä–∞—á">–í—Ä–∞—á</option>
              <option value="–ú–µ–¥—Å–µ—Å—Ç—Ä–∞">–ú–µ–¥—Å–µ—Å—Ç—Ä–∞</option>
              <option value="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
              <option value="–õ–∞–±–æ—Ä–∞–Ω—Ç">–õ–∞–±–æ—Ä–∞–Ω—Ç</option>
            </select>
            <Button 
              variant="primary"
              onClick={handleAddUser}
            >
              –î–æ–±–∞–≤–∏—Ç—å
            </Button>
          </div>
        </Card>
      )}

      <Card className="clinic-m-md">
        <div style={{ overflowX: 'auto' }}>
          <table style={{ width: '100%', borderCollapse: 'collapse' }}>
          <thead>
            <tr style={{ backgroundColor: '#f5f5f5' }}>
              <th style={{ padding: '12px', textAlign: 'left', border: '1px solid #ddd' }}>ID</th>
              <th style={{ padding: '12px', textAlign: 'left', border: '1px solid #ddd' }}>–ò–º—è</th>
              <th style={{ padding: '12px', textAlign: 'left', border: '1px solid #ddd' }}>–†–æ–ª—å</th>
              <th style={{ padding: '12px', textAlign: 'left', border: '1px solid #ddd' }}>Email</th>
              <th style={{ padding: '12px', textAlign: 'left', border: '1px solid #ddd' }}>–°—Ç–∞—Ç—É—Å</th>
              <th style={{ padding: '12px', textAlign: 'left', border: '1px solid #ddd' }}>–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
          </thead>
          <tbody>
            {users.map(user => (
              <tr key={user.id}>
                <td style={{ padding: '12px', border: '1px solid #ddd' }}>{user.id}</td>
                <td style={{ padding: '12px', border: '1px solid #ddd' }}>{user.name}</td>
                <td style={{ padding: '12px', border: '1px solid #ddd' }}>{user.role}</td>
                <td style={{ padding: '12px', border: '1px solid #ddd' }}>{user.email}</td>
                <td style={{ padding: '12px', border: '1px solid #ddd' }}>
                  <Badge 
                    variant={user.status === '–ê–∫—Ç–∏–≤–µ–Ω' ? 'success' : 'danger'}
                  >
                    {user.status}
                  </Badge>
                </td>
                <td style={{ padding: '12px', border: '1px solid #ddd' }}>
                  <div className="clinic-flex clinic-gap-sm">
                    <Button
                      variant={user.status === '–ê–∫—Ç–∏–≤–µ–Ω' ? 'secondary' : 'primary'}
                      size="small"
                      onClick={() => toggleUserStatus(user.id)}
                    >
                      {user.status === '–ê–∫—Ç–∏–≤–µ–Ω' ? '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}
                    </Button>
                    <Button
                      variant="danger"
                      size="small"
                      onClick={() => deleteUser(user.id)}
                    >
                      –£–¥–∞–ª–∏—Ç—å
                    </Button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
          </table>
        </div>
      </Card>

      <div className="clinic-text-center clinic-m-md">
        <p style={{ color: 'var(--text-secondary)' }}>
          –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <strong>{users.length}</strong> | 
          –ê–∫—Ç–∏–≤–Ω—ã—Ö: <strong>{users.filter(u => u.status === '–ê–∫—Ç–∏–≤–µ–Ω').length}</strong>
        </p>
      </div>
    </div>
  );
};

export default SimpleUserManagement;
