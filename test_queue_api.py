#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –æ—á–µ—Ä–µ–¥–∏
"""
import requests
import json

BASE_URL = "http://localhost:8000/api/v1"

def test_health():
    """–¢–µ—Å—Ç health endpoint"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º health endpoint...")
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ Health: {response.status_code} - {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå Health error: {e}")
        return False

def test_queue_join():
    """–¢–µ—Å—Ç –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å...")
    
    test_data = {
        "token": "test-token-123",
        "patient_name": "–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤–∏—á",
        "phone": "+998901234567"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/queue/join",
            json=test_data,
            headers={"Content-Type": "application/json"}
        )
        print(f"‚úÖ Queue join: {response.status_code}")
        print(f"Response: {response.text}")
        return True
    except Exception as e:
        print(f"‚ùå Queue join error: {e}")
        return False

def test_queue_endpoints():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö endpoints –æ—á–µ—Ä–µ–¥–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ endpoints –æ—á–µ—Ä–µ–¥–∏...")
    
    endpoints = [
        ("GET", "/queue/today?specialist_id=1", "Today queue"),
        ("POST", "/queue/qrcode?day=2025-09-15&specialist_id=1", "QR generation"),
        ("POST", "/queue/open?day=2025-09-15&specialist_id=1", "Open queue"),
    ]
    
    for method, endpoint, name in endpoints:
        try:
            if method == "GET":
                response = requests.get(f"{BASE_URL}{endpoint}")
            else:
                response = requests.post(f"{BASE_URL}{endpoint}")
            
            print(f"‚úÖ {name}: {response.status_code}")
            if response.status_code != 200:
                print(f"   Response: {response.text[:200]}")
        except Exception as e:
            print(f"‚ùå {name} error: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API –æ—á–µ—Ä–µ–¥–∏...")
    
    # –¢–µ—Å—Ç health
    health_ok = test_health()
    
    if health_ok:
        # –¢–µ—Å—Ç –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å
        test_queue_join()
        
        # –¢–µ—Å—Ç –¥—Ä—É–≥–∏—Ö endpoints
        test_queue_endpoints()
    
    print("\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
