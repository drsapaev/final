"""
–¢–µ—Å—Ç AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∏–∑ backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
"""
import os
import sys
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'backend'))

# –ú–µ–Ω—è–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ backend
os.chdir(os.path.join(os.path.dirname(__file__), 'backend'))

from app.services.ai.ai_manager import get_ai_manager, AIProviderType
from app.core.config import get_settings

def test_ai_providers_from_backend():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∏–∑ backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∏–∑ backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"üìÅ –§–∞–π–ª .env: {os.path.exists('.env')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = get_settings()
    print(f"\nüìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ config.py:")
    print(f"  - OPENAI_API_KEY: {'–µ—Å—Ç—å' if settings.OPENAI_API_KEY else '–Ω–µ—Ç'}")
    print(f"  - GEMINI_API_KEY: {'–µ—Å—Ç—å' if settings.GEMINI_API_KEY else '–Ω–µ—Ç'}")
    print(f"  - DEEPSEEK_API_KEY: {'–µ—Å—Ç—å' if settings.DEEPSEEK_API_KEY else '–Ω–µ—Ç'}")
    
    if settings.GEMINI_API_KEY:
        print(f"  - GEMINI_API_KEY: {settings.GEMINI_API_KEY[:10]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print(f"\nüîë –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print(f"  - OPENAI_API_KEY: {'–µ—Å—Ç—å' if os.getenv('OPENAI_API_KEY') else '–Ω–µ—Ç'}")
    print(f"  - GEMINI_API_KEY: {'–µ—Å—Ç—å' if os.getenv('GEMINI_API_KEY') else '–Ω–µ—Ç'}")
    print(f"  - DEEPSEEK_API_KEY: {'–µ—Å—Ç—å' if os.getenv('DEEPSEEK_API_KEY') else '–Ω–µ—Ç'}")
    
    if os.getenv('GEMINI_API_KEY'):
        print(f"  - GEMINI_API_KEY: {os.getenv('GEMINI_API_KEY')[:10]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º AI –º–µ–Ω–µ–¥–∂–µ—Ä
    ai_manager = get_ai_manager()
    available_providers = ai_manager.get_available_providers()
    print(f"\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã: {available_providers}")
    print(f"üìã Default –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {ai_manager.default_provider}")
    
    if "gemini" in available_providers:
        print("‚úÖ Gemini –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
    else:
        print("‚ùå Gemini –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

if __name__ == "__main__":
    test_ai_providers_from_backend()
