#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º Gemini AI
"""
import os
import sys
import time
import subprocess

def main():
    print("=" * 60)
    print("üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–û–í –° GEMINI AI")
    print("=" * 60)
    
    # 1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python
    print("\n‚è≥ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å–µ—Ä–≤–µ—Ä—ã...")
    try:
        subprocess.run("taskkill /F /IM python.exe /T", 
                      shell=True, 
                      stdout=subprocess.DEVNULL, 
                      stderr=subprocess.DEVNULL)
        time.sleep(2)
        print("‚úÖ –°–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
    
    # 2. –ó–∞–ø—É—Å–∫–∞–µ–º backend —Å–µ—Ä–≤–µ—Ä
    print("\n‚è≥ –ó–∞–ø—É—Å–∫–∞–µ–º backend —Å–µ—Ä–≤–µ—Ä...")
    print("   üìç http://localhost:8000")
    print("   üìñ API Docs: http://localhost:8000/docs")
    backend_cmd = "cd backend && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    print(f"\nüí° –ö–æ–º–∞–Ω–¥–∞: {backend_cmd}")
    print("\nüìã –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print(f"   {backend_cmd}")
    
    # 3. –ó–∞–ø—É—Å–∫–∞–µ–º HTML —Ç–µ—Å—Ç–µ—Ä
    print("\n‚è≥ –ó–∞–ø—É—Å–∫–∞–µ–º HTML —Ç–µ—Å—Ç–µ—Ä...")
    print("   üìç http://localhost:8080/mcp_test_v2.html")
    tester_cmd = "python start_mcp_test_server.py"
    print(f"\nüí° –ö–æ–º–∞–Ω–¥–∞: {tester_cmd}")
    print("\nüìã –û—Ç–∫—Ä–æ–π—Ç–µ –µ—â–µ –æ–¥–∏–Ω —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print(f"   {tester_cmd}")
    
    # 4. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    print("\n" + "=" * 60)
    print("‚úÖ –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ")
    print("=" * 60)
    print("\n1Ô∏è‚É£  –û—Ç–∫—Ä–æ–π—Ç–µ 2 –Ω–æ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–∞–ª–∞")
    print("2Ô∏è‚É£  –í –ø–µ—Ä–≤–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
    print(f"    {backend_cmd}")
    print("3Ô∏è‚É£  –í–æ –≤—Ç–æ—Ä–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
    print(f"    {tester_cmd}")
    print("4Ô∏è‚É£  –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä:")
    print("    http://localhost:8080/mcp_test_v2.html")
    print("5Ô∏è‚É£  –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω (mcp_test / test123)")
    print("6Ô∏è‚É£  –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ MCP —Ñ—É–Ω–∫—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º Gemini AI!")
    print("\n" + "=" * 60)
    print("üéØ –¢–ï–ü–ï–†–¨ –°–ò–°–¢–ï–ú–ê –ò–°–ü–û–õ–¨–ó–£–ï–¢ GEMINI AI")
    print("=" * 60)
    print("\n‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
    print("   ‚úÖ –†–µ–∞–ª—å–Ω—ã–µ AI –æ—Ç–≤–µ—Ç—ã –æ—Ç Google Gemini")
    print("   ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω—ã —Ñ–∏–ª—å—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    print("   ‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π fallback –Ω–∞ Mock –ø—Ä–æ–≤–∞–π–¥–µ—Ä –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö")
    print("\nüí° Gemini API –∫–ª—é—á —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ backend/.env")
    print("=" * 60)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

